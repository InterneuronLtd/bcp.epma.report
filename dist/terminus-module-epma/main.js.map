{"version":3,"file":"main.js","mappings":"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":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/components.module.ts","./src/app/components/demo-admission-record/demo-admission-record.component.ts","./src/app/components/demo-admission-record/demo-admission-record.component.html","./src/app/components/drug-chart/drug-chart.component.ts","./src/app/components/drug-chart/drug-chart.component.html","./src/app/components/drug-chart/timer-helper.ts","./src/app/components/prescription-infusion-print-template/prescription-infusion-print-template.component.ts","./src/app/components/prescription-infusion-print-template/prescription-infusion-print-template.component.html","./src/app/components/prescription-non-infusion-print-template/prescription-non-infusion-print-template.component.ts","./src/app/components/prescription-non-infusion-print-template/prescription-non-infusion-print-template.component.html","./src/app/components/print-discharge/print-discharge.component.ts","./src/app/components/print-discharge/print-discharge.component.html","./src/app/components/template-number/template-number.component.ts","./src/app/components/template-number/template-number.component.html","./src/app/directives/number-to-words.pipe.ts","./src/app/models/EPMA.ts","./src/app/models/WarningServiceModal.ts","./src/app/models/allergy.model.ts","./src/app/models/encounter.model.ts","./src/app/models/filter.model.ts","./src/app/services/apirequest.service.ts","./src/app/services/app.service.ts","./src/app/services/authentication.service.ts","./src/app/services/datarequest.ts","./src/app/services/enum.ts","./src/app/services/helper.service.ts","./src/app/services/subjects.service.ts","./src/app/services/timeline-service.service.ts","./src/app/services/upsert-transaction-manager.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApirequestService } from './services/apirequest.service';\nimport { AppService } from './services/app.service';\nimport { SubjectsService } from './services/subjects.service';\nimport { Prescription, PrescriptionMedicaitonSupply } from \"src/app/models/EPMA\"\nimport { filter, filterparam, filterParams, filters, orderbystatement, selectstatement, action, DataContract } from './models/filter.model';\nimport moment from 'moment';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { modules, popovers, PrescriptionContext } from './services/enum';\nimport { DataRequest } from './services/datarequest';\n\nimport { v4 as uuid } from 'uuid';\nimport { TemplateNumberComponent } from './components/template-number/template-number.component';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n  title = 'terminus-module-epma';\n  noEncountersAvailable = false;\n  datePicker: boolean = false;\n  startDate;\n  endDate;\n  numberOfEmptyTemplates: number;\n  showPopOver: popovers = popovers.none;\n  showTitrationChart: popovers = popovers.none;\n  showChoosedate = false;\n\n  browserName: string;\n  browserVersion: any;\n  browserVersionSupported: any;\n  browserVersionError = false;\n  conflictuserid = \"\";\n  showPopOverPatientDrug: popovers;\n  showAdustInfusion: popovers = popovers.none;\n\n\n\n  @Input() set datacontract(value: DataContract) {\n    this.appService.personId = value.personId;\n    this.appService.apiService = value.apiService;\n    this.subjects.unload = value.unload;\n    this.initConfigAndGetMeta(this.appService.apiService);\n    this.showPrintIcon = false;\n    if (value.moduleAction)\n      this.subscriptions.add(value.moduleAction.subscribe((e) => {\n      }));\n    if (value.additionalInfo) {\n      let terminusmodule = value.additionalInfo.find(x => x.key == \"currentmodule\");\n      if (terminusmodule)\n        this.appService.currentTerminusModle = terminusmodule.value;\n    }\n  }\n\n  @Output() frameworkAction = new EventEmitter<string>();\n\n  subscriptions: Subscription = new Subscription();\n  loadDrugChart: number = 0;\n  currentmodule: modules = modules[\"app-drug-chart\"];\n  editingPrescription: Prescription;\n  clonePrescription: boolean = false;\n  cloningExternally: boolean = false;;\n\n  bsModalRef: BsModalRef;\n  groupFilterType: string = \"Basic\";\n  showdrugChart: boolean = false;\n  showPrescribingForm = false;\n  totalmetadatarequests = 15;\n  Showtherapies = \"Active\";\n  Sorttherapie = \"DESCRIPTION-ASC\";\n  FilterRoutesby = \"All routes\";\n  medicationAdministrationEmptyTemplate: any = false;\n  popover_prescriptioncontext: any;\n  AllRoutes: string[] = [];\n  isCalledOnce: boolean = false;\n  showPrintIcon = false;\n  printing = false;\n\n  basicgrouping = ['Stat', 'VTE', 'Antimicrobials', 'Diabetics', 'Variable/Continuous infusion', 'PRN', 'IV Fluid', 'Regular drugs']\n\n  @ViewChild('open_refreshmessage') open_refreshmessage: ElementRef;\n  @ViewChild('close_pform') close_pform: ElementRef;\n\n  isLoading = false;\n  showChart = false;\n\n\n\n  constructor(private subjects: SubjectsService,\n    public appService: AppService,\n    private apiRequest: ApirequestService,\n    private modalService: BsModalService,\n    private cd: ChangeDetectorRef,\n    private dr: DataRequest) {\n\n\n\n  }\n\n  generateChart() {\n    this.appService.reset();\n    this.showChart = false;\n    this.cd.detectChanges();\n    this.showChart = true;\n    this.cd.detectChanges();\n    this.InitApp()\n  }\n\n\n  ngOnDestroy() {\n    this.appService.logToConsole(\"app component being unloaded\");\n    if (this.appService.warningService) {\n      this.appService.warningService.contexts.forEach(w => {\n        w.resetWarningService();\n      });\n    }\n    this.appService.encounter = null;\n    this.appService.personId = null;\n    this.appService.isCurrentEncouner = null;\n    this.appService.reset();\n    this.subscriptions.unsubscribe();\n    this.dr.ngOnDestroy();\n\n    this.appService.warningService = null;\n    this.appService = null;\n\n    this.subjects.unload.next(\"app-epma\");\n  }\n\n\n\n  InitApp() {\n    let encounter;\n    let input = <HTMLInputElement>document.getElementById(\"encounter_input\");\n    if (input)\n      encounter = JSON.parse(input.value)\n\n    this.appService.encounter = encounter\n    this.appService.personId = encounter.person_id;\n    this.appService.encounter = encounter;\n    this.appService.lenghOfStay = this.appService.GetDurationBetweenDates(this.appService.encounter.admitdatetime, moment())\n    this.appService.personDOB = encounter.dateofbirth;\n\n    let value: any = {};\n    value.authService = {};\n    value.authService.user = {};\n    let auth = this.apiRequest.authService;\n    auth.getToken().then((token) => {\n      value.authService.user.access_token = token;\n      this.initConfigAndGetMeta(value);\n    });\n\n  }\n\n  initConfigAndGetMeta(value: any) {\n    this.appService.apiService = value;\n    this.dr.subscriptions = new Subscription();\n    this.subscriptions.add(this.apiRequest.getRequest(\"./assets/config/EPMAConfig.json?V\" + Math.random()).subscribe(\n      (response) => {\n        this.appService.appConfig = response;\n        this.appService.baseURI = this.appService.appConfig.uris.baseuri;\n        this.appService.enableLogging = this.appService.appConfig.enablelogging;\n        this.browserVersionSupported = this.appService.appConfig.AppSettings.minSafariVersionSupported;\n        this.appService.buffertimeAmber = this.appService.appConfig.bufferTime.buffertimeAmber;\n        this.appService.criticalDrugbuffertimeAmber = this.appService.appConfig.bufferTime.buffertime_criticalDrug;\n        this.appService.EnableDischargeSummaryComplete = this.appService.appConfig.EnableDischargeSummaryComplete;\n        this.appService.bufferAdministered = this.appService.appConfig.bufferTime.bufferAdministered;\n        this.appService.pleaseResupplyStockValidation = this.appService.appConfig.pleaseResupplyStockValidation;\n        this.appService.isReasonForChangeReuired = this.appService.appConfig.isReasonForChangeReuired;\n        this.appService.platfromServiceURI = this.appService.appConfig.uris.platformserviceuri;\n        this.appService.DCGroups = this.appService.appConfig.AppSettings.DCGroups;\n        this.appService.administrationTimeDiffInMinute = this.appService.appConfig.AppSettings.administrationTimeDiffInMinute;\n\n      }));\n  }\n\n\n  GetMetaData() {\n    if (this.appService.apiService) {\n      this.appService.loggedInUserName = \"BCP.EPMA\";\n\n      this.dr.getAllPrescriptionMeta(() => {\n        this.getPrescriptionsForCurrentEncounter();\n        this.dr.getSupplyRequest(() => { });\n        this.dr.GetMedicationSupply(() => { });\n        this.dr.GetWitnesAuthentication(() => { });\n        this.dr.GetPrescriptionEvent(() => { });\n        this.dr.GetNursingInstruction(() => { });\n      });\n    }\n  }\n\n  public GetDataVersion(cb: () => any) {\n    this.apiRequest.getRequest(`${this.appService.baseURI}/GetSynchronousPostVersionNumber/?personId=${this.appService.personId}&moduleName=${this.appService.modulename}`).subscribe(\n      (response) => {\n        this.appService.dataversion = response;\n        console.log(\"DataVersion: \" + response);\n        cb();\n      }\n    )\n  }\n\n  getPrescriptionsForCurrentEncounter() {\n    this.appService.Prescription = [];\n    this.appService.FilteredPrescription = [];\n    this.appService.TherapyPrescription = [];\n\n    // let dataRequest = new DataRequest(this.apiRequest, this.appService);\n    this.dr.getAllPrescription(() => {\n      this.dr.getAdminstrations(() => {\n        this.appService.Prescription.forEach(p => this.appService.UpdatePrescriptionCompletedStatus(p));\n        this.dr.getReminders(() => {\n          this.dr.getPharmacyReviewStatus(() => {\n            this.appService.isAppDataReady = true;\n\n            this.appService.Prescription.forEach(p => {\n              var curTime = moment(moment(new Date()).toDate()).add(-5, \"minutes\").format(\"YYYYMMDDHHmm\");\n              if (!((p.prescriptionstatus_id == \"f1e191f1-3985-4d2f-b96b-0b1b48fa7714\" || p.prescriptionstatus_id == \"5d78c6a6-2962-4dcd-8fd0-9824ef09135f\") && moment(new Date(p.lastmodifiedon)).format(\"YYYYMMDDHHmm\") < curTime)) {\n                this.appService.FilteredPrescription.push(p);\n              }\n            });\n\n            // get vtm units\n            this.appService.VtmUnits = [];\n            this.subscriptions.add(this.apiRequest.getRequest(\"./assets/config/vtmunits.json?V\" + Math.random())\n              .subscribe(\n                (response) => {\n                  this.appService.VtmUnits = response;\n                  this.changeGroupType(this.groupFilterType);\n\n                }));\n          });\n        });\n      });\n    });\n  }\n\n\n  changeGroupType(option: any) {\n    this.showdrugChart = false;\n    this.groupFilterType = option;\n\n    let prescriptionroutes = [].concat(...this.appService.Prescription.map(p => p.__routes));\n    // let prescriptionroutes = this.appService.Prescriptionroutes.filter(x => x.isdefault == true);\n    this.appService.Choosenfilterdate = new Date();\n    this.AllRoutes = prescriptionroutes.map(item => item.route)\n      .filter((value, index, self) => self.indexOf(value) === index);\n\n    if (option == \"Basic\") {\n\n      this.appService.DrugeGroupsType = []\n      this.appService.DrugeGroupsType = this.appService.appConfig.AppSettings.basicgrouping;\n\n    }\n\n    // else if (option == \"custom group\") {\n    //   let primaryMedications = [].concat(...this.appService.Prescription.map(p => p.__medications)).filter(x => x.isprimary == true);\n    //   this.appService.DrugeGroupsType = primaryMedications.map(item => item.customgroup)\n    //     .filter((value, index, self) => self.indexOf(value) === index);\n\n    // }\n    else if (option == \"Base\") {\n      if (this.appService.appConfig.AppSettings.UseStoredClassification) {\n        let primaryMedications = [].concat(...this.appService.Prescription.map(p => p.__medications)).filter(x => x.isprimary == true);\n        this.appService.DrugeGroupsType = primaryMedications.map(item => item.classification)\n          .filter((value, index, self) => self.indexOf(value) === index);\n      }\n      else {\n        let allprescriptionsfdbgroups = [].concat(...this.appService.Prescription.map(\n          (p) => {\n            if (!p.__drugcodes) {\n              return [{ \"additionalCodeSystem\": \"FDB\", \"additionalCodeDesc\": null }]\n            }\n            else if (!p.__drugcodes.find(dc => dc.additionalCodeSystem == \"FDB\")) {\n              return [{ \"additionalCodeSystem\": \"FDB\", \"additionalCodeDesc\": null }]\n            }\n            else {\n              return p.__drugcodes;\n            }\n          })).filter(x => x.additionalCodeSystem == \"FDB\");\n        this.appService.DrugeGroupsType = allprescriptionsfdbgroups.map(item => item.additionalCodeDesc)\n          .filter((value, index, self) => self.indexOf(value) === index);\n      }\n\n      this.appService.DrugeGroupsType.sort();\n    }\n    else if (option == \"Route\") {\n\n      this.appService.DrugeGroupsType = this.AllRoutes;\n      this.appService.DrugeGroupsType.sort();\n    }\n\n    for (let i = 0; i < this.appService.DrugeGroupsType.length; i++) {\n      if (this.appService.DrugeGroupsType[i] == null || this.appService.DrugeGroupsType[i].trim() == '') {\n        this.appService.DrugeGroupsType[i] = \"Others\";\n      }\n      this.appService.DrugeGroupsType = this.appService.DrugeGroupsType.map(item => item)\n        .filter((value, index, self) => self.indexOf(value) === index);\n\n    }\n\n    //this.sortPrescription(this.Sorttherapie);\n    this.appService.drugGroupOption = option;\n    this.cd.detectChanges();\n    this.showdrugChart = true;\n    this.filterDateAndRought(this.Showtherapies, this.FilterRoutesby);\n    // setTimeout(x => this.showdrugChart = true);\n\n  }\n\n  chooseDateclick(parameter: boolean) {\n    this.showdrugChart = false;\n    this.appService.FilteredPrescription = [];\n    this.showChoosedate = parameter;\n    if (!this.showChoosedate) {\n      this.appService.Choosenfilterdate = new Date();\n      this.filterDateAndRought(this.Showtherapies, this.FilterRoutesby);\n    }\n    else if (this.showChoosedate) {\n      let selectedDate = moment(this.appService.Choosenfilterdate);\n      selectedDate.set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0,\n      });\n\n\n\n      this.appService.changechoosenFilterDate = moment(selectedDate);\n      for (let prescription of this.appService.Prescription) {\n        let enddate = moment(this.appService.GetCurrentPosology(prescription).prescriptionenddate);\n        //let preStart = moment(null ? prescription.startdatetime : this.appService.encounter.sortdate);\n        let preStart = prescription.startdatetime == null ? moment(this.appService.encounter.sortdate) : moment(prescription.startdatetime)\n        for (let poso of prescription.__posology) {\n\n          if (moment(preStart).isSameOrAfter(moment(poso.prescriptionstartdate))) {\n            preStart = moment(poso.prescriptionstartdate)\n          }\n\n        }\n        if (prescription.prescriptionstatus_id == \"f1e191f1-3985-4d2f-b96b-0b1b48fa7714\" || prescription.prescriptionstatus_id == \"5d78c6a6-2962-4dcd-8fd0-9824ef09135f\") // if prestion is stop\n        {\n          if (moment(prescription.lastmodifiedon, \"YYYY-MM-DD\").isSameOrAfter(moment(selectedDate)))// and stop date is selected or greate\n          {\n            enddate = moment(selectedDate);\n          }\n          else {\n            enddate = moment(prescription.lastmodifiedon);\n          }\n        }\n        if (!enddate.isValid()) { // if enddate is null and not spot so end date is selected\n          enddate = selectedDate;\n        }\n        if (moment(preStart, \"YYYY-MM-DD\").isSameOrBefore(selectedDate, 'day') || moment(selectedDate, \"YYYY-MM-DD\").isSame(moment(), 'day')) {\n          if (this.Showtherapies == \"Active\") {\n            var curTime = moment(moment(new Date()).toDate()).add(-5, \"minutes\").format(\"YYYYMMDDHHmm\");\n            if (!((prescription.prescriptionstatus_id == \"f1e191f1-3985-4d2f-b96b-0b1b48fa7714\" || prescription.prescriptionstatus_id == \"5d78c6a6-2962-4dcd-8fd0-9824ef09135f\") && moment(new Date(prescription.lastmodifiedon)).format(\"YYYYMMDDHHmm\") < curTime)) {\n\n              if (prescription.__completed != true) {\n                this.appService.FilteredPrescription.push(<Prescription>prescription);\n              }\n              else if (moment(new Date(prescription.__completedOn)).format(\"YYYYMMDDHHmm\") > curTime) {\n                this.appService.FilteredPrescription.push(<Prescription>prescription);\n              }\n            }\n          }\n          else if (this.Showtherapies == \"stoped\") {\n\n            let enddate = moment(this.appService.GetCurrentPosology(prescription).prescriptionenddate);\n            if (!enddate.isValid()) {\n              enddate = moment();\n            }\n            if (prescription.__completed == true) {\n              this.appService.FilteredPrescription.push(<Prescription>prescription);\n            }\n            else if (prescription.prescriptionstatus_id != \"5750c99f-75ec-4b33-b10c-782a000cc360\" && prescription.prescriptionstatus_id != \"fe406230-be68-4ad6-a979-ef15c42365cf\" && prescription.prescriptionstatus_id != \"fd8833de-213b-4570-8cc7-67babfa31393\" && prescription.prescriptionstatus_id != \"63e946cd-b4a4-4f60-9c18-a384c49486ea\") {\n\n              this.appService.FilteredPrescription.push(<Prescription>prescription);\n\n            }\n\n          }\n          else if (this.Showtherapies == \"ALL\") {\n\n            this.appService.FilteredPrescription.push(<Prescription>prescription);\n\n          }\n\n        }\n      }\n\n      this.sortPrescription(this.Sorttherapie);\n      this.cd.detectChanges();\n      this.showdrugChart = true;\n    }\n  }\n\n  filterDateAndRought(therapietype: any, routerupe) {\n    this.appService.changechoosenFilterDate = moment();\n    this.Showtherapies = therapietype;\n    this.FilterRoutesby = routerupe;\n    this.showdrugChart = false;\n    this.appService.FilteredPrescription = [];\n    if (this.Showtherapies == \"Active\") {\n\n      for (let prescription of this.appService.Prescription) {\n\n        var curTime = moment(moment(new Date()).toDate()).add(-5, \"minutes\").format(\"YYYYMMDDHHmm\");\n        if (!((prescription.prescriptionstatus_id == \"f1e191f1-3985-4d2f-b96b-0b1b48fa7714\" || prescription.prescriptionstatus_id == \"5d78c6a6-2962-4dcd-8fd0-9824ef09135f\") && moment(new Date(prescription.lastmodifiedon)).format(\"YYYYMMDDHHmm\") < curTime)) {\n          if (prescription.__completed != true) {\n            this.appService.FilteredPrescription.push(<Prescription>prescription);\n          }\n          else if (moment(new Date(prescription.__completedOn)).format(\"YYYYMMDDHHmm\") > curTime) {\n            this.appService.FilteredPrescription.push(<Prescription>prescription);\n          }\n        }\n      }\n    }\n    else if (this.Showtherapies == \"stoped\") {\n\n      // var lasttreeday = moment();\n      // lasttreeday = moment().subtract(2, \"days\");\n      // lasttreeday.set({ hour: 0, minute: 0, second: 0, millisecond: 0 });\n      for (let prescription of this.appService.Prescription) {\n        let enddate = moment(this.appService.GetCurrentPosology(prescription).prescriptionenddate);\n        if (!enddate.isValid()) {\n          enddate = moment();\n        }\n        if (prescription.__completed == true) {\n          this.appService.FilteredPrescription.push(<Prescription>prescription);\n        }\n        else if ((prescription.prescriptionstatus_id != \"5750c99f-75ec-4b33-b10c-782a000cc360\" && prescription.prescriptionstatus_id != \"fe406230-be68-4ad6-a979-ef15c42365cf\" && prescription.prescriptionstatus_id != \"fd8833de-213b-4570-8cc7-67babfa31393\" && prescription.prescriptionstatus_id != \"63e946cd-b4a4-4f60-9c18-a384c49486ea\")) {\n\n          this.appService.FilteredPrescription.push(<Prescription>prescription);\n\n        }\n      }\n    }\n    else if (this.Showtherapies == \"ALL\") {\n      for (let prescription of this.appService.Prescription) {\n\n        this.appService.FilteredPrescription.push(<Prescription>prescription);\n\n      }\n    }\n\n    else if (this.Showtherapies == \"Choose date\") {\n      let selectedDate = moment(this.appService.Choosenfilterdate);\n      selectedDate.set({\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0,\n      });\n      this.appService.changechoosenFilterDate = moment(selectedDate);\n      for (let prescription of this.appService.Prescription) {\n        let enddate = moment(this.appService.GetCurrentPosology(prescription).prescriptionenddate);\n        let preStart = moment(this.appService.GetCurrentPosology(prescription).prescriptionstartdate)\n\n        if (prescription.prescriptionstatus_id == \"f1e191f1-3985-4d2f-b96b-0b1b48fa7714\" || prescription.prescriptionstatus_id == \"5d78c6a6-2962-4dcd-8fd0-9824ef09135f\") // if prestion is stop\n        {\n          if (moment(prescription.lastmodifiedon, \"YYYY-MM-DD\").isSameOrAfter(moment(selectedDate)))// and stop date is selected or greate\n          {\n            enddate = moment(selectedDate);\n          }\n          else {\n            enddate = moment(prescription.lastmodifiedon);\n          }\n        }\n        if (!enddate.isValid()) { // if enddate is null and not spot so end date is selected\n          enddate = selectedDate;\n        }\n\n        if (moment(preStart, \"YYYY-MM-DD\").isSameOrBefore(selectedDate, 'day')) {\n\n          this.appService.FilteredPrescription.push(<Prescription>prescription);\n\n        }\n      }\n    }\n    /// Rought filter\n    if (this.FilterRoutesby != \"All routes\") {\n\n      this.appService.FilteredPrescription = this.appService.FilteredPrescription.filter(x => x.__routes.length != 0);\n      this.appService.FilteredPrescription = this.appService.FilteredPrescription.filter(x => x.__routes.find(d => d.isdefault == true).route == this.FilterRoutesby);\n\n    }\n\n    this.sortPrescription(this.Sorttherapie);\n    this.cd.detectChanges();\n    this.showdrugChart = true;\n\n  }\n  sortPrescription(sortby: any) {\n    this.showdrugChart = false;\n    this.Sorttherapie = sortby;\n    if (this.Sorttherapie == \"DESCRIPTION-ASC\") {\n      this.appService.FilteredPrescription.sort((a, b) => (a.__medications.find(x => x.isprimary).name > b.__medications.find(x => x.isprimary).name) ? 1 : ((b.__medications.find(x => x.isprimary).name > a.__medications.find(x => x.isprimary).name) ? -1 : 0));\n    }\n    else if (this.Sorttherapie == \"DESCRIPTION-DESC\") {\n      this.appService.FilteredPrescription.sort((b, a) => (a.__medications.find(x => x.isprimary).name > b.__medications.find(x => x.isprimary).name) ? 1 : ((b.__medications.find(x => x.isprimary).name > a.__medications.find(x => x.isprimary).name) ? -1 : 0));\n    }\n    else if (this.Sorttherapie == \"CREATED TIME-ASC\") {\n      this.appService.FilteredPrescription.sort((a, b) => (moment(this.appService.GetCurrentPosology(a).prescriptionstartdate) > moment(this.appService.GetCurrentPosology(b).prescriptionstartdate)) ? 1 : ((moment(this.appService.GetCurrentPosology(b).prescriptionstartdate) > moment(this.appService.GetCurrentPosology(a).prescriptionstartdate)) ? -1 : 0));\n    }\n    else if (this.Sorttherapie == \"CREATED TIME-DESC\") {\n\n      this.appService.FilteredPrescription.sort((b, a) => (new Date(this.appService.GetCurrentPosology(a).prescriptionstartdate) > new Date(this.appService.GetCurrentPosology(b).prescriptionstartdate)) ? 1 : ((new Date(this.appService.GetCurrentPosology(b).prescriptionstartdate) > new Date(this.appService.GetCurrentPosology(a).prescriptionstartdate)) ? -1 : 0));\n    }\n    this.cd.detectChanges();\n    this.showdrugChart = true;\n    this.appService.drugRouteOption = this.FilterRoutesby;\n    this.appService.drugSortOrder = this.Sorttherapie;\n    this.subjects.therapyOverview.next(undefined);\n\n  }\n\n  changechoosendate(daynumber: any) {\n    if (this.appService.Choosenfilterdate != null) {\n      this.isCalledOnce = false;\n      this.appService.Choosenfilterdate = new Date(Date.UTC(this.appService.Choosenfilterdate.getFullYear(), this.appService.Choosenfilterdate.getMonth(), this.appService.Choosenfilterdate.getDate() + daynumber));\n      this.chooseDateclick(true)\n    }\n\n\n\n  }\n  ChoosenfilterdateChange(value: Date): void {\n    //  this.appService.Choosenfilterdate = moment(value,\"DD/MM/YYYY\");\n    if (this.isCalledOnce && value != null) {\n      this.isCalledOnce = true;\n      !this.appService.chartScrolled && this.chooseDateclick(true)\n      this.appService.chartScrolled = false;\n\n    }\n  }\n  // Begin Therpay overview code\n  setNoOfDaysTherapy(number) {\n    this.appService.therapyCurrentDate = moment();\n    this.appService.therapyNoOfDays = number;\n    this.subjects.therapyOverview.next(undefined);\n  }\n  prevDaysTherapy() {\n    if (this.appService.therapyNoOfDays == 3) {\n      this.appService.therapyCurrentDate.add(-3, \"days\");\n    } else {\n      this.appService.therapyCurrentDate.add(-5, \"days\");\n    }\n    this.subjects.therapyOverview.next(undefined);\n  }\n  nextDaysTherapy() {\n    if (this.appService.therapyNoOfDays == 3) {\n      this.appService.therapyCurrentDate.add(3, \"days\");\n    } else {\n      this.appService.therapyCurrentDate.add(5, \"days\");\n    }\n    this.subjects.therapyOverview.next(undefined);\n  }\n  // End Therapy Overview\n\n  onDatePickerClose(event) {\n    this.isCalledOnce = true;\n  }\n\n  onDatePickerOpen(event) {\n    this.isCalledOnce = true;\n  }\n  makeId(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  CheckBannerWarnings(): boolean {\n    if (!this.appService.bannerWarningStatus) {\n      this.subjects.showBannerWarnings.next(undefined);\n      return false;\n    }\n    // else\n    //   if (!this.appService.isWeightCapturedForToday) {\n    //     this.openRecordWeightModal('D');\n    // } \n    // else if (!this.appService.isHeightCaptured) {\n    //   this.openRecordHeightModal('D');\n    // }\n    else {\n      if (this.appService.refWeightValue && this.appService.refHeightValue) {\n        this.appService.bodySurfaceArea = +(Math.sqrt(+this.appService.refWeightValue * +this.appService.refHeightValue) / 60).toFixed(2);\n      }\n    }\n    return true;\n  }\n\n\n\n\n\n\n\n \n  destroyRecordsTemplate() {\n    this.isLoading = false\n    this.medicationAdministrationEmptyTemplate = false;\n    this.startDate = '';\n    this.endDate = '';\n    this.numberOfEmptyTemplates = null;\n    this.printing = false;\n  }\n\n  updateDates(event) {\n    console.log(event);\n    this.datePicker = false;\n  }\n\n\n\n  openActivePrintingTemplate() {\n    this.isLoading = true;\n    this.dr.getHeightWeight(() => {\n      setTimeout(() => {\n        this.medicationAdministrationEmptyTemplate = 'active'\n      }, 100);\n    });\n\n  }\n\n  openCurrentPrintingTemplate() {\n    this.isLoading = true;\n    this.dr.getHeightWeight(() => {\n      setTimeout(() => {\n        this.medicationAdministrationEmptyTemplate = 'current'\n      }, 100);\n    });\n  }\n\n  getPrescriptionNumber() {\n    const config = {\n      backdrop: true,\n      ignoreBackdropClick: true,\n      class: 'modal-dialog-centered modal-sm',\n\n    };\n\n    this.bsModalRef = this.modalService.show(TemplateNumberComponent, config);\n    this.bsModalRef.content = {\n      saveDone: (templateNumber) => {\n        if (templateNumber) {\n          this.isLoading = true;\n          this.numberOfEmptyTemplates = templateNumber;\n          this.dr.getHeightWeight(() => {\n            setTimeout(() => {\n              this.medicationAdministrationEmptyTemplate = 'empty';\n            }, 100);\n          });\n\n        }\n      },\n      cancel: () => {\n        this.printing = false;\n      }\n\n    };\n\n  }\n\n  openActive() {\n    const config = {\n      backdrop: true,\n      ignoreBackdropClick: true,\n      class: 'modal-dialog-centered modal-sm',\n      initialState: {\n        errorMessage: \"\",\n        marType: \"active\"\n\n      }\n    };\n\n    this.bsModalRef = this.modalService.show(TemplateNumberComponent, config);\n    this.bsModalRef.content = {\n      saveDone: (templateNumber) => {\n        if (templateNumber) {\n          this.numberOfEmptyTemplates = templateNumber;\n          this.medicationAdministrationEmptyTemplate = 'active';\n        }\n      },\n      cancel: () => {\n        this.printing = false;\n      }\n    };\n\n  }\n\n\n  TriggerWarningUpdateCheck(cb: Function = null) {\n    if (this.appService.warningService && this.appService.warningServiceIPContext.loader != true) {\n      this.dr.TriggerWarningUpdateOnChanges(() => {\n        if (this.appService.warningServiceIPContext.existingWarningsStatus == false) {\n          this.subjects.showWarnings.next(undefined);\n        }\n        if (cb)\n          cb();\n      });\n    }\n  }\n\n  BannerWarningsLoaded() {\n    // if (this.appService.bannerWarningStatus == false) {\n    //   this.subjects.showBannerWarnings.next(undefined);\n    // }\n  }\n\n}\n\n\n","<div *ngIf=\"browserVersionError\">\n  <div class=\"alert alert-warning\" role=\"alert\">\n    This module is not supported by this browser ({{browserName}} {{browserVersion}}). Either upgrade your browser, try\n    to access this module on a different device or contact IT support.\n  </div>\n</div>\n<div>\n  <div *ngIf=\"isLoading\" id=\"pause\" class=\"d-flex align-items-center justify-content-center\">\n    <div id=\"spinner\"></div>\n  </div>\n\n  <div *ngIf=\"appService.isAppDataReady === true && currentmodule==='app-drug-chart'\">\n    <app-drug-chart [groupFilterType]=\"groupFilterType\" *ngIf=\"showdrugChart\">\n    </app-drug-chart>\n  </div>\n\n  <app-demo-admission-record class=\"pdfUseOnly\" [activeRecordedDays]=\"numberOfEmptyTemplates\"\n  [emptyTemplates]=\"numberOfEmptyTemplates\" [sdate]=\"startDate\" [edate]=\"endDate\"\n  *ngIf=\"medicationAdministrationEmptyTemplate\" [marType]=\"medicationAdministrationEmptyTemplate\"\n  (destroyTemplate)=\"destroyRecordsTemplate()\"></app-demo-admission-record>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { ComponentsModule } from './components/components.module';\nimport { Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { DatePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({ declarations: [\n        AppComponent\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        ComponentsModule,\n        FormsModule,\n        BsDatepickerModule.forRoot(),\n        BrowserAnimationsModule,\n        ToastrModule.forRoot({\n            timeOut: 10000,\n            preventDuplicates: true,\n        })], providers: [\n        DatePipe,\n        provideHttpClient(withInterceptorsFromDi())\n    ] })\nexport class AppModule {\n  constructor(private injector: Injector) {\n  }\n\n  ngDoBootstrap() {\n    const el = createCustomElement(AppComponent, { injector: this.injector });\n    customElements.define('app-epma', el);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { DrugChartComponent } from './drug-chart/drug-chart.component';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { NumberToWordsPipe } from '../directives/number-to-words.pipe';\n\nimport { PrintDischargeComponent } from './print-discharge/print-discharge.component';\nimport { TemplateNumberComponent } from './template-number/template-number.component';\nimport { DemoAdmissionRecordComponent } from './demo-admission-record/demo-admission-record.component';\nimport { PrescriptionInfusionPrintTemplateComponent } from './prescription-infusion-print-template/prescription-infusion-print-template.component';\nimport { PrescriptionNonInfusionPrintTemplateComponent } from './prescription-non-infusion-print-template/prescription-non-infusion-print-template.component';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n@NgModule({\n  declarations: [\n\n\n    DrugChartComponent,\n    NumberToWordsPipe,\n    PrintDischargeComponent,\n    TemplateNumberComponent,\n    DemoAdmissionRecordComponent,\n    PrescriptionInfusionPrintTemplateComponent,\n    PrescriptionNonInfusionPrintTemplateComponent,\n  ],\n  imports: [\n    PopoverModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    BrowserAnimationsModule,\n    BsDatepickerModule.forRoot(),\n    CommonModule, FormsModule, ModalModule.forRoot(), ReactiveFormsModule,\n    TabsModule.forRoot(),\n  ],\n  exports: [\n    DrugChartComponent,  \n    PrintDischargeComponent,\n    DemoAdmissionRecordComponent\n  ]\n})\nexport class ComponentsModule { }\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\nimport { AppService } from 'src/app/services/app.service';\nimport moment from 'moment';\nimport { Medication, Prescription } from 'src/app/models/EPMA';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { TimeerHelper } from '../drug-chart/timer-helper';\nimport { DataRequest } from 'src/app/services/datarequest';\nimport { ApirequestService } from 'src/app/services/apirequest.service';\nimport { AdministrationStatus, InfusionType } from 'src/app/services/enum';\nimport $ from \"jquery\";\n\n@Component({\n  selector: 'app-demo-admission-record',\n  templateUrl: './demo-admission-record.component.html',\n  styleUrls: ['./demo-admission-record.component.css']\n})\nexport class DemoAdmissionRecordComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input() marType: string = 'empty';\n  @Input() sdate;\n  @Input() edate;\n  @Input() emptyTemplates;\n  @Input() activeRecordedDays = 5;\n  @ViewChildren(\"activeTemplate\") divs: QueryList<ElementRef>;\n  @ViewChild(\"activeHeaderHeight\") headerDiv: ElementRef;\n  @ViewChildren(\"secondActivePart\") divs2: QueryList<ElementRef>;\n  @ViewChildren(\"presDescription\") presDescriptionDivs: QueryList<ElementRef>;\n  @ViewChildren(\"pageHeader\") pageHeaders: QueryList<ElementRef>;\n  @ViewChildren(\"pageFooter\") pageFooter: QueryList<ElementRef>;\n  @ViewChildren(\"pageFooter2\") pageFooter2: QueryList<ElementRef>;\n  @ViewChildren(\"headerSecondPart\") headerSecondPart: QueryList<ElementRef>;\n  @ViewChild(\"presParentNode\") parentNode: ElementRef;\n\n  @Output() destroyTemplate: EventEmitter<any> = new EventEmitter();\n  repeatArray = [1, 2, 3];\n  repeatArray2 = [];\n  dates = [];\n  pres1 = [1, 2, 3];\n  daysOfWeek = {\n    \"0\": \"Sunday\",\n    \"1\": \"Monday\",\n    \"2\": \"Tuesday\",\n    \"3\": \"Wednesday\",\n    \"4\": \"Thursday\",\n    \"5\": \"Friday\",\n    \"6\": \"Saturday\"\n  };\n  transferDoses = {};\n  presIds = [];\n  prescriptionHistory = [];\n  todaysDate;\n\n\n  prescription: Array<Prescription>;\n  prescriptionMapping = {};\n  prescriptionMappingForTemplate = {\n  };\n  objectKeys = Object.keys;\n  remainingProtocolDoses;\n  updateHeights: Array<any> = [];\n  metaprescriptionstatus: Array<any>;\n  prescriptionProperFlow = {};\n  patientDetails = { fullname: '', born: '', hospitalnumber: '', nhsnumber: '', allergies: '', dob: '', age: '', gender: '' };\n  partTwoPrescriptions = [];\n  encounterDetails = {\n    attendingdoctortext: '', assignedpatientlocationroom: '', assignedpatientlocationbay: '', assignedpatientlocationbed: '',\n    admitdatetime: '', admitdate: '', dayspassed: 0, assignedpatientlocationpointofcare: '', consultingdoctortext: ''\n  };\n  partTwoHeights = [];\n  medicationAdministration: any;\n  rateEventsdata = [];\n  headerSection: number = 0;\n  constructor(public timeerHelper: TimeerHelper, public appService: AppService, public hs: HelperService, private renderer: Renderer2, public dr: DataRequest, private apiRequest: ApirequestService) {\n\n  }\n\n  ngOnInit() {\n    ///////\n    const dateTo = moment().add(3, 'd');\n    dateTo.set({'hour':23,'minute': 59,'second':59})\n   \n    const startDate = moment().add(-1, 'd');\n    startDate.set({'hour':23,'minute': 59,'second':59})\n    this.timeerHelper.createEvents(startDate,dateTo, true);\n  \n    this.appService.reportData = this.appService.reportData.filter(function( element ) {\n      return element !== undefined;\n    });\n    var todayDate = moment();\n    todayDate.set({'hour':0,'minute': 0,'second':0});\n    this.rateEventsdata = this.appService.reportData.filter(e => {\n      return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\")\n      && moment(e.eventStart).isBetween(moment(todayDate),dateTo)\n    });\n\n    //////\n    this.prescription = [];\n    // this.appService.prescriptionEvent\n    this.appService.reportData = [];\n\n    this.appService.Prescription.forEach(pres => {\n      pres.comments = pres.comments ? pres.comments?.split(' ').join(' ') : null;\n    })\n    this.partTwoHeights = [];\n    this.medicationAdministration = this.appService.Medicationadministration.slice();\n    this.medicationAdministration.forEach(ma => {\n      ma['checked'] = false;\n    })\n    this.todaysDate = moment().format('DD-MM-YYYY');\n    // console.log('pres history', this.appService.prescriptionHistory);\n    // console.log('encounter', this.appService.encounterDetails);\n    // console.log('height, weight', this.appService.refHeightValue, this.appService.refWeightValue);\n    this.patientDetails = this.appService.patientDetails;\n    const splitAge = this.patientDetails.born?.split(' ');\n    this.patientDetails.dob = splitAge[0] + ' ' + splitAge[1] + ' ' + splitAge[2];\n    this.patientDetails.age = splitAge[3];\n    this.encounterDetails = this.appService.encounterDetails;\n    if(this.encounterDetails.assignedpatientlocationbay){\n    this.encounterDetails.assignedpatientlocationbay = (this.encounterDetails.assignedpatientlocationbay?? \"\").replace(new RegExp('-', 'g'), ' - ');\n    }\n    else{\n      this.encounterDetails.assignedpatientlocationbay=\"\";\n    }\n    if(this.encounterDetails.assignedpatientlocationbed){\n    this.encounterDetails.assignedpatientlocationbed = (this.encounterDetails.assignedpatientlocationbed?? \"\").replace(new RegExp('-', 'g'), ' - ');\n    }\n    else{\n      this.encounterDetails.assignedpatientlocationbed=\"\";\n    }\n    this.encounterDetails.admitdate = this.appService.encounterDetails.admitdatetime?.split('T')[0];\n    this.encounterDetails.dayspassed = moment(this.appService.encounterDetails['admitdate']).diff(moment(), 'days');\n    this.metaprescriptionstatus = this.appService.MetaPrescriptionstatus;\n    this.appService.FilteredPrescription.forEach(pres => {\n      this.prescriptionMapping[pres.prescription_id] = pres;\n    });\n    // console.log('this.prescriptionMapping',this.prescriptionMapping);\n    this.prescription = [];\n    // this.hs.getDosesPrescriptions(this.prescription);\n    this.dates.push(new Date());\n    for (let i = 1; i <= 3; i++) {\n      this.dates.push(new Date(this.dates[i - 1].getTime() + 86400000));\n    }\n\n    if (this.marType === 'empty') {\n      this.prescription = [];\n      for (let i = 0; i < this.emptyTemplates; i++) {\n        this.prescription.push(null);\n      }\n    } else if (this.marType === 'active') {\n      const dateFrom = moment().subtract(this.activeRecordedDays || 5, 'd');\n      this.timeerHelper.createEvents(dateFrom, moment(), true);\n      this.appService.reportData = this.appService.reportData.filter(function( element ) {\n        return element !== undefined;\n      });\n      const pastEvents = this.appService.reportData.filter(e => {\n        return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\") \n        && moment(e.eventStart).isBefore() && moment(e.eventStart).isAfter(dateFrom) && !e.content.includes(\"Administer_PRN\")\n      });\n      // const pastEvents = this.appService.events.filter(obj => {\n      //   return moment(obj.eventStart).isBefore() && moment(obj.eventStart).isAfter(dateFrom);\n      // });\n      // console.log(\"past events\", pastEvents);\n      const checkPresId = {};\n      const activeStartDate = moment().add(-1, 'd');\n      activeStartDate.set({'hour':23,'minute': 59,'second':59})\n      const dateToForFuture = moment().add(3, 'd');\n      this.timeerHelper.createEvents(activeStartDate, dateToForFuture, true);\n      const futureEvents = this.appService.reportData.filter(obj => {\n        const endDate = this.appService.GetCurrentPosology(this.prescriptionMapping[obj.prescription_id]).prescriptionenddate;\n        let endDateCheck = true;\n        // // for test\n        // if (!obj.isinfusion) {\n        //   return false;\n        // }\n        if (endDate) {\n          endDateCheck = moment().isBefore(endDate);\n        }\n\n        if (checkPresId[obj.prescription_id]) {\n          return false;\n        } else if (((!obj.eventEnd) || (moment(obj.eventEnd).isAfter(moment()))) && endDateCheck) {\n          checkPresId[obj.prescription_id] = 1;\n          return true;\n        }\n      });\n      this.appService.FilteredPrescription.forEach(obj => {\n        this.prescription.push(this.prescriptionMapping[obj.prescription_id]);\n      });\n\n      // console.log('prescription 1',this.prescription);\n      this.prescription = this.prescription.filter(x => (x.prescriptionstatus_id == \"fe406230-be68-4ad6-a979-ef15c42365cf\" || x.prescriptionstatus_id == \"fd8833de-213b-4570-8cc7-67babfa31393\" || x.prescriptionstatus_id == \"63e946cd-b4a4-4f60-9c18-a384c49486ea\"))\n\n      // console.log('prescription 2',this.prescription);\n      this.hs.getDosesPrescriptions(this.prescription);\n      if(this.prescription.length > 0)\n      {\n        this.protocolGetDay();\n      }\n      \n      // console.log(\"pres dictionary\", this.hs.prescriptionDictionary);\n      this.distributeEvents(pastEvents);\n\n\n    } else if (this.marType === 'report') {\n      const reportStartDate = moment(this.sdate).subtract(1,'d');\n      reportStartDate.set({'hour':23,'minute': 59,'second':59})\n      const reportEndDate = moment(this.edate);\n      reportEndDate.set({'hour':23,'minute': 59,'second':59})\n      this.timeerHelper.createEvents(reportStartDate, reportEndDate, true);\n      this.appService.reportData = this.appService.reportData.filter(function( element ) {\n        return element !== undefined;\n      });\n      const rangeEvents = this.appService.reportData.filter(e => {\n        return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") && !e.content.includes(\"Administer_PRN\")\n        && !e.dose_id.includes(\"infusionevent\") && (moment(e.eventStart).isSameOrAfter(this.sdate, 'day') && moment(e.eventStart).isSameOrBefore(this.edate, 'day'))\n      });\n      // const rangeEvents = this.appService.reportData.filter(obj => {\n      //   return moment(obj.eventStart).isSame(this.sdate, 'day') || moment(obj.eventStart).isSame(this.edate, 'day')\n      //     || (moment(obj.eventStart).isAfter(this.sdate, 'day') && moment(obj.eventStart).isBefore(this.edate, 'day'))\n      // });\n      this.distributeEvents(rangeEvents);\n\n    } else {\n      var todayDate = moment().add(-1,'d');\n      this.timeerHelper.createEvents(todayDate, moment(), true);\n      this.appService.reportData = this.appService.reportData.filter(function( element ) {\n        return element !== undefined;\n      });\n      const todayEvents = this.appService.reportData.filter(e => {\n        return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") && !e.content.includes('Administer_PRN')\n          && moment().isSame(e.eventStart, 'day')\n      });\n      // const todayEvents = this.appService.events.filter(e => {\n      //   return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") \n      //   && moment().isSame(e.eventStart, 'day')\n      // });\n      // const todayEvents = this.appService.events.filter(obj => {\n      //   return moment().isSame(obj.eventStart, 'day');\n      // });\n      this.distributeEvents(todayEvents);\n    }\n\n  }\n\n  getPrescriptionStatus(pres: Prescription | { prescriptionstatus_id: string }) {\n    var status = this.metaprescriptionstatus.find(x => x.prescriptionstatus_id == pres.prescriptionstatus_id);\n    if (status)\n      return this.metaprescriptionstatus.find(x => x.prescriptionstatus_id == pres.prescriptionstatus_id).status;\n    else\n      return \"active\";\n  }\n\n  ngAfterViewInit() {\n    this.updateHeights.forEach(h => {\n      // const filteredDivHeight = this.divs.filter((el, ind) => ind === h[0])[0].nativeElement.offsetHeight;\n      // const filterPresHeight = this.presDescriptionDivs.filter((el, ind) => ind === h[0])[0].nativeElement.offsetHeight;\n      // let extraRowsHeight;\n      // let presDivHeight;\n      // const filteredDivHeight = this.divs.filter((el, ind) => ind === h[0])[0].nativeElement.offsetHeight;\n      let extraRowsHeight;\n      let presDivHeight;\n      if (h[1] > 5) {\n        extraRowsHeight = (h[1] * 15);\n        presDivHeight = (h[1] + 6) * 15;\n      } else {\n        extraRowsHeight = h[1] * 30;\n        presDivHeight = (h[1] + 6) * 30\n      }\n\n      // const extraHeightAdded = (filteredDivHeight + extraRowsHeight);\n      // this.renderer.setStyle(this.divs.filter((el, i) => i === h[0])[0].nativeElement, \"height\", extraHeightAdded + 'px');\n      // this.renderer.setStyle(this.presDescriptionDivs.filter((el, i) => i === h[0])[0].nativeElement, \"height\", presDivHeight + 30 + 'px');\n    })\n    let occupied = 800;\n    let pageNumber = 0;\n    if (this.marType === 'active' || this.marType === 'empty') {\n      this.divs.forEach((div, index) => {\n        let filteredDiv;\n        if (index > 0) {\n          filteredDiv = this.divs.filter((el, i) => i === index - 1)[0].nativeElement;\n        }\n        // console.log('Div' + pageNumber + ' ' + filteredDiv);\n        // console.log('Div' + pageNumber + ' ' + div.nativeElement.offsetHeight);\n        if (filteredDiv && (occupied - div.nativeElement.offsetHeight < 0 || (index > 0 && filteredDiv.offsetHeight > 260))) {\n\n          const height = filteredDiv.offsetHeight + occupied;\n          // this.renderer.setStyle(filteredDiv, \"height\", height + 'px');\n          const pageHeaderDiv = this.pageHeaders.filter((el, ind1) => ind1 === index)[0].nativeElement;\n          // this.renderer.setStyle(pageHeaderDiv, 'visibility', 'visible');\n          const pageFooterDiv = this.pageFooter.filter((el, ind1) => ind1 === index - 1)[0].nativeElement;\n          const span = this.renderer.createElement('span');\n\n          const text = this.renderer.createText(`Page ${pageNumber + 1}`);\n          this.renderer.appendChild(span, text);\n\n          this.renderer.setAttribute(span, 'id', `partOnePage${pageNumber + 1}`);\n          this.renderer.appendChild(pageFooterDiv, span);\n          // this.renderer.setStyle(pageFooterDiv, 'visibility', 'hidden');\n          const xHeight = !pageNumber ? (height - 280) : (height - 100);\n          // this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + 'px');\n          occupied = 800;\n          pageNumber += 1;\n        }\n\n        // this.renderer.setStyle(div.nativeElement, \"margin-top\", \"10px\");\n        occupied -= 10;\n        occupied -= div.nativeElement.offsetHeight;\n        if (index === this.divs.length - 1) {\n          const filteredDiv = this.divs.filter((el, i) => i === index)[0].nativeElement;\n          const height = filteredDiv.offsetHeight + occupied;\n          // this.renderer.setStyle(filteredDiv, \"height\", height + 'px');\n        }\n      });\n      {\n        let lastIndex = this.divs.length - 1;\n        if(this.pageFooter.filter((el, ind1) => ind1 === lastIndex).length > 0)\n        {\n          const pageFooterDiv = this.pageFooter.filter((el, ind1) => ind1 === lastIndex)[0].nativeElement;\n          const span = this.renderer.createElement('span');\n          const text = this.renderer.createText(`Page ${pageNumber + 1}`);\n          this.renderer.appendChild(span, text);\n          this.renderer.setAttribute(span, 'id', `partOnePage${pageNumber + 1}`);\n          this.renderer.appendChild(pageFooterDiv, span);\n        }\n        // this.renderer.setStyle(pageFooterDiv, 'visibility', 'hidden');\n        let xHeight = 210;\n        if (occupied > 200) {\n          xHeight = 480;\n        }\n        // this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + 'px');\n        occupied = 595;\n        pageNumber += 1;\n      }\n      let currTime = moment(moment()).format('HH:mm');\n      for (let l = 0; l < pageNumber; l++) {\n\n        const el = document.getElementById(`partOnePage${l + 1}`);\n        // el.textContent = `Page ${l + 1} of ${pageNumber}   Time: ${currTime}`;\n      }\n      if (this.headerDiv && occupied - this.headerDiv.nativeElement.offsetHeight < 0) {\n        const filteredDiv = this.divs.filter((el, i) => i === this.divs.length - 1)[0].nativeElement.offsetHeight;\n        const height = filteredDiv + occupied;\n        // this.renderer.setStyle(this.divs.filter((el, i) => i === this.divs.length - 1)[0].nativeElement, \"height\", height + 'px');\n        occupied = 595;\n      }\n    }\n    if (this.marType !== 'empty') {\n      this.renderer.setStyle(this.headerDiv.nativeElement, \"margin-top\", \"10px\");\n      occupied -= 10;\n      occupied -= this.headerDiv.nativeElement.offsetHeight;\n      pageNumber = 0;\n\n\n      // let pageHeight = 595;      \n\n      // this.divs.forEach((div, index) => {\n      //   if (index > 0 && (pageHeight - div.nativeElement.offsetHeight < 60 || (pageHeight < 200))) {\n      //     const filteredDiv = this.divs.filter((el, i) => i === index - 1)[0].nativeElement.offsetHeight;\n      //     const height = filteredDiv + pageHeight;\n      //     this.renderer.setStyle(this.divs.filter((el, i) => i === index - 1)[0].nativeElement, \"height\", height + 'px');\n      //     const pageHeaderDiv = this.headerSecondPart.filter((el, ind1) => ind1 === index)[0].nativeElement;\n      //     this.renderer.setStyle(pageHeaderDiv, 'display', 'block');\n      //     const pageFooterDiv = this.pageFooter2.filter((el, ind1) => ind1 === index - 1)[0].nativeElement;\n      //     const span = this.renderer.createElement('span');\n      //     const text = this.renderer.createText(`Page ${pageNumber + 1}`);\n      //     this.renderer.appendChild(span, text);\n      //     this.renderer.setAttribute(span, 'id', `partTwoPage${pageNumber + 1}`);\n      //     this.renderer.appendChild(pageFooterDiv, span);\n      //     this.renderer.setStyle(pageFooterDiv, 'visibility', 'visible');\n      //     let xHeight = (height - 200);\n      //     if (xHeight > 80) {\n      //       xHeight = 45;\n      //     }\n      //     if (this.marType === 'report' || this.marType === 'current') {\n      //       this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + pageHeight - 100 + 'px');\n      //     } else {\n      //       this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + pageHeight - 60 + 'px');\n      //     }\n\n      //     pageHeight = 595;\n      //     pageNumber += 1;\n      //   }\n\n      //   this.renderer.setStyle(div.nativeElement, \"margin-top\", \"10px\");\n      //   pageHeight -= 10;\n      //   pageHeight -= div.nativeElement.offsetHeight;\n      // });\n\n\n      this.divs2.forEach((div, index) => {\n        if (index > 0 && (occupied - div.nativeElement.offsetHeight < 60 || (occupied < 200))) {\n          const filteredDiv = this.divs2.filter((el, i) => i === index - 1)[0].nativeElement.offsetHeight;\n          const height = filteredDiv + occupied;\n          // console.log('filteredDiv',filteredDiv)\n          // console.log('height',height)\n          // this.renderer.setStyle(this.divs2.filter((el, i) => i === index - 1)[0].nativeElement, \"height\", (height - 100) + 'px');\n          const pageHeaderDiv = this.headerSecondPart.filter((el, ind1) => ind1 === index)[0].nativeElement;\n          this.renderer.setStyle(pageHeaderDiv, 'display', 'block');\n          const pageFooterDiv = this.pageFooter2.filter((el, ind1) => ind1 === index - 1)[0].nativeElement;\n          const span = this.renderer.createElement('span');\n          const text = this.renderer.createText(`Page ${pageNumber + 1}`);\n          this.renderer.appendChild(span, text);\n          this.renderer.setAttribute(span, 'id', `partTwoPage${pageNumber + 1}`);\n          this.renderer.appendChild(pageFooterDiv, span);\n          this.renderer.setStyle(pageFooterDiv, 'visibility', 'hidden');\n          let xHeight = (height - 200);\n          if (xHeight > 80) {\n            xHeight = 45;\n          }\n          if (this.marType === 'report' || this.marType === 'current') {\n            // this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + occupied - 100 + 'px');\n          } else {\n            // this.renderer.setStyle(pageFooterDiv, 'margin-top', xHeight + occupied - 60 + 'px');\n          }\n\n          occupied = 555;\n          pageNumber += 1;\n        }\n\n        this.renderer.setStyle(div.nativeElement, \"margin-top\", \"10px\");\n        occupied -= 10;\n        occupied -= div.nativeElement.offsetHeight;\n\n      });\n      {\n        let lastIndex = this.divs2.length - 1;\n        if(this.divs2.filter((el, i) => i === lastIndex).length > 0)\n        {\n          const filteredDiv = this.divs2.filter((el, i) => i === lastIndex)[0].nativeElement.offsetHeight;\n          const height = filteredDiv + occupied;\n          let xHeight = (height - 300);\n        }\n        if(this.pageFooter2.filter((el, ind1) => ind1 === lastIndex).length > 0)\n        { \n          const pageFooterDiv = this.pageFooter2.filter((el, ind1) => ind1 === lastIndex)[0].nativeElement;\n          const span = this.renderer.createElement('span');\n          const text = this.renderer.createText(`Page ${pageNumber + 1}`);\n          this.renderer.appendChild(span, text);\n          this.renderer.setStyle(span, 'color', 'white');\n          this.renderer.setAttribute(span, 'id', `partTwoPage${pageNumber + 1}`);\n          this.renderer.appendChild(pageFooterDiv, span);\n          this.renderer.setStyle(pageFooterDiv, 'visibility', 'visible');\n          \n          this.renderer.setStyle(pageFooterDiv, 'margin-top',0 + 'px');\n        }\n       \n       \n        occupied = 565;\n        pageNumber += 1;\n      }\n      // let currTime = moment(moment()).format('HH:mm');\n      // for (let l = 0; l < pageNumber; l++) {\n      //   const el = document.getElementById(`partTwoPage${l + 1}`);\n      //   el.textContent = `Page ${l + 1} of ${pageNumber}  Time: ${currTime}`;\n      // }\n    }\n  }\n\n\n  distributeEvents(events: Array<any>) {\n    this.prescriptionMappingForTemplate = {};\n    events=events.filter(x=> !x.dose_id.includes(\"infusionevent\"))\n    events.forEach(obj => {\n     \n      const status = this.getPrescriptionStatus(this.prescriptionMapping[obj.prescription_id]);\n      this.prescriptionMappingForTemplate[obj.prescription_id] ? '' : this.prescriptionMappingForTemplate[obj.prescription_id] = { status };\n      this.prescriptionMappingForTemplate[obj.prescription_id]['name'] = this.prescriptionMapping[obj.prescription_id].__medications[0].name;\n      this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'] ? '' : this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'] = [];\n      const updatedObj = this.checkMedicationAdministered(obj);\n      let administration = this.medicationAdministration.find(x => x.logicalid == updatedObj.dose_id);\n      if (administration && !administration.isenterinerror) {\n        let administrationStatus = administration.adminstrationstatus;\n        if (administrationStatus == AdministrationStatus.selfadminister)\n          if(this.prescriptionMapping[obj.prescription_id].infusiontype_id == \"rate\")\n          {\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'STARTED' });\n          }\n          else{\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'SELF ' + ' - ' + 'ADMINISTERED' });\n          }\n        else if (administrationStatus == AdministrationStatus.notgiven)\n          if(this.prescriptionMapping[obj.prescription_id].infusiontype_id == \"rate\")\n          {\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'STARTED' });\n          }\n          else{\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'NOT GIVEN' });\n          }\n        else if (administrationStatus == AdministrationStatus.defer)\n          if(this.prescriptionMapping[obj.prescription_id].infusiontype_id == \"rate\")\n          {\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'STARTED' });\n          }\n          else{\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'DEFERRED' });\n          }\n        else {\n          if(this.prescriptionMapping[obj.prescription_id].infusiontype_id == \"rate\")\n          {\n            if(updatedObj.content.includes('BolusAdministrationCompleted'))\n            {\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'GIVEN' });\n            }\n            else{\n              this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'STARTED' });\n            }\n          }\n          else {\n            this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'GIVEN' });\n          }\n          \n        }\n      } else {\n        if(updatedObj.content.includes('InfusionCompleted'))\n        {\n          this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'COMPLETED' })\n        }\n        else {\n          if(moment() > updatedObj.eventStart)\n          {\n            if(updatedObj.doctorsorder || updatedObj.titration)\n            {\n              if(updatedObj.content.includes('Administration_requires_doctors_confirmation_Late'))\n              {\n                let ptcTime = updatedObj.time.split('-');\n                this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: ptcTime[0], stat: 'PTC' })\n              }\n              else if(updatedObj.content.includes('Late_Administration'))\n              {\n                this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'MISSED' })\n              }\n            }\n            else {\n              if(this.prescriptionMapping[obj.prescription_id].infusiontype_id == \"rate\" && updatedObj.dose_id.includes(\"end_\")){\n                \n                let originalDoseStartTime = this.appService.Prescription.find(x => x.prescription_id == updatedObj.prescription_id).__posology.find(y => y.posology_id == updatedObj.posology_id).__dose.find(z => z.dose_id == updatedObj.dose_id.split(\"_\")[2]).dosestartdatetime;\n                let originalDoseEndTime = this.appService.Prescription.find(x => x.prescription_id == updatedObj.prescription_id).__posology.find(y => y.posology_id == updatedObj.posology_id).__dose.find(z => z.dose_id == updatedObj.dose_id.split(\"_\")[2]).doseenddatatime;\n                \n                var a = moment(originalDoseEndTime);//now\n                var b = moment(originalDoseStartTime);\n                var convertToMinites = a.diff(b, 'minutes');\n\n                let startDate = moment(updatedObj.eventStart).subtract(convertToMinites, \"minutes\");\n\n                let starsubstring= 'start_'+moment(startDate).format('YYYYMMDDHHmm') + \"_\" + updatedObj.dose_id.split(\"_\")[2].toString();\n                \n                \n                // let startevent=events.filter(x=>x.dose_id.includes(updatedObj.dose_id.split(\"_\")[2]) && x.dose_id.includes(starsubstring))\n                // if(startevent){\n                //   startevent=this.appService.events.filter(x=>x.dose_id.includes(updatedObj.dose_id.split(\"_\")[2]) && x.dose_id.includes(starsubstring))\n                // }\n                // let startevent=events.filter(x=>x.dose_id.includes(updatedObj.dose_id.split(\"_\")[2]) && x.dose_id.includes(starsubstring))\n\n                let startadministred = this.medicationAdministration.find(x => x.logicalid == starsubstring)\n                if(startadministred){\n                  // if(startadministred.adminstrationstatus != 'given') {\n                  //   this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: startadministred.adminstrationstatus.toUpperCase() })\n                  // }\n                  // else {\n                    this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'OVERDUE' })\n                  // }\n                  \n                }else{\n                  this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'MISSED' })\n                }\n  \n               }\n               else{\n                if(obj.prn) {\n                  if(administration && administration.isenterinerror && this.marType == 'current') {\n                    this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: '', time: '', stat: '' })\n                  }   \n                  else if(administration && administration.isenterinerror && this.marType != 'current') {\n                    // this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: '', time: '', stat: '' })\n                  } \n                }\n                else {\n                  if(administration && !administration.isenterinerror) {\n                    this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'MISSED' })\n                  } \n                  else {\n                    this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'MISSED' })\n                  } \n                }\n               }\n            }\n          }\n          else {\n            if(updatedObj.doctorsorder || updatedObj.titration)\n            {\n              if(updatedObj.content.includes('Administration_requires_doctors_confirmation_Planned') || updatedObj.content.includes('Administration_requires_doctors_confirmation_Due'))\n              {\n                let ptcTime = updatedObj.time.split('-');\n                this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: ptcTime[0], stat: 'PTC' })\n              }\n            }\n            else {\n              this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'PLANNED' })\n            }\n            \n          }\n          \n        }\n        \n      }\n\n      // if (updatedObj.content.includes(\"Administration_Completed\") || updatedObj.given) {\n      //   let administrationStatus = this.appService.Medicationadministration.find(x => x.logicalid == updatedObj.dose_id).adminstrationstatus;\n      //   if(administrationStatus == 'self-administer')\n      //     this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'SELF ' + ' - ' + 'ADMINISTERED' });\n      //   else\n      //     this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, sort: updatedObj.sort, stat: 'GIVEN' });\n      // } else if (updatedObj.content.includes(\"Administration_Defered\")) {\n      //   this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'DEFERRED' });\n      // } else if (updatedObj.content.includes(\"Planned_Administration\")) {\n      //   this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'PLANNED' });\n      // } else if (updatedObj.content.includes(\"Late_Administration\")) {\n      //   this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'NOT GIVEN' });\n      // } else {\n      //   this.prescriptionMappingForTemplate[obj.prescription_id]['prescription_information'].push({ date: updatedObj.date, time: updatedObj.time, stat: 'PLANNED' })\n      // }\n    });\n    for (let key in this.prescriptionMappingForTemplate) {\n      this.prescriptionMappingForTemplate[key]['prescription_information'].sort(function (a, b) {\n        const bDate = b.date?.split('-').reverse().join('-');\n        const aDate = a.date?.split('-').reverse().join('-');\n        return bDate.localeCompare(aDate) || b.time.localeCompare(a.time);\n      });\n      // if (this.prescriptionMappingForTemplate[key]['prescription_information'].length > 16) {\n      //   const noOfArrays = Math.ceil(this.prescriptionMappingForTemplate[key]['prescription_information'].length / 16);\n      //   for (let i = 0; i < noOfArrays; i++) {\n      //     this.partTwoPrescriptions.push({\n      //       ...this.prescriptionMappingForTemplate[key],\n      //       'prescription_information': this.prescriptionMappingForTemplate[key]['prescription_information'].slice(i * 16, (i + 1) * 16), key\n      //     });\n      //   }\n      // } else {\n        this.partTwoPrescriptions.push({ ...this.prescriptionMappingForTemplate[key], key });\n      // }\n\n    }\n    // console.log(this.prescription);\n    console.log('------',this.partTwoPrescriptions);\n\n    // this.partTwoPrescriptions.sort((a, b) => (a.prescription_information.length > b.prescription_information.length) ? 1 : ((b.prescription_information.length > a.prescription_information.length ? -1 : 0)));\n    this.partTwoPrescriptions.forEach(presTwo => {\n      const requiredHistory = this.appService.prescriptionHistory.filter(presHistory => presHistory.prescription_id === presTwo.key);\n      requiredHistory.sort((a, b) => b.lastmodifiedon.localeCompare(a.lastmodifiedon));\n      // console.log('requiredHistory', requiredHistory);\n      const suspendTimes = [];\n      requiredHistory.forEach((reqHistory, index) => {\n        let startDate, stopDate;\n        if (reqHistory.history_status === 'suspended') {\n          startDate = reqHistory.lastmodifiedon;\n          if (requiredHistory[index + 1]) {\n            stopDate = requiredHistory[index + 1].lastmodifiedon;\n          }\n          suspendTimes.push({ startDate, stopDate });\n\n        }\n      });\n      if (suspendTimes.length) {\n        // console.log('length', suspendTimes);\n      }\n      presTwo['prescription_information'].forEach((dose, newIndex) => {\n        let doseDate = dose.date?.split('-').reverse().join('-') + 'T' + dose.time?.split(' ')[0];\n        let count = 0;\n        let firstIndexChange = 0;\n        let suspendTimeToShow;\n        suspendTimes.forEach(sTime => {\n          let check1 = moment(doseDate).isAfter(sTime.startDate);\n          let check2 = moment(doseDate).isBefore(sTime.stopDate);\n          if (check1 && check2) {\n            count = 1\n            if (!firstIndexChange) {\n              firstIndexChange = newIndex;\n              suspendTimeToShow = sTime.startDate;\n            }\n          }\n        });\n        if (count) {\n          const [date, time] = suspendTimeToShow?.split('T');\n          if (newIndex > 0 && presTwo['prescription_information'][newIndex - 1] && presTwo['prescription_information'][newIndex - 1].stat !== 'SUSPENDED') {\n            presTwo['prescription_information'][newIndex] = { date: date?.split('-').reverse().join('-'), time: time.slice(0, 5), stat: 'SUSPENDED' };\n          } else {\n            presTwo['prescription_information'][newIndex] = null;\n          }\n\n        }\n      });\n      if (requiredHistory.length && requiredHistory[requiredHistory.length - 1].history_status === 'stopped') {\n        const [date, time] = requiredHistory[requiredHistory.length - 1].lastmodifiedon?.split('T');\n        presTwo['prescription_information'].push({ date: date?.split('-').reverse().join('-'), time: time.slice(0, 5), stat: 'STOPPED' });\n      }\n      presTwo['prescription_information'] = presTwo['prescription_information'].filter(pres => pres != null);\n\n    });\n\n    this.partTwoPrescriptions.forEach(data => {\n      let pres = this.prescriptionMapping[data.key];\n      let increaseInHeight = 0;\n      let nameCharacters = 0;\n      let commentChars = 0;\n      // pres.__medications.forEach(meds => {\n      //   nameCharacters += (meds.name ? meds.name.length : 0) + (meds.__ingredients.length ? meds.__ingredients[0].name.length : 0) + 2;\n      // });\n      // commentChars += pres.comments ? pres.comments.length : 0;\n      // nameCharacters -= 100;\n      // commentChars -= 100;\n      // if (nameCharacters > 0) {\n      //   increaseInHeight += Math.ceil(nameCharacters / 50) * 25;\n      // }\n      // if (commentChars > 0) {\n      //   increaseInHeight += Math.ceil(commentChars / 50) * 25;\n      // }\n      this.partTwoHeights.push(240 + increaseInHeight + 'px');\n    })\n\n\n  }\n\n  returnUpdatedHeight(data: any) {\n\n  }\n\n  checkMedicationAdministered(obj: any) {\n    // console.log('hs pres', this.hs.prescriptionDictionary);\n    const doseId = obj.dose_id?.split('_')[1];\n    // const ma = this.appService.Medicationadministration.filter(ma => {\n    //   let date = obj.eventStart.format('DD-MM-YYYY');\n    //   let time = obj.eventStart.format('HH:mm');\n    //   if (!ma.planneddatetime) {\n    //     return false;\n    //   }\n    //   let [maDate, maTime] = ma.planneddatetime?.split('T');\n    //   maDate = maDate?.split('-').reverse().join('-');\n    //   maTime = maTime.slice(0, 5);\n    //   return doseId === ma.dose_id && date === maDate;\n    // });\n    const ma = this.medicationAdministration.filter(ma => ma.logicalid == doseId);\n    const newObj = { ...obj };\n    let dose;\n    if (ma.length) {\n      // let dose;\n      if (ma[0].administreddosesize) {\n        dose = ma[0].administreddosesize + ' ' + ma[0].administreddoseunit;\n      } else if (ma[0].administeredstrengthdenominator) {\n        dose = ma[0].administeredstrengthdenominator + ' ' + ma[0].administeredstrengthdenominatorunits\n      }\n\n      const [date, time] = ma[0].administrationstartime?.split('T');\n      newObj.date = date?.split('-').reverse().join(\"-\");\n      newObj.time = time.slice(0, 5) + ' - ' + dose;\n      newObj.sort = newObj.date + newObj.time;\n      newObj.given = true;\n    } else {\n      newObj.date = obj.eventStart.format('DD-MM-YYYY');\n      dose = this.getDose(obj);\n\n      newObj.time = obj.eventStart.format('HH:mm') + ((dose != undefined || dose != null || dose != ' ')?' - ' : '') + dose;\n    }\n\n    return newObj;\n\n\n  }\n\n  getDose(obj: any) {\n    const posology = this.appService.Prescription.find(pres => pres.prescription_id == obj.prescription_id).__posology.find(poso => poso.posology_id == obj.posology_id);\n    // const posology = this.appService.GetCurrentPosology(this.appService.Prescription.filter(pres => pres.prescription_id === obj.prescription_id)[0]);\n    let dose;\n    dose = posology.__dose.filter(dose => dose.dose_id === obj.dose_id?.split('_')[obj.dose_id.split('_').length - 1])[0];\n\n    let admininsteredDose = this.medicationAdministration.find( x => x.logicalid == obj.dose_id);\n    if(admininsteredDose)\n    {\n      if(obj.isinfusion)\n      {\n        if(admininsteredDose.administredinfusionrate != 0 && admininsteredDose.administredinfusionrate != null)\n        {\n          return admininsteredDose.administredinfusionrate + ' ' + ((posology.infusiondoserateunits == undefined || posology.infusiondoserateunits == null) ? 'ml/h' : posology.infusionrateunits);\n        }\n        else if(admininsteredDose.administeredstrengthneumerator)\n        {\n          return admininsteredDose.administeredstrengthneumerator + ' ' + admininsteredDose.administeredstrengthneumeratorunits + '/' + admininsteredDose.administeredstrengthdenominator + ' ' + admininsteredDose.administeredstrengthdenominatorunits;\n        }\n        else {\n          return admininsteredDose.administreddosesize + ' ' + admininsteredDose.administreddoseunit + '/' + 'hr';\n        }\n      }\n      else{\n        if(admininsteredDose.administreddosesize)\n        {\n          return admininsteredDose.administreddosesize + ' ' + admininsteredDose.administreddoseunit;\n        }\n        else if (admininsteredDose.administeredstrengthneumerator)\n        {\n          return admininsteredDose.administeredstrengthneumerator + admininsteredDose.administeredstrengthneumeratorunits +  '/' + admininsteredDose.administeredstrengthdenominator  +  admininsteredDose.administeredstrengthdenominatorunits;\n        }\n        else if(admininsteredDose.administereddescriptivedose)\n        {\n          return admininsteredDose.administereddescriptivedose;\n        }\n      }\n    }\n    \n    if (!obj.isinfusion && dose) {\n      let doseUnit;\n      if (dose.doseunit === 'capsule') {\n        doseUnit = 'caps';\n      } else if (dose.doseunit === 'microgram') {\n        doseUnit = 'mcg';\n      } else if (dose.doseunit === 'suppository') {\n        doseUnit = 'supp';\n      } else {\n        doseUnit = dose.doseunit;\n      }\n      if(dose.descriptivedose)\n      {\n        return dose.descriptivedose;\n      }\n      else if(posology.dosetype == 'strength')\n      {\n        return dose.strengthneumerator + ' ' + dose.strengthneumeratorunit + ' / ' + dose.strengthdenominator + ' ' + dose.strengthdenominatorunit;\n      }\n      else if(posology.titration)\n      {\n        let groupTitrationData = this.appService.DoseEvents.find(x => x.posology_id == obj.posology_id && x.grouptitration == true)\n        let titrationData = this.appService.DoseEvents.filter(x => x.logicalid == obj.dose_id && x.eventtype == 'titration');\n        if(titrationData.length > 0)\n        {\n          return titrationData[0].titrateddosesize + ' ' + titrationData[0].titrateddoseunit;\n        }\n        if(groupTitrationData)\n        {\n          return groupTitrationData.titrateddosesize + ' ' + groupTitrationData.titrateddoseunit;\n        }\n      }\n      else{\n        return dose.dosesize + ' ' + doseUnit;\n      }\n    } else if ((posology.infusiontypeid === 'ci' || posology.infusiontypeid === InfusionType.pca) && posology) {\n      let infusiondose = this.medicationAdministration.find(x=>x.logicalid == obj.dose_id);\n      if(infusiondose) {\n        return (infusiondose.administredinfusionrate !== null) ? infusiondose.administredinfusionrate : (infusiondose.administreddosesize !== null) ? infusiondose.administreddosesize : '' + ' ' + posology.infusionrateunits;\n      } else {\n      return posology.infusionrate + ' ' + posology.infusionrateunits;\n      }\n\n\n\n    } else if (posology.infusiontypeid === 'bolus' && dose) {\n      if(posology.dosetype == 'strength')\n      {\n        return dose.strengthneumerator + ' ' + dose.strengthneumeratorunit + ' / ' + dose.strengthdenominator + ' ' + dose.strengthdenominatorunit;\n      }  \n      else {\n        return dose.dosesize + ' ' + dose.doseunit + ' / ' + 'hr';\n      }\n    } else if (posology.infusiontypeid === 'rate' && dose) {\n      return dose.infusionrate + ' ' + ((posology.infusionrateunits == undefined || posology.infusionrateunits == null) ? 'ml' : posology.infusionrateunits);\n    }\n    else{\n      return ' ';\n    }\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  getStatus(value: string) {\n    if (value === 'active') {\n      return 'Active';\n    } else if (value === 'suspended') {\n      return 'Suspended';\n    } else if (value === 'stopped' || value === 'cancelled') {\n      return 'Stopped';\n    } else {\n      return 'Active';\n    }\n  }\n\n\n\n  arrayForTemplate(pres: Prescription, index: number) {\n    if (pres) {\n      let extraInfoRows = 0;\n      // let nameCharacters = 0;\n      // let commentChars = 0;\n      // pres.__medications.forEach(meds => {\n      //   nameCharacters += (meds.name ? meds.name.length : 0) + (meds.__ingredients.length ? meds.__ingredients[0].name.length : 0) + 2;\n      // });\n      // commentChars += pres.comments ? pres.comments.length : 0;\n      // nameCharacters -= 110;\n      // commentChars -= 110;\n      // if (nameCharacters > 0) {\n      //   extraInfoRows += Math.ceil(nameCharacters / 55);\n      // }\n      // if (commentChars > 0) {\n      //   extraInfoRows += Math.ceil(commentChars / 55);\n      // }\n      // if (extraInfoRows > 10) {\n      //   extraInfoRows = 10;\n      // }\n      let protocolCount \n      if(pres.infusiontype_id == \"rate\")\n      {\n       //the previous code here is move to oninit\n        const rateRowsLength = this.rateEventsdata.filter(e => {\n          return  pres.prescription_id == e.prescription_id\n        });\n\n        protocolCount = Math.floor((rateRowsLength.length / this.repeatArray.length));\n      }\n      else {\n        protocolCount = this.hs.prescriptionDictionary[pres.prescription_id][0].frequency == 'protocol' ? this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount : this.hs.prescriptionDictionary[pres.prescription_id].length;\n      }\n      \n      if (!protocolCount) {\n        protocolCount = 6;\n      }\n      const templateArray = Array((protocolCount != undefined? protocolCount: 1)).fill(4);\n      if (templateArray.length > 6) {\n        const extraRows = 0;\n        let extraTransferRows = this.checkTodayTransfer(pres);\n        if (extraTransferRows < 0) {\n          extraTransferRows = 0;\n        }\n        for (let k = 0; k < extraTransferRows; k++) {\n          templateArray.push(4);\n        }\n        for (let k = 0; k < extraInfoRows; k++) {\n          templateArray.push(4);\n        }\n        let count = 0;\n        this.updateHeights.forEach(upHeight => {\n          if (upHeight[0] === index) {\n            count = 1;\n          }\n        });\n        let finalRows = 0;\n        if ((extraTransferRows + extraRows + extraInfoRows) >= 6) {\n          finalRows = 22;\n          for (let k = 0; k < (22 - extraTransferRows + extraRows + extraInfoRows); k++) {\n            templateArray.push(4);\n          }\n        }\n        if (!count) {\n          this.updateHeights.push([index, finalRows ? finalRows : (extraRows + extraTransferRows + extraInfoRows)]);\n        } else {\n          this.updateHeights.push([index, extraInfoRows]);\n        }\n\n        return templateArray;\n      } else {\n        let finalRows = 0;\n        let extraTransferRows = this.checkTodayTransfer(pres);\n        if ((protocolCount) - extraTransferRows < 0) {\n          for (let k = 0; k < extraTransferRows - (protocolCount); k++) {\n            templateArray.push(4);\n          }\n\n          if (extraTransferRows + extraInfoRows - (protocolCount) >= 6) {\n            finalRows = 22;\n            for (let k = 0; k < (22 - extraTransferRows + extraInfoRows - (protocolCount)); k++) {\n              templateArray.push(4);\n            }\n          }\n          this.updateHeights.push([index, finalRows ? finalRows : extraTransferRows + extraInfoRows - (protocolCount)]);\n        } else {\n          if (extraInfoRows >= 6) {\n            finalRows = 22;\n            // finalRows = 6;\n          }\n          this.updateHeights.push([index, finalRows ? finalRows : extraInfoRows]);\n        }\n        // if (!extraInfoRows) {\n          let tempArray = [];\n          for (let k = 0; k < protocolCount; k++) {\n            tempArray.push(4);\n          }\n          return tempArray;\n          // return this.repeatArray2;\n        // } else {\n        //   let newArr = []\n        //   extraInfoRows = finalRows ? finalRows : extraInfoRows;\n        //   for (let k = 0; k < 6; k++) {\n        //     newArr.push(4);\n        //   }\n        //   return newArr;\n        // }\n\n      }\n    } else {\n      return this.repeatArray2;\n    }\n  }\n\n\n\n\n\n\n  pdfDownloaded() {\n    this.destroyTemplate.emit('true');\n  }\n\n  shortenUnitName(unit: string) {\n    if (unit === 'microgram') {\n      return 'mcg'\n    } else if (unit === 'suppository') {\n      return 'supp'\n    } else {\n      return unit;\n    }\n  }\n\n  protocolGetDay() {\n    for (let key in this.hs.prescriptionDictionary) {\n      if (this.hs.prescriptionDictionary[key][0].frequency === 'protocol') {\n        const protocolPres = this.prescriptionMapping[key];\n        const daysPassedSinceStartingProtocol = moment(this.appService.GetCurrentPosology(protocolPres).prescriptionstartdate);\n        const currentDate = moment();\n        const diffDays = currentDate.diff(daysPassedSinceStartingProtocol, 'days');\n        this.getProtocolRemaining(diffDays, protocolPres);\n      }\n    }\n  }\n\n  getProtocolRemaining(diffDays: number, pres: Prescription) {\n    const protocolCount = this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount;\n    let remainingDoses;\n    let prespos = this.appService.GetCurrentPosology(pres);\n    if (prespos.__dose[diffDays * protocolCount]) {\n      remainingDoses = prespos.__dose.slice(diffDays * protocolCount);\n      // this.adjustForFourDays(remainingDoses, protocolCount);\n      if (prespos.repeatlastday && ((remainingDoses.length / protocolCount) < 3)) {\n        const toAddPrescription = 3 - (remainingDoses.length / protocolCount);\n        const lastDayDose = prespos.__dose.slice(-1 * protocolCount);\n        remainingDoses = this.addLastDay(remainingDoses, toAddPrescription, lastDayDose);\n      } else if (prespos.repeatprotocoltimes && ((remainingDoses.length / protocolCount) < 3)) {\n        remainingDoses = remainingDoses.concat(prespos.__dose.slice());\n      }\n\n    } else if (prespos.repeatlastday) {\n      remainingDoses = prespos.__dose.slice(-1 * protocolCount);\n      const toAddPrescription = 3 - (remainingDoses.length / protocolCount);\n      if (toAddPrescription > 0) {\n        remainingDoses = this.addLastDay(remainingDoses, toAddPrescription, remainingDoses);\n      }\n    } else if (prespos.repeatprotocoltimes) {\n      const x = (diffDays) % this.hs.prescriptionDictionary[pres.prescription_id][0].protocolDays;\n      remainingDoses = prespos.__dose.slice(Math.floor(x * protocolCount));\n      remainingDoses = remainingDoses.concat(prespos.__dose.slice());\n    }\n    this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"] = remainingDoses;\n  }\n\n\n  addLastDay(remainingDoses: Array<any>, toAddPrescription: number, lastDayDose: Array<any>) {\n    for (let i = 0; i < toAddPrescription; i++) {\n      remainingDoses = remainingDoses.concat(lastDayDose);\n    }\n    return remainingDoses;\n\n  }\n\n  returnTimeFromObject(date: string) {\n    return date?.split('T')[1].slice(0, 5);\n  }\n\n  returnProtocolDose(i: number, j: number, pres: Prescription, currDate: Date = new Date()) {\n    let month = currDate.getMonth() + 1;\n    let addDay = currDate.getDate();\n    if (addDay < 10) {\n      addDay = <any>('0' + addDay);\n    }\n    if (month < 10) {\n      month = <any>('0' + month);\n    }\n    const date = currDate.getFullYear() + '-' + month + '-' + addDay;\n    const protocolCount = this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount - 1;\n    if (protocolCount >= i) {\n      let checkTransfer;\n      if (this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"] && this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i]) {\n        checkTransfer = this.checkTransfer(pres, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dose_id,\n          currDate, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosestartdatetime?.split('T')[1].slice(0, 5));\n      }\n      let administeredEvents = [];\n      if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n        administeredEvents = this.medicationAdministration.filter(ma => {\n          return ma.dose_id === this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n        });\n      }\n      if (administeredEvents.length && administeredEvents[0].administrationstartime?.split('T')[0] === date) {\n        if (administeredEvents[0].administreddosesize) {\n          return administeredEvents[0].administreddosesize + ' ' + administeredEvents[0].administreddoseunit;\n        } else if (administeredEvents[0].administredinfusionrate) {\n          return administeredEvents[0].administredinfusionrate + ' ' + administeredEvents[0].administeredstrengthdenominatorunits;\n        } else if (administeredEvents[0].administeredstrengthdenominator) {\n          return administeredEvents[0].administeredstrengthdenominator + ' ' + administeredEvents[0].administeredstrengthdenominatorunits;\n        };\n\n\n      }\n\n      if (checkTransfer) {\n        if(this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosesize == null)\n        {\n          return '';\n        }\n          return this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosesize + ' ' + this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][i + j].doseunit;\n      }\n      return '';\n\n    }\n    return '';\n  }\n  createMultiArray(i) {\n    const array = new Array(i);\n    for (let j = 0; j < array.length; j++) {\n      array[j] = new Array(i)\n    }\n    return array;\n  }\n\n  returnProtocolAdministartionStatus(pres: Prescription, i: number, j: number, currDate)\n  {\n    let month = currDate.getMonth() + 1;\n    let addDay = currDate.getDate();\n    if (addDay < 10) {\n      addDay = <any>('0' + addDay);\n    }\n    if (month < 10) {\n      month = <any>('0' + month);\n    }\n    const date = currDate.getFullYear() + '-' + month + '-' + addDay;\n    const protocolCount = this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount - 1;\n    if (protocolCount >= i) {\n      let checkTransfer;\n      if (this.hs.prescriptionDictionary[pres.prescription_id] && this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"]\n        && this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i]) {\n        checkTransfer = this.checkTransfer(pres, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dose_id,\n          currDate, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosestartdatetime?.split('T')[1].slice(0, 5));\n      }\n      let administeredEvents = [];\n      if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n        administeredEvents = this.medicationAdministration.filter(ma => {\n          return ma.dose_id === this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n        });\n      }\n\n      let administrationstatus;\n      administeredEvents.forEach((administeredEvent, ind) => {\n        if (administeredEvents[ind].administrationstartime.split('T')[0] === date) {\n            administrationstatus = [administeredEvents[ind].adminstrationstatus];\n        }\n      })\n\n      if (administrationstatus) {\n        if(this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosesize == null)\n        {\n          return null;\n        }\n        return administrationstatus;\n      }\n      return '';\n    }\n\n    return '';\n  }\n\n\n  returnProtocolTime(pres: Prescription, i: number, j: number, currDate) {\n    let month = currDate.getMonth() + 1;\n    if (month < 10) {\n      month = <any>('0' + month);\n    }\n    let addDay = currDate.getDate();\n    if (addDay < 10) {\n      addDay = <any>('0' + addDay);\n    }\n    const date = currDate.getFullYear() + '-' + month + '-' + addDay;\n    const protocolCount = this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount - 1;\n    if (protocolCount >= i) {\n      let checkTransfer;\n      if (this.hs.prescriptionDictionary[pres.prescription_id] && this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"]\n        && this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i]) {\n        checkTransfer = this.checkTransfer(pres, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dose_id,\n          currDate, this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosestartdatetime?.split('T')[1].slice(0, 5));\n      }\n      let administeredEvents = [];\n      if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n        administeredEvents = this.medicationAdministration.filter(ma => {\n          return ma.dose_id === this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n        });\n      }\n      if (administeredEvents.length && administeredEvents[0].administrationstartime?.split('T')[0] === date) {\n        return administeredEvents[0].administrationstartime?.split('T')[1].slice(0, 5);\n      }\n\n      if (checkTransfer === true) {\n        return this.hs.prescriptionDictionary[pres.prescription_id][0][\"remainingDoses\"][((protocolCount + 1) * j) + i].dosestartdatetime?.split('T')[1].slice(0, 5);\n\n      } else if (checkTransfer) {\n        // how to get dose?\n        return checkTransfer.slice(0, 5);\n\n\n      }\n      return '';\n    }\n\n    return '';\n  }\n\n  checkTransfer(pres: Prescription, doseId: string, currDate, currTime): any {\n    let month = currDate.getMonth() + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    let addDay = currDate.getDate();\n    if (addDay < 10) {\n      addDay = <any>('0' + addDay);\n    }\n    const date = currDate.getFullYear() + '-' + month + '-' + addDay;\n    const doseEvent = this.appService.DoseEvents.filter(doseEvent => {\n      let [startDate, startTime] = doseEvent.startdatetime?.split('T');\n      startTime = startTime.slice(0, 5);\n      // if(pres.infusiontype_id == 'rate') {\n      //   this.medicationAdministration.find(x => x.logicalid == doseEvent.logicalid)\n      // }\n      // else {\n        return (doseEvent.dose_id === doseId) && (startDate === date) && (startTime === currTime);\n      // }\n    });\n    if (!doseEvent[0]) {\n      return true;\n    } else if (doseEvent[0].eventtype === 'Transfer') {\n      const [doseDate, doseTime] = doseEvent[0].dosedatetime?.split('T');\n      if (date === doseDate) {\n        return doseTime;\n      } else {\n        return false;\n      }\n    }\n    else if (doseEvent[0].eventtype === 'doconfirm') {\n      const [doseDate, doseTime] = doseEvent[0].dosedatetime?.split('T');\n      if (date === doseDate) {\n        return doseTime;\n      } else {\n        return false;\n      }\n    }\n    else if (doseEvent[0].eventtype === 'titration') {\n      const [doseDate, doseTime] = doseEvent[0].titrateduntildatetime?.split('T');\n      if (date === doseDate) {\n        return doseTime;\n      } else {\n        return false;\n      }\n    }\n    else if (doseEvent[0].eventtype === 'Undo') {\n      const [doseDate, doseTime] = doseEvent[0].dosedatetime?.split('T');\n      if (date === doseDate) {\n        return doseTime;\n      } else {\n        return false;\n      }\n    }\n    else if (doseEvent[0].eventtype === 'AdminTransfer' && pres.infusiontype_id == 'rate') {\n      const [doseDate, doseTime] = doseEvent[0].startdatetime?.split('T');\n      // if (date === doseDate) {\n      //   return doseTime;\n      // } else {\n      //   return false;\n      // }\n      if (date === doseDate) {\n        if(pres.infusiontype_id == 'rate') {\n          // let originalDoseStartTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == this.appService.GetCurrentPosology(pres).posology_id).__dose.find(z => z.dose_id == doseEvent[0].dose_id).dosestartdatetime;\n          // let originalDoseEndTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == this.appService.GetCurrentPosology(pres).posology_id).__dose.find(z => z.dose_id == doseEvent[0].dose_id).doseenddatatime;\n          \n          // var a = moment(originalDoseEndTime);//now\n          // var b = moment(originalDoseStartTime);\n          // var convertToMinites = a.diff(b, 'minutes');\n\n          let splitLogicalId: any = doseEvent[0].logicalid.split('_');\n          let date = moment();\n          date.set({'year': splitLogicalId[1].substring(0,4),'month': splitLogicalId[1].substring(4,6) - 1,'date': splitLogicalId[1].substring(6,8),'hour':splitLogicalId[1].substring(8,10),'minute': splitLogicalId[1].substring(10,12),'second':0})\n\n          // let startDate = moment(date).subtract(convertToMinites, \"minutes\");\n\n          let starsubstring= 'end_'+moment(date).format('YYYYMMDDHHmm') + \"_\" + doseEvent[0].dose_id;\n\n          // let starsubstring='start' + dateFilteredData[i].logicalId.substring(3,12);// append start to _20221228 only date to get start dose \n          // let startevent=dateFilteredData.filter(x=>x.logicalId.includes(dateFilteredData[i].logicalId.split(\"_\")[2]) && x.logicalId.includes(starsubstring))\n\n          // let startadministred = this.medicationAdministration.find(x => x.logicalid == starsubstring)\n\n          // if(startadministred) {\n          //   return false;\n          // }\n          // else {\n          //   return doseTime;\n          // }\n\n          let checkDose = this.medicationAdministration.find(x => x.logicalid == doseEvent[0].logicalid);\n          let checkDoseInfusionEvents = this.appService.InfusionEvents.find(x => x.logicalid == starsubstring);\n          if(checkDose || (checkDoseInfusionEvents && checkDoseInfusionEvents.eventtype != 'endinfusion')) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        }\n        else {\n          return doseTime;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  sortArray(arr: Array<any>, rows: number, cols: number) {\n    for (let n = 0; n < rows; n++) {\n      for (let m = 0; m < cols; m++) {\n        let k = n;\n        while ((arr[k][m] === undefined || arr[k][m] == '' || arr[k][m].time === undefined || arr[k][m].time == '') && k < rows) {\n          k += 1\n        }\n        if (k !== n) {\n          arr[n][m] = { ...arr[k][m] };\n          arr[k][m] = undefined;\n        }\n\n      }\n    }\n  }\n\n\n  returnTimeDose(frequency, i: number, j: number, k: number, pres: Prescription, currDate, type = 'time') {\n    // console.log('frequency',frequency);\n    if (!this.prescriptionProperFlow[pres.prescription_id]) {\n      this.prescriptionProperFlow[pres.prescription_id] = this.createMultiArray(30);\n      let rows = this.arrayForTemplate(pres, k).length;\n      let cols = this.repeatArray.length;\n      let count = 0;\n      for (let n = 0; n < rows; n++) {\n        for (let m = 0; m < cols; m++) {\n          let time;\n          let dose;\n          let administered = false;\n          let administrationstatus;\n          let flag = false;\n          let isPRN = this.appService.GetCurrentPosology(pres).prn;\n          if (frequency === 'protocol' || frequency === 'variable') {\n            time = this.returnProtocolTime(pres, n, m, this.dates[m]);\n            dose = this.returnProtocolDose(n, m, pres, this.dates[m]);\n            administrationstatus = this.returnProtocolAdministartionStatus(pres, n, m, this.dates[m]);\n            flag = true;\n          } else {\n            time = this.returnXTime(n, pres, this.dates[m]);\n            dose = this.returnXTime(n, pres, this.dates[m], 'dose');\n            administrationstatus = this.returnXTime(n, pres, this.dates[m], 'administrationstatus');\n            flag = true;\n          }\n          if (n >= this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount - 1 && frequency !== 'protocol' && !time) {\n            let dataObj = this.returnTransferTime(n, pres, m);\n            time = dataObj.time;\n            dose = dataObj.dose;\n            administrationstatus = dataObj.administrationstatus;\n            flag = false;\n          } else if (n >= this.hs.prescriptionDictionary[pres.prescription_id][0].protocolCount && frequency === 'protocol' && !time) {\n            let dataObj = this.returnTransferTime(n, pres, m);\n            time = dataObj.time;\n            dose = dataObj.dose;\n            administrationstatus = dataObj.administrationstatus;\n            flag = false;\n          }\n\n          // if (!time) {\n          //   let dataObj = this.returnTransferTime(n, pres, m);\n          //   time = dataObj.time;\n          //   dose = dataObj.dose;\n          // }\n          if(flag)\n          {\n            if (time instanceof Object) {\n              dose = time[2];\n              administrationstatus = time[1];\n              time = time[0];\n              administered = true;\n            }\n            if (administrationstatus instanceof Object) {\n              administrationstatus = administrationstatus[0];\n              administered = true;\n            }\n          }\n          \n          if(isPRN == true && administered == false)\n          {\n            time = '';\n            dose = '';\n          }\n          this.prescriptionProperFlow[pres.prescription_id][n][m] = { time, dose, administered, isPRN, administrationstatus };\n        }\n        // this.sortRow(n,cols, pres);\n      }\n      if (!count) {\n        this.presIds.push(pres.prescription_id);\n      }\n      // this.prescriptionProperFlow[pres.prescription_id].sort(function (a, b) {\n      //   if (!a[0]) {\n      //     return 1\n      //   } else if(!b[0]) {\n      //     return -1\n      //   }\n      //   if (a[0].time === b[0].time) {\n      //     return 0;\n      //   }\n      //   else {\n      //     return (a[0].time < b[0].time) ? -1 : 1;\n      //   }\n      // });\n      this.sortArray(this.prescriptionProperFlow[pres.prescription_id], rows, cols);\n\n\n\n\n\n    }\n    if (type === 'time' && this.prescriptionProperFlow[pres.prescription_id][i] && this.prescriptionProperFlow[pres.prescription_id][i][j]) {\n      return this.prescriptionProperFlow[pres.prescription_id][i][j].time;\n    } else if (type === 'dose' && this.prescriptionProperFlow[pres.prescription_id][i] && this.prescriptionProperFlow[pres.prescription_id][i][j]) {\n      return this.prescriptionProperFlow[pres.prescription_id][i][j].dose;\n    } else if (this.prescriptionProperFlow[pres.prescription_id][i] && this.prescriptionProperFlow[pres.prescription_id][i][j]) {\n      if (!this.prescriptionProperFlow[pres.prescription_id][i][j].administered) {\n        const checkTime = moment().format(\"HH:mm\");\n        const checkTime2 = this.prescriptionProperFlow[pres.prescription_id][i][j].time;\n        if (checkTime2 < checkTime && currDate === this.dates[0]) {\n          // return 'N.A';\n          if(this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus == null)\n          {\n            return ''\n          }\n          else if(this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus)\n          {\n            return this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus;\n          }\n          if(pres.infusiontype_id == \"rate\")\n          {\n            let dateFilteredData = this.hs.prescriptionDictionary[pres.prescription_id].filter(x => x.date == moment(currDate).format('YYYYMMDD'));\n            if(dateFilteredData.length > 0 && dateFilteredData[i] && dateFilteredData[i].logicalId != undefined && dateFilteredData[i].logicalId.includes('end'))\n            {\n              let originalDoseStartTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == this.appService.GetCurrentPosology(pres).posology_id).__dose.find(z => z.dose_id == dateFilteredData[i].doseId).dosestartdatetime;\n              let originalDoseEndTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == this.appService.GetCurrentPosology(pres).posology_id).__dose.find(z => z.dose_id == dateFilteredData[i].doseId).doseenddatatime;\n              \n              var a = moment(originalDoseEndTime);//now\n              var b = moment(originalDoseStartTime);\n              var convertToMinites = a.diff(b, 'minutes');\n\n              let splitLogicalId = dateFilteredData[i].logicalId.split('_');\n              let date = moment();\n              date.set({'year': splitLogicalId[1].substring(0,4),'month': splitLogicalId[1].substring(4,6) - 1,'date': splitLogicalId[1].substring(6,8),'hour':splitLogicalId[1].substring(8,10),'minute': splitLogicalId[1].substring(10,12),'second':0})\n\n              let startDate = moment(date).subtract(convertToMinites, \"minutes\");\n\n              let starsubstring= 'start_'+moment(startDate).format('YYYYMMDDHHmm') + \"_\" + dateFilteredData[i].doseId;\n\n              // let starsubstring='start' + dateFilteredData[i].logicalId.substring(3,12);// append start to _20221228 only date to get start dose \n              // let startevent=dateFilteredData.filter(x=>x.logicalId.includes(dateFilteredData[i].logicalId.split(\"_\")[2]) && x.logicalId.includes(starsubstring))\n\n              let startadministred = this.medicationAdministration.find(x => x.logicalid == starsubstring)\n              if(startadministred){\n                if(dateFilteredData[i].content.includes('InfusionCompleteoverdue')) {\n                  return 'overdue' ;\n                }\n                return 'completed' ;\n              }else{\n                return 'Missed';\n              }\n            }\n            else {\n              return 'Missed';\n            }\n          }\n          else {\n            if(this.hs.prescriptionDictionary[pres.prescription_id][i].doctorsorder || this.hs.prescriptionDictionary[pres.prescription_id][i].titration)\n            {\n              return this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus;\n            }\n            return 'Missed';\n          }\n        }\n      } else {\n        // return 'A';\n        if(pres.infusiontype_id == \"rate\" && this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus == 'given')\n        {\n          return 'started'\n        }\n        return this.prescriptionProperFlow[pres.prescription_id][i][j].administrationstatus\n      }\n    }\n\n  }\n\n  returnXTime(i: number, pres: Prescription, currDate: Date, type = 'time') {\n    let checkDate;\n\n    let month = currDate.getMonth() + 1;\n    if (month < 10) {\n      month = <any>('0' + month);\n    }\n    let addDay = currDate.getDate();\n    if (addDay < 10) {\n      addDay = <any>('0' + addDay);\n    }\n    const date = currDate.getFullYear() + '-' + month + '-' + addDay;\n    let currentpos = this.appService.GetCurrentPosology(pres);\n    checkDate = moment(currDate.getFullYear() + '-' + (currDate.getMonth() + 1) + '-' + currDate.getDate()).isBefore(this.appService.GetCurrentPosology(pres).prescriptionenddate);\n    if (!currentpos.prescriptionenddate) {\n      checkDate = true;\n    }\n\n    const daysOfWeek = JSON.parse(currentpos.daysofweek);\n    if (daysOfWeek.length) {\n      const daysNumber = moment(currDate).day();\n      if (!daysOfWeek.includes(this.daysOfWeek[daysNumber.toString()])) {\n        checkDate = false;\n      }\n    }\n\n    if (currentpos.dosingdaysfrequency == 'days' || currentpos.dosingdaysfrequency == 'weeks' || currentpos.dosingdaysfrequency == 'months') {\n      let time = this.hs.prescriptionDictionary[pres.prescription_id][i].time.split(':')\n      let finalLogicalID = moment(currDate).format('YYYYMMDD') + time[0] + time[1] + \"_\" + this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n      if(pres.infusiontype_id == \"rate\"){\n        finalLogicalID=this.hs.prescriptionDictionary[pres.prescription_id][i].logicalId\n      }\n      let weekData = this.appService.reportData.filter(x => x.dose_id == finalLogicalID);\n      if (weekData.length) {\n        checkDate = true;\n      }\n      else {\n        checkDate = false;\n      }\n    }\n\n    if (pres.isinfusion && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === InfusionType.pca)) {\n      if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n        checkDate = moment(currDate.getFullYear() + '-' + (currDate.getMonth() + 1) + '-' + currDate.getDate()).isSame(this.hs.prescriptionDictionary[pres.prescription_id][i].ciDate);\n      } else {\n        checkDate = false;\n      }\n\n    }\n\n    let checkTransfer;\n    let administeredEvents = [];\n    if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n      administeredEvents = this.medicationAdministration.filter(ma => {\n       const logicalDateArrray = ma.logicalid?.split('_');\n       let logicalDate;\n       if(logicalDateArrray.length == 2)\n       {\n        logicalDate = logicalDateArrray[0];\n       }\n       else if(logicalDateArrray.length == 3)\n       {\n        logicalDate = logicalDateArrray[1];\n       }\n        const originalDate = logicalDate.slice(0, 4) + '-' + logicalDate.slice(4, 6) + '-' + logicalDate.slice(6, 8);\n        if (!ma.planneddatetime) {\n          return false;\n        }\n        if(currentpos.infusiontypeid === \"ci\")\n        {\n          return (ma.prescription_id == pres.prescription_id);\n        }\n        else if(currentpos.prn) {\n          return (ma.prescription_id == pres.prescription_id) && (ma.planneddatetime.split('T')[0] == date) && ma.checked == false;\n        }\n        else {\n          return (ma.dose_id === this.hs.prescriptionDictionary[pres.prescription_id][i].doseId) && (ma.planneddatetime.split('T')[0] == originalDate);\n        }\n        \n      });\n    }\n    let time;\n    let dose;\n    let administrationstatus;\n\n    if(currentpos.infusiontypeid === \"ci\" && administeredEvents.length > 0)\n    {\n      if(administeredEvents.length > 0)\n      {\n        if(currentpos.prescription_id == administeredEvents[0].prescription_id)\n        {\n          if (!administeredEvents[0].checked && administeredEvents[0].administrationstartime.split('T')[0] === date) {\n            if (type === 'time') {\n              time = administeredEvents[0].administrationstartime.split('T')[1].slice(0, 5);\n              administrationstatus = administeredEvents[0].adminstrationstatus;\n              dose = administeredEvents[0].administredinfusionrate + ' ' + currentpos.infusionrateunits;\n            }\n          }\n        }\n      }\n      \n    }\n    else if(currentpos.prn && administeredEvents.length > 0) {\n      administeredEvents.reverse();\n      if(administeredEvents.length > 0)\n      {\n        if (administeredEvents[0].administrationstartime.split('T')[0] === date) {\n          if (type === 'time' && !administeredEvents[0].isenterinerror) {\n            time = administeredEvents[0].administrationstartime.split('T')[1].slice(0, 5);\n            administrationstatus = administeredEvents[0].adminstrationstatus;\n            dose = administeredEvents[0].administreddosesize + ' ' + administeredEvents[0].administreddoseunit;\n            \n            // this.medicationAdministration = this.medicationAdministration.filter(x=> x.prescription_id == administeredEvents[0].prescription_id && x.administrationstartime != administeredEvents[0].administrationstartime);\n          }\n          if (type === 'time') { \n            this.medicationAdministration.forEach((element, index) => {\n              if(element.prescription_id == administeredEvents[0].prescription_id && element.administrationstartime == administeredEvents[0].administrationstartime) {\n                this.medicationAdministration[index].checked = true;\n              }\n            });\n          } \n   \n        }\n        else {\n          if (type === 'time') { \n            this.medicationAdministration.forEach((element, index) => {\n              if(element.prescription_id == administeredEvents[0].prescription_id && element.administrationstartime == administeredEvents[0].administrationstartime) {\n                this.medicationAdministration[index].checked = true;\n              }\n            });\n          } \n        }\n      }\n    }\n    else{\n      administeredEvents.forEach((administeredEvent, ind) => {\n        if(currentpos.prescription_id == administeredEvents[ind].prescription_id)\n        {\n          if (!administeredEvents[ind].checked && administeredEvents[ind].administrationstartime.split('T')[0] === date) {\n            if (type === 'time') {\n              time = [administeredEvents[ind].administrationstartime.split('T')[1].slice(0, 5)];\n              administrationstatus = [administeredEvents[ind].adminstrationstatus];\n              if (administeredEvents[ind].administreddosesize) {\n                if(currentpos.infusiontypeid == \"rate\")\n                {\n                  dose = [administeredEvents[ind].administredinfusionrate + ' ' + currentpos.infusionrateunits];\n                }\n                else {\n                  dose = [administeredEvents[ind].administreddosesize + ' ' + administeredEvents[ind].administreddoseunit];\n                }\n                \n              } else if(currentpos.doctorsorder && currentpos.dosetype == 'strength') {\n                dose = [administeredEvents[ind].administeredstrengthdenominator + ' ' + administeredEvents[ind].administeredstrengthdenominatorunits];\n              } else if (administeredEvents[ind].administredinfusionrate != \"0\") {\n                dose = [(administeredEvents[ind].administredinfusionrate != null?administeredEvents[ind].administredinfusionrate:'') + ' ' + (administeredEvents[ind].administeredstrengthdenominatorunits != null?administeredEvents[ind].administeredstrengthdenominatorunits:'')];\n              } else if (administeredEvents[ind].administeredstrengthdenominator) {\n                dose = [administeredEvents[ind].administeredstrengthdenominator + ' ' + administeredEvents[ind].administeredstrengthdenominatorunits];\n              };\n    \n            } else if (type === 'dose') {\n              if (administeredEvents[0].administreddosesize) {\n                if(currentpos.infusiontypeid == \"rate\")\n                {\n                  dose = [administeredEvents[0].administredinfusionrate + ' ' + currentpos.infusionrateunits];\n                }\n                else {\n                  dose = administeredEvents[0].administreddosesize + ' ' + administeredEvents[0].administreddoseunit;\n                }\n                \n              } else if (currentpos.doctorsorder && currentpos.dosetype == 'strength') {\n                dose = administeredEvents[0].administeredstrengthdenominator + ' ' + administeredEvents[0].administeredstrengthdenominatorunits;\n              } else if (administeredEvents[0].administredinfusionrate != \"0\") {\n                dose = (administeredEvents[0].administredinfusionrate != null?administeredEvents[0].administredinfusionrate:'') + ' ' + (administeredEvents[0].administeredstrengthdenominatorunits != null?administeredEvents[0].administeredstrengthdenominatorunits:'');\n              } else if (administeredEvents[0].administeredstrengthdenominator) {\n                dose = administeredEvents[0].administeredstrengthdenominator + ' ' + administeredEvents[0].administeredstrengthdenominatorunits;\n              };\n              administeredEvents[ind].checked = true;\n            }\n            else{\n              administrationstatus = administeredEvents[ind].adminstrationstatus\n            }\n          }\n          else if (administeredEvents.length && administeredEvents[0].administrationstartime?.split('T')[0] !== date && administeredEvents[0].planneddatetime?.split('T')[0] === date) {\n            time = 'changed';\n          }\n        }\n        \n      });\n    }\n      \n    \n    if (time === 'changed') {\n      return '';\n    } else if (time && type === 'time') {\n      // return time\n      return [time, administrationstatus, dose]\n    } else if (time && type === 'dose') {\n      return dose;\n    } else if (time && type === 'administrationstatus') {\n      return administrationstatus;\n    }\n    else {\n      if (this.hs.prescriptionDictionary[pres.prescription_id][i]) {\n        checkTransfer = this.checkTransfer(pres, this.hs.prescriptionDictionary[pres.prescription_id][i].doseId, currDate, this.hs.prescriptionDictionary[pres.prescription_id][i].time);\n      }\n      const doseCheck = this.checkShowDose(pres, date);\n      if (!doseCheck) {\n        return '';\n      }\n\n        if (checkTransfer === true && checkDate) {\n          let status = this.medicationAdministration.filter(x => x.logicalid == this.hs.prescriptionDictionary[pres.prescription_id][i].logicalId)\n          if (pres.infusiontype_id === 'bolus') {\n  \n            if (type === 'time') {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n            }\n            else if (type === 'dose')\n            {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].bolusDose\n            }\n            return status.length > 0 ? status[0].adminstrationstatus : '';\n          } else if (pres.infusiontype_id === 'rate' && !checkTransfer) {\n            if (type === 'time') {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n            }\n            else if (type === 'dose')\n            {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].rateDose\n            }\n            return status.length > 0 ? status[0].adminstrationstatus : '';\n          } else if (pres.infusiontype_id === 'ci' || pres.infusiontype_id === InfusionType.pca) {\n            if (type === 'time') {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n            }\n            else if (type === 'dose')\n            {\n              return status.length > 0 ? status[0].administredinfusionrate + ' ' +  pres.__posology[i].infusionrateunits : this.hs.prescriptionDictionary[pres.prescription_id][i].ciDose;\n            }\n            return status.length > 0 ? status[0].adminstrationstatus : '';\n          }  \n          if (this.hs.prescriptionDictionary[pres.prescription_id][i].dose) {\n            if (type === 'time') {\n                if(pres.infusiontype_id == \"rate\")\n                {\n                  let dateFilteredData = this.hs.prescriptionDictionary[pres.prescription_id].filter(x => x.date == moment(currDate).format('YYYYMMDD'));\n                  if(dateFilteredData.length > 0 && dateFilteredData[i] != undefined)\n                  {\n                    return dateFilteredData[i].time;\n                  }\n                  \n                }\n                else {\n                    return this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n                }\n            }\n            else if (type === 'dose')\n            {\n              if(pres.infusiontype_id == \"rate\")\n              {\n                let dateFilteredData = this.hs.prescriptionDictionary[pres.prescription_id].filter(x => x.date == moment(currDate).format('YYYYMMDD'));\n                if(dateFilteredData.length > 0 && dateFilteredData[i] != undefined)\n                {\n                  if(dateFilteredData[i].logicalId.includes('end'))\n                  {\n                    return '';\n                  }\n                  else {\n                    return dateFilteredData[i].dose;\n                  }\n                }\n              }\n              else {\n                \n                if(this.hs.prescriptionDictionary[pres.prescription_id][i].doctorsorder || this.hs.prescriptionDictionary[pres.prescription_id][i].titration)\n                {\n                  let changeDateFormat = moment(currDate).format('YYYYMMDD');\n                  let changeTimeFormat = this.hs.prescriptionDictionary[pres.prescription_id][i].time.split(':');\n                  let finalTitrationLogicalID = changeDateFormat + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n                  let doctorConfirmData = this.appService.DoseEvents.filter(x => x.logicalid == this.hs.prescriptionDictionary[pres.prescription_id][i].logicalId && x.eventtype == 'doconfirm')\n                  let titrationData = this.appService.DoseEvents.filter(x => x.logicalid == finalTitrationLogicalID && x.eventtype == 'titration') \n                  if(doctorConfirmData.length > 0 || titrationData.length > 0)\n                  {\n                    return 'PTC'\n                  }\n                  else \n                  {\n                    if(doctorConfirmData.length > 0 || titrationData.length > 0)\n                    {\n                      if(titrationData[0].eventtype == 'titration')\n                      {\n                        return titrationData[0].titrateddosesize + ' ' + titrationData[0].titrateddoseunit \n                      }\n                      else {\n                        return this.hs.prescriptionDictionary[pres.prescription_id][i].dose + ' ' + this.shortenUnitName(this.hs.prescriptionDictionary[pres.prescription_id][i].doseunit);\n                      }\n                    }\n                    else {\n                      let groupTitrationData = this.appService.DoseEvents.find(x => x.posology_id == this.hs.prescriptionDictionary[pres.prescription_id][i].posologyId && x.grouptitration == true); \n                      if(groupTitrationData)\n                      {\n                        let date = moment(currDate).format('YYYY-MM-DD') +' '+ this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n                        // let currentTime = moment().format('HH:mm');\n                        if(moment(date).isSameOrBefore(moment(groupTitrationData.titrateduntildatetime)))\n                        {\n                          return groupTitrationData.titrateddosesize + ' ' + groupTitrationData.titrateddoseunit;\n                        }\n                      }\n                      \n                      \n                      return 'PTC'\n                    }\n                      \n                  }\n                }\n                else {\n                  return this.hs.prescriptionDictionary[pres.prescription_id][i].dose + ' ' + this.shortenUnitName(this.hs.prescriptionDictionary[pres.prescription_id][i].doseunit);\n                }\n              }\n              \n            }\n            else if (type === 'administrationstatus')\n            {\n              if(pres.infusiontype_id == \"rate\")\n              {\n                let dateFilteredData = this.hs.prescriptionDictionary[pres.prescription_id].filter(x => x.date == moment(currDate).format('YYYYMMDD'));\n                if(dateFilteredData.length > 0 && dateFilteredData[i] != undefined)\n                {\n                  if(dateFilteredData[i].content.includes('InfusionCompleteddone'))\n                  {\n                    return 'completed'\n                  }\n                  else {\n                    return dateFilteredData[i].administrationStatus;\n                  }\n                }\n                \n              }\n              else {\n                if(pres.__posology[0].doctorsorder == false && pres.__posology[0].titration == false)\n                {\n                  return status.length > 0 ? status[0].adminstrationstatus : '';\n                }\n                else {\n                  if(this.hs.prescriptionDictionary[pres.prescription_id][i].doctorsorder || this.hs.prescriptionDictionary[pres.prescription_id][i].titration)\n                  {\n                    let currentDate = moment().format('YYYY-MM-DD');\n                    let currentTime = moment().format('HH:mm');\n                    let finalCurrentDate = moment(currDate).format('YYYY-MM-DD') +' '+ currentTime;\n                    let finalTitrationDate = moment(this.hs.prescriptionDictionary[pres.prescription_id][i].ciDate).format('YYYY-MM-DD') +' '+ this.hs.prescriptionDictionary[pres.prescription_id][i].time\n                    if(moment(finalTitrationDate).isSameOrBefore(finalCurrentDate))\n                    {\n                      let groupTitrationData = this.appService.DoseEvents.find(x => x.posology_id == this.hs.prescriptionDictionary[pres.prescription_id][i].posologyId && x.grouptitration == true);\n                      let changeDateFormat = moment(currDate).format('YYYYMMDD');\n                      let changeTimeFormat = this.hs.prescriptionDictionary[pres.prescription_id][i].time.split(':');\n                      let finalTitrationLogicalID = changeDateFormat + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n                      let doctorConfirmData = this.appService.DoseEvents.filter(x => x.logicalid == this.hs.prescriptionDictionary[pres.prescription_id][i].logicalId && x.eventtype == 'doconfirm')\n                      let titrationData = this.appService.DoseEvents.filter(x => x.logicalid == finalTitrationLogicalID  && x.eventtype == 'titration')\n                      if(titrationData.length > 0 || doctorConfirmData.length > 0)\n                      {\n                        return 'Missed';\n                      }\n                      if(groupTitrationData)\n                      {\n                        return 'Missed';\n                      }\n                    }\n                    // else {\n                    //   return 'false'\n                    // }\n                  }\n                }\n              }\n            }\n            \n            \n          }\n          else if (this.hs.prescriptionDictionary[pres.prescription_id][i].descriptiveDose){\n            if (type === 'time') {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n            }\n            else if (type === 'dose')\n            {\n              return '';\n              // return this.hs.prescriptionDictionary[pres.prescription_id][i].dose + ' ' + this.shortenUnitName(this.hs.prescriptionDictionary[pres.prescription_id][i].doseunit);\n            }\n            return status.length > 0 ? status[0].adminstrationstatus : '';\n          }\n        } else if (checkTransfer && checkDate) {\n          // how to get dose?\n          if (type === 'time') {\n            return checkTransfer.slice(0, 5);\n          } else if (type === 'dose') {\n            if (this.hs.prescriptionDictionary[pres.prescription_id][i].bolusDose && !this.hs.prescriptionDictionary[pres.prescription_id][i].bolusDose.includes('null')) {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].bolusDose\n            } else if (this.hs.prescriptionDictionary[pres.prescription_id][i].rateDose && !this.hs.prescriptionDictionary[pres.prescription_id][i].rateDose.includes('null')) {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].rateDose\n            } else if (this.hs.prescriptionDictionary[pres.prescription_id][i].ciDose && !this.hs.prescriptionDictionary[pres.prescription_id][i].ciDose.includes('null')) {\n              return this.hs.prescriptionDictionary[pres.prescription_id][i].ciDose\n            } else {\n              if(this.hs.prescriptionDictionary[pres.prescription_id][i].titration)\n              {\n                let groupTitrationData = this.appService.DoseEvents.find(x => x.posology_id == this.hs.prescriptionDictionary[pres.prescription_id][i].posologyId && x.grouptitration == true);\n                let changeDateFormat = moment(currDate).format('YYYYMMDD');\n                let changeTimeFormat = this.hs.prescriptionDictionary[pres.prescription_id][i].time.split(':');\n                let finalTitrationLogicalID = changeDateFormat + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + this.hs.prescriptionDictionary[pres.prescription_id][i].doseId;\n                let titrationData = this.appService.DoseEvents.filter(x => x.logicalid == finalTitrationLogicalID && x.eventtype == 'titration');\n                if(titrationData.length > 0)\n                {\n                  return titrationData[0].titrateddosesize + ' ' + titrationData[0].titrateddoseunit \n                }\n                if(groupTitrationData)\n                {\n                  let date = moment(currDate).format('YYYY-MM-DD') +' '+ this.hs.prescriptionDictionary[pres.prescription_id][i].time;\n                  if(moment(date).isSameOrBefore(groupTitrationData.titrateduntildatetime))\n                  {\n                    return groupTitrationData.titrateddosesize + ' ' + groupTitrationData.titrateddoseunit;\n                  }\n                }\n              }\n              else {\n                return (this.hs.prescriptionDictionary[pres.prescription_id][i].dose + ' ' + this.shortenUnitName(this.hs.prescriptionDictionary[pres.prescription_id][i].doseunit))\n              }\n              \n            }\n          }\n          else {\n            if(this.hs.prescriptionDictionary[pres.prescription_id][i].doctorsorder || this.hs.prescriptionDictionary[pres.prescription_id][i].titration)\n            {\n              let currentDate = moment().format('YYYY-MM-DD');\n              let currentTime = moment().format('HH:mm');\n              // let [startDate, startTime] = todayDate?.split('T');\n              // startTime = startTime.slice(0, 5);\n              if(currentDate > this.hs.prescriptionDictionary[pres.prescription_id][i].ciDate || currentTime > this.hs.prescriptionDictionary[pres.prescription_id][i].time)\n              {\n                return 'Missed'\n              }\n              // else {\n              //   return 'false'\n              // }\n            }\n            else {\n              let status = this.medicationAdministration.filter(x => x.logicalid == this.hs.prescriptionDictionary[pres.prescription_id][i].logicalId);\n              return status.length > 0 ? status[0].adminstrationstatus : '';\n            }\n            \n          }\n        }\n      }\n\n    }\n  checkShowDose(pres: Prescription, date: any) {\n    if (moment(this.appService.GetCurrentPosology(pres).prescriptionstartdate?.split('T')[0]).isAfter(date)) {\n      return false\n    }\n    // else if (this.appService.GetCurrentPosology(pres).dosingdaysfrequency == 'days' || this.appService.GetCurrentPosology(pres).dosingdaysfrequency == 'weeks' || this.appService.GetCurrentPosology(pres).dosingdaysfrequency == 'months') {\n    //   if(!moment(this.appService.GetCurrentPosology(pres).prescriptionstartdate?.split('T')[0]).isSame(date)) {\n    //     return false;\n    //   }\n    //   else {\n    //     return true;\n    //   }\n    // }\n    // else {\n      return true;\n    // }\n    \n  }\n  checkTodayTransfer(pres: Prescription) {\n    const doseEvents = this.appService.DoseEvents.filter(doseEvent => {\n      return doseEvent.posology_id === this.appService.GetCurrentPosology(pres).posology_id;\n    });\n    // check how many are different dates\n    const rowsAddition = {};\n    doseEvents.forEach(doseEvent => {\n      if (!doseEvent.dosedatetime) {\n        return;\n      }\n      if (doseEvent.dosedatetime?.split('T')[0] !== doseEvent.startdatetime?.split('T')[0]) {\n        const date = doseEvent.dosedatetime?.split('T')[0];\n        if (!rowsAddition[date]) {\n          rowsAddition[date] = 1;\n        } else {\n          rowsAddition[date] += 1;\n        }\n      }\n    });\n    let maxRows = -1\n    for (let row in rowsAddition) {\n      if (rowsAddition[row] > maxRows) {\n        maxRows = rowsAddition[row];\n      }\n    }\n    return maxRows;\n  }\n\n  returnTransferTime(i: number, pres: Prescription, j: number): { time: string, dose: string, administrationstatus: string } {\n    let time;\n    let dose;\n    let month = this.dates[j].getMonth() + 1;\n    if (month < 10) {\n      month = '0' + month;\n    }\n    let prespos=this.appService.GetCurrentPosology(pres);\n    const date = this.dates[j].getFullYear() + '-' + month + '-' + this.dates[j].getDate();\n    if (!(this.transferDoses[pres.prescription_id])) {\n      this.transferDoses[pres.prescription_id] = {};\n\n    }\n    if (!(this.transferDoses[pres.prescription_id][date])) {\n      this.transferDoses[pres.prescription_id][date] = { count: 0, events: [], added: false, maEvents: [], maCount: 0 };\n    }\n    if (!this.transferDoses[pres.prescription_id][date].added) {\n      const doseEvents = this.appService.DoseEvents.filter(doseEvent => {\n        if (!doseEvent.dosedatetime) {\n          return false;\n        }\n        return doseEvent.posology_id === prespos.posology_id && doseEvent.dosedatetime?.split('T')[0] === date;\n      });\n      const MAevents = this.medicationAdministration.filter(ma => {\n        return ma.posology_id === prespos.posology_id;\n      });\n      // if (doseEvents.length) {\n      //   doseEvents.sort((a, b) => a._sequenceid - b._sequenceid);\n      // }\n      if (doseEvents.length) {\n        doseEvents.sort((a, b) => {\n          return a.startdatetime.localeCompare(b.startdatetime);\n        });\n      }\n      this.transferDoses[pres.prescription_id][date].events = doseEvents;\n      this.transferDoses[pres.prescription_id][date].maEvents = MAevents;\n      this.transferDoses[pres.prescription_id][date].added = true;\n      this.transferDoses[pres.prescription_id][date].events.forEach(ev => {\n        const doseDate = ev.dosedatetime?.split('T')[0];\n        const startDate = ev.startdatetime?.split('T')[0];\n        if (doseDate === startDate) {\n          this.transferDoses[pres.prescription_id][date].count += 1;\n        }\n      })\n\n    }\n\n\n\n\n    if (this.transferDoses[pres.prescription_id][date].events[Math.floor(this.transferDoses[pres.prescription_id][date].count)]) {\n\n      time = this.transferDoses[pres.prescription_id][date].events[Math.floor(this.transferDoses[pres.prescription_id][date].count)].dosedatetime?.split('T')[1].slice(0, 5);\n\n\n      let doseId = this.transferDoses[pres.prescription_id][date].events[Math.floor(this.transferDoses[pres.prescription_id][date].count)].dose_id;\n      let doseToSend = prespos.__dose.filter(dose => {\n        return dose.dose_id === doseId;\n      });\n      const type = pres.infusiontype_id;\n      if (type === 'rate') {\n        dose = dose.infusionrate + ' ' + dose.strengthdenominatorunit + 'hrs ' + ' / ' + dose.infusionduration + ' ' + 'hrs';\n      } else if (type === 'bolus') {\n        dose = dose.strengthdenominator + ' ' + dose.strengthdenominatorunit;\n      } else if (type === 'ci' || type == InfusionType.pca) {\n        dose = prespos.__dose[0].infusionrate + ' ' + prespos.__dose[0].strengthdenominatorunit;\n      } else if (doseToSend.length) {\n        dose = doseToSend[0].dosesize + ' ' + doseToSend[0].doseunit;\n      }\n      const filterEvents = this.transferDoses[pres.prescription_id][date].maEvents.filter(ma => {\n        const logicalDate = ma.logicalid?.split('_')[0].slice(0, 8);\n        const originalDate = logicalDate.slice(0, 4) + '-' + logicalDate.slice(4, 6) + '-' + logicalDate.slice(6, 8);\n        if (!ma.planneddatetime) {\n          return false;\n        }\n        return ma.dose_id === doseId && ma.planneddatetime?.split('T')[0] !== originalDate;\n      });\n      if (filterEvents.length) {\n        filterEvents.forEach((filterEvent, ind) => {\n          if (filterEvents[ind].administrationstartime?.split('T')[0] === date && !filterEvents[ind].checked) {\n            time = [filterEvents[ind].administrationstartime?.split('T')[1].slice(0, 5)];\n            if (filterEvents[ind].administreddosesize) {\n              dose = filterEvents[ind].administreddosesize + ' ' + filterEvents[ind].administreddoseunit;\n            } else if (filterEvents[ind].administredinfusionrate) {\n              dose = filterEvents[ind].administredinfusionrate + ' ' + filterEvents[ind].administeredstrengthdenominatorunits;\n            } else if (filterEvents[ind].administeredstrengthdenominator) {\n              dose = filterEvents[ind].administeredstrengthdenominator + ' ' + filterEvents[ind].administeredstrengthdenominatorunits\n            };\n          } else {\n            time = '';\n            dose = '';\n          }\n        })\n\n      }\n      this.transferDoses[pres.prescription_id][date].count += 1;\n\n    }\n    let administrationstatus;\n    if (this.transferDoses[pres.prescription_id][date].maEvents.length && (!time || !dose)) {\n      const filterEvents = this.transferDoses[pres.prescription_id][date].maEvents.filter(ma => {\n        administrationstatus = ma.adminstrationstatus;\n        const logicalDate = ma.logicalid?.split('_')[0].slice(0, 8);\n        const originalDate = logicalDate.slice(0, 4) + '-' + logicalDate.slice(4, 6) + '-' + logicalDate.slice(6, 8);\n        if (!ma.planneddatetime) {\n          return false;\n        }\n        return ma.planneddatetime?.split('T')[0] !== originalDate && ma.planneddatetime?.split('T')[0] === date;\n      });\n      if (filterEvents[this.transferDoses[pres.prescription_id][date].maCount]) {\n        let macount = this.transferDoses[pres.prescription_id][date].maCount;\n        time = [filterEvents[macount].administrationstartime?.split('T')[1].slice(0, 5)];\n        if (filterEvents[macount].administreddosesize) {\n          dose = filterEvents[macount].administreddosesize + ' ' + filterEvents[macount].administreddoseunit;\n        } else if (filterEvents[macount].administredinfusionrate) {\n          dose = filterEvents[macount].administredinfusionrate + ' ' + pres.__posology[0].infusionrateunits;\n        } else if (filterEvents[macount].administeredstrengthdenominator) {\n          dose = filterEvents[macount].administeredstrengthdenominator + ' ' + filterEvents[macount].administeredstrengthdenominatorunits\n        };\n        this.transferDoses[pres.prescription_id][date].maCount += 1;\n      }\n    }\n    if (!dose) {\n      time = '';\n    }\n\n    return { time, dose, administrationstatus };\n  }\n\n  getMargin()\n  {\n    return this.marType === 'empty' ? '10px 10px 50px 10px' : '10px 10px 20px 10px';\n  }\n\n  setHeightWidthForEmptyTemplate()\n  {\n    return this.marType === 'empty' ? {height: '300px', margin: '10px 10px 200px 10px',width: '70px'} : '';\n  }\n\n}\n","<ng-template #descriptionTemplate>\n  <table style=\"width: 100%; margin-left: 10px;\">\n    <tr style=\"height: 50px; font-size: 10px;\">\n      <td rowspan=\"2\" style=\"width:40px; word-break: break-word;\">\n        <span>\n          Name : &nbsp;{{' ' +\n          patientDetails.fullname?.split(',')[0]}}&nbsp;,&nbsp;{{patientDetails.fullname?.split(',')[1]}}\n        </span><br>\n        <span>\n          {{'DOB : ' + patientDetails.dob}}\n        </span><br>\n        <span>\n          {{'Age : ' + patientDetails.age}}\n        </span><br>\n        <span>\n          {{(patientDetails.gender == 'Male')? 'Gender: M':'Gender: F'}}\n        </span><br>\n        <span>\n          {{'Weight : ' + appService.refWeightValue + ' ' + 'kg'}}\n        </span><br>\n        <span *ngIf=\"appService.refHeightValue\">\n          {{'Height : ' + appService.refHeightValue + ' ' + 'cms'}}\n        </span><br>\n        <span>\n          {{'Hospital Number : ' + patientDetails.hospitalnumber}}\n        </span><br>\n        <span>\n          {{'NHS Number : ' + patientDetails.nhsnumber}}\n        </span>  \n      </td>\n      <td colspan=\"2\" style=\"width:50px;\">\n          <span>Department</span><br>\n          <span>{{encounterDetails.assignedpatientlocationpointofcare}}</span>\n      </td>\n      <td style=\"width:35px;\">\n          <span>Room/Bed</span><br>\n          {{(encounterDetails.assignedpatientlocationroom || encounterDetails.assignedpatientlocationbay) + ' / '}}<br>\n          {{encounterDetails.assignedpatientlocationbed }}\n      </td>\n    </tr>\n    <tr style=\"font-size: 10px;\">\n      <td style=\"width:30px;\">\n          <span>Admission Date </span><br>\n          {{this.encounterDetails.admitdate?.split('-').reverse().join('-')}}<br>\n          <span>Hospitalisation Day {{' ' +\n            this.encounterDetails.dayspassed}}</span>\n      </td>\n      <td style=\"width:20px;\">\n          <span>Consultant </span><br>\n          <!-- {{(encounterDetails.attendingdoctortext?.split('\n          ')[0] || '')}}&nbsp;&nbsp;{{(encounterDetails.attendingdoctortext?.split(' ')[1] || '')}} -->\n          {{encounterDetails.consultingdoctortext}}\n      </td>\n      <td style=\"width:35px;\">\n          <span>Known Allergies </span><br>\n          {{patientDetails.allergies}}\n      </td>\n    </tr>\n  </table>\n</ng-template>\n\n<ng-template #recordChart>\n\n  <ng-container *ngTemplateOutlet=\"descriptionTemplate\"></ng-container>\n\n  <ng-container>\n \n    <div style=\"margin-left: 200px;margin-top: 50px;\" *ngIf=\"marType === 'active'\">\n      <strong>MEDICATIONS &nbsp; PRESCRIBED &nbsp;&nbsp; FOR &nbsp; 3 &nbsp;DAYS</strong>\n    </div>\n    <div style=\"margin-left: 200px;margin-top: 38px;\" *ngIf=\"marType === 'empty'\">\n      <strong>MEDICATION ADMINISTRATION RECORD</strong>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"marType === 'active' || marType === 'empty'\">\n    <div *ngFor=\"let pres of prescription; let i = index; let k = index;\">\n      <table data-pdfmake=\"{'headerRows':3}\" [ngStyle]=\"{'margin' : getMargin()}\">\n        <!-- <thead> -->\n          <ng-container *ngIf=\"marType === 'active'\">\n            <tr style=\"font-size: 10px;\">\n          \n              <td colspan=\"12\">\n                <app-prescription-infusion-print-template style=\"font-size: 9px; word-break: break-all;\" *ngIf=\"marType === 'active' && pres && appService.GetCurrentPosology(pres).infusiontypeid\" [prescription]=\"pres\"\n                  componenttype=\"timeline\" [fromPrinting]=\"true\">\n                </app-prescription-infusion-print-template>\n                <app-prescription-non-infusion-print-template style=\"font-size: 9px; word-break: break-all;\" *ngIf=\"marType === 'active' && pres && !appService.GetCurrentPosology(pres).infusiontypeid\" [prescription]=\"pres\"\n                  componenttype=\"timeline\" [fromPrinting]=\"true\">\n                </app-prescription-non-infusion-print-template>\n                <div *ngIf=\"pres &&  appService.GetCurrentPosology(pres).prn\">\n                  PRN\n                </div>\n                <div *ngIf=\"pres && appService.GetCurrentPosology(pres).doctorsorder\">\n                  Prescriber to confirm\n                </div>\n                <div\n                  *ngIf=\"pres && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === 'pca')  && appService.GetCurrentPosology(pres).frequency !== 'variable' && appService.GetCurrentPosology(pres).prescriptionenddate\">\n                  <div>\n                    {{'Treatment End Date: ' + appService.GetCurrentPosology(pres).prescriptionenddate?.split('T')[0]}}\n                  </div>\n                  <div>\n                    {{'Treatment End Time: ' + appService.GetCurrentPosology(pres).prescriptionenddate?.split('T')[1]}}\n                  </div>\n   \n                </div>\n              </td>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"marType === 'empty'\">\n            <tr style=\"font-size: 10px; height: 100px;\">\n          \n              <td colspan=\"12\">\n                \n              </td>\n            </tr>\n          </ng-container>\n          \n          <tr  style=\"font-size: 10px;\">\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span>Date</span><br>\n            </td>\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span *ngIf=\"marType === 'active'\">{{dates[0] | date: 'dd/MM/yyyy'}}</span>\n            </td>\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span></span>\n            </td>\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span *ngIf=\"marType === 'active'\">{{dates[1] | date: 'dd/MM/yyyy'}}</span>\n            </td>\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span></span>\n            </td>\n            <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span *ngIf=\"marType === 'active'\">{{dates[2] | date: 'dd/MM/yyyy'}}</span>\n            </td>\n            <!-- <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span></span>\n            </td> -->\n            <!-- <td colspan=\"2\" style=\"width:55px;text-align: center;\">\n              <span *ngIf=\"marType === 'active'\">{{dates[3] | date: 'dd/MM/yyyy'}}</span>\n            </td> -->\n          </tr>\n          <ng-container *ngIf=\"marType === 'active'\">\n            <tr style=\"font-size: 8px;\" [ngStyle]=\"setHeightWidthForEmptyTemplate()\">\n              <ng-container *ngFor=\"let item of repeatArray;\">\n                <td colspan=\"2\" style=\"text-align: center;\">\n                  <span>Time and Dose/Rate</span>\n                </td>\n                <td style=\"text-align: center;\">\n                  <span>Given</span>\n                </td>\n                <td style=\"text-align: center;\">\n                  <span>Checked</span>\n                </td>\n               </ng-container>\n            </tr>\n           \n          </ng-container>\n\n\n        <!-- </thead>\n       \n        <tbody> -->\n        <ng-container *ngIf=\"marType === 'active'\">\n          <tr *ngFor=\"let item of arrayForTemplate(pres,k); let di = index\" style=\"font-size: 9px;\">\n            <ng-container *ngFor=\"let item of repeatArray; let dj = index\">\n              <!-- <div> -->\n                <ng-container *ngIf=\"pres && pres.infusiontype_id !== 'ci' && pres.infusiontype_id !== 'pca' && appService.GetCurrentPosology(pres).frequency !== 'protocol'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('x',di,dj,k, pres, dates[dj])}}\n                  </td>\n                </ng-container>\n      \n                <td *ngIf=\"pres && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === 'pca')\" style=\"height: 20px; width:50px;\">\n                  {{returnTimeDose('x',di,dj,k,pres, dates[dj])}}\n                </td>\n      \n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency === 'protocol'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('protocol',di,dj,k,pres, dates[dj])}}\n                  </td>\n                </ng-container>\n              <!-- </div> -->\n              \n              <!-- <div> -->\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency !== 'protocol' && pres.infusiontype_id !== 'ci' && pres.infusiontype_id !== 'pca'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('x',di,dj,k,pres, dates[dj],'dose')}}\n                  </td>\n                </ng-container>\n                <td *ngIf=\"pres && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === 'pca')\" style=\"height: 20px; width:50px;\">\n                  {{returnTimeDose('x',di, dj, k, pres ,dates[dj], 'dose')}}\n                </td>\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency === 'protocol'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('protocol',di,dj,k, pres ,dates[dj], 'dose')}}\n                  </td>\n                </ng-container>\n              <!-- </div> -->\n    \n              <!-- <div> -->\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency !== 'protocol' && pres.infusiontype_id !== 'ci' && pres.infusiontype_id !== 'pca'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('x',di,dj,k,pres, dates[dj],'administered')}}\n                  </td>\n                </ng-container>\n                <td *ngIf=\"pres && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === 'pca')\" style=\"height: 20px; width:50px;\">\n                  {{returnTimeDose('x',di, dj, k, pres ,dates[dj], 'administered')}}\n                </td>\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency === 'protocol'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    {{returnTimeDose('protocol',di,dj,k, pres ,dates[dj], 'administered')}}\n                  </td>\n                </ng-container>\n    \n              <!-- </div> -->\n\n              <!-- <div> -->\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency !== 'protocol' && pres.infusiontype_id !== 'ci' && pres.infusiontype_id !== 'pca'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    <!-- {{returnTimeDose('x',di,dj,k,pres, dates[dj],'administered')}} -->\n                  </td>\n                </ng-container>\n                <td *ngIf=\"pres && (pres.infusiontype_id === 'ci' || pres.infusiontype_id === 'pca')\" style=\"height: 20px; width:50px;\">\n                  <!-- {{returnTimeDose('x',di, dj, k, pres ,dates[dj], 'administered')}} -->\n                </td>\n                <ng-container *ngIf=\"pres && appService.GetCurrentPosology(pres).frequency === 'protocol'\">\n                  <td *ngIf=\"pres\" style=\"height: 20px; width:50px;\">\n                    <!-- {{returnTimeDose('protocol',di,dj,k, pres ,dates[dj], 'administered')}} -->\n                  </td>\n    \n                </ng-container>\n              <!-- </div> -->\n              \n            </ng-container>\n          </tr>\n        </ng-container>\n          \n        <!-- </tbody> -->\n        <ng-container *ngIf=\"marType === 'empty'\">\n          <tr style=\"font-size: 8px;\">\n            <!-- <td [attr.rowspan]=\"7\"></td> -->\n            <!-- <td></td>\n            <td></td> -->\n            <ng-container *ngFor=\"let item of repeatArray;\" style=\"font-size: 12px;\">\n              <td colspan=\"2\" style=\"text-align: center;\">\n                <span>Time/Dose</span>\n              </td>\n              <td style=\"text-align: center;\">\n                <span>Given</span>\n              </td>\n              <td style=\"text-align: center;\">\n                <span>Checked</span>\n              </td>\n            </ng-container>\n          </tr>\n          \n          <tr style=\"height: 20px; width:50px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr style=\"height: 20px; width:35px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr style=\"height: 20px; width:35px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr style=\"height: 20px; width:35px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr style=\"height: 20px; width:35px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n          <tr style=\"height: 20px; width:35px;\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n          </tr>\n        </ng-container>\n      </table>\n    </div>\n  </div>\n \n\n  <div *ngIf=\"marType === 'active' || marType === 'current' || marType === 'report'\">\n    <div #activeHeaderHeight>\n      <div *ngIf=\"marType === 'report' || marType === 'current' || prescription.length == 0\">\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"activeHeader\"></ng-container>\n    </div>\n  </div>\n\n  <div *ngIf=\"marType === 'active' || marType === 'current' || marType === 'report'\">\n    <div>\n\n      <ng-container *ngTemplateOutlet=\"activeSecondPart\"></ng-container>\n    </div>\n  </div>\n\n \n\n</ng-template>\n\n<ng-template #activeHeader>\n  <div>\n\n    <div style=\"margin-left: 200px;margin-top: 50px;\" *ngIf=\"marType === 'active'\">\n      <strong>RECORDED &nbsp;&nbsp;ADMINISTRATIONS FOR &nbsp;PAST &nbsp;5 DAYS </strong>\n    </div>\n    <div style=\"margin-left: 180px;margin-top: 50px;\" *ngIf=\"marType === 'report'\">\n      <strong>RECORDED&nbsp;&nbsp;ADMINISTRATIONS&nbsp;&nbsp;FOR &nbsp;PERIOD\n        &nbsp;{{sdate?.split('-').reverse().join('-') + ' to ' + edate?.split('-').reverse().join('-') }} </strong>\n    </div>\n    <div style=\"margin-left: 200px;margin-top: 50px;\" *ngIf=\"marType === 'current'\">\n      <strong>MEDICATION ADMINISTRATION RECORD &nbsp;&nbsp; {{ todaysDate }} </strong>\n    </div>\n\n  </div>\n</ng-template>\n\n<ng-template #activeSecondPart>\n   \n  <div *ngFor=\"let data of partTwoPrescriptions; let ik = index\">\n    <div *ngIf=\"marType === 'active' || prescription.length == 0 || marType === 'report' || marType === 'current'\">\n      <!-- <table>\n        <tr>\n          <td>\n            <table>\n              <tr style=\"font-size: 12px;\">\n                <td style=\"width:200px; border-top: none; border-left: none; border-right: none;\">\n                    <span>Medication - generic name(brand</span><br>\n                    <span>name),dose,dosing interval</span>\n                </td>\n              </tr>\n              <tr>\n                <td style=\"width:200px; border-bottom: none; border-left: none; border-right: none;\">\n                  <app-prescription-infusion-print-template style=\"font-size: 9px;\" *ngIf=\"appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [fromPrinting]=\"true\" [prescription]=\"prescriptionMapping[data.key]\" componenttype=\"timeline\">\n                  </app-prescription-infusion-print-template>\n                  <app-prescription-non-infusion-print-template style=\"font-size: 9px;\" *ngIf=\"!appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [prescription]=\"prescriptionMapping[data.key]\"\n                        componenttype=\"timeline\" [fromPrinting]=\"true\">\n                  </app-prescription-non-infusion-print-template>\n                  <div *ngIf=\"getStatus(prescriptionMappingForTemplate[data.key].status)\" style=\"font-size: 12px;\">\n                    <strong>{{'Status: ' + getStatus(prescriptionMappingForTemplate[data.key].status)}}</strong>\n                  </div><br/>\n                </td>\n              </tr>\n            </table>\n          </td>\n          <td>\n            <table style=\"font-size: 12px;\">\n              <tr style=\"height: 28px; \">\n                <td style=\"width:150px;text-align: center; border-left: none; border-right: none; border-top: none;\">\n                  <span>Status</span><br>\n                </td>\n                <td style=\"width:150px;text-align: center; border-top: none;\">\n                  <span>Date</span>\n                </td>\n                <td style=\"width:150px;text-align: center; border-left: none; border-right: none; border-top: none;\">\n                  <span>Time and Dose / Rate</span>\n                </td>\n              </tr>\n              <tr *ngFor=\"let infoObj of data['prescription_information']; let i = index\" >\n                <td style=\"border-left: none; border-right: none; border-bottom: none;\">\n                  {{infoObj.stat}}\n                </td>\n                <td style=\"border-bottom: none;\">\n                  {{infoObj.date}}\n                </td>\n                <td style=\"border-left: none; border-right: none; border-bottom: none; word-wrap: break-word;\">\n                  {{infoObj.time}}\n                </td>\n              </tr>\n            </table>\n          </td>\n        </tr>\n      </table> -->\n     \n      <table data-pdfmake=\"{'headerRows':2}\" [ngStyle]=\"{'margin' : getMargin()}\">\n        <!-- <thead> -->\n            <tr style=\"font-size: 10px;\">\n          \n              <td colspan=\"3\">\n                <app-prescription-infusion-print-template style=\"font-size: 9px;\" *ngIf=\"appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [fromPrinting]=\"true\" [prescription]=\"prescriptionMapping[data.key]\" componenttype=\"timeline\">\n                </app-prescription-infusion-print-template>\n                <app-prescription-non-infusion-print-template style=\"font-size: 9px;\" *ngIf=\"!appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [prescription]=\"prescriptionMapping[data.key]\"\n                      componenttype=\"timeline\" [fromPrinting]=\"true\">\n                </app-prescription-non-infusion-print-template>\n                <div *ngIf=\"getStatus(prescriptionMappingForTemplate[data.key].status)\" style=\"font-size: 10px;\">\n                  <strong>{{'Status: ' + getStatus(prescriptionMappingForTemplate[data.key].status)}}</strong>\n                </div><br/>\n              </td>\n            </tr>\n\n            <tr style=\"font-size: 10px;\">\n              <td style=\"height: 20px; width:235px;text-align: center;\">\n                <span><b>Status</b></span><br>\n              </td>\n              <td style=\"height: 20px; width:235px;text-align: center;\">\n                <span><b>Date</b></span>\n              </td>\n              <td style=\"height: 20px; width:235px;text-align: center;\">\n                <span><b>Time and Dose / Rate</b></span>\n              </td>\n            </tr>\n            <tr *ngFor=\"let infoObj of data['prescription_information']; let i = index\" style=\"font-size: 9px;\">\n              <td style=\"height: 20px; width:235px;text-align: center;\">\n                {{infoObj.stat}}\n              </td>\n              <td style=\"height: 20px; width:235px;text-align: center;\">\n                {{infoObj.date}}\n              </td>\n              <td style=\"height: 20px; width:235px; word-wrap: break-all;\">\n                {{infoObj.time}}\n              </td>\n            </tr>\n\n      </table>\n\n      <!-- <table style=\"border-collapse: collapse;\">\n        <tr style=\"font-size: 12px;\">\n          <td style=\"width:250px;\">\n              <span>Medication - generic name(brand</span><br>\n              <span>name),dose,dosing interval</span>\n          </td>\n          <td style=\"width:235px;text-align: center;\">\n            <span>Status</span><br>\n          </td>\n          <td style=\"width:235px;text-align: center;\">\n            <span>Date</span>\n          </td>\n          <td style=\"width:235px;text-align: center;\">\n            <span>Time and Dose / Rate</span>\n          </td>\n        </tr>\n      </table>\n      <table style=\"border-collapse: collapse;\">\n        <tr style=\"min-height: 300px; font-size: 12px;\">\n          <td style=\"width:250px;\" rowSpan=\"{{data['prescription_information'].length + 1}}\">\n            <app-prescription-infusion-template style=\"font-size: 9px;\" *ngIf=\"appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [fromPrinting]=\"true\" [prescription]=\"prescriptionMapping[data.key]\" componenttype=\"timeline\">\n            </app-prescription-infusion-template>\n            <app-prescription-non-infusion-template style=\"font-size: 9px;\" *ngIf=\"!appService.GetCurrentPosology(prescriptionMapping[data.key]).infusiontypeid\" [prescription]=\"prescriptionMapping[data.key]\"\n                  componenttype=\"timeline\" [fromPrinting]=\"true\">\n                </app-prescription-non-infusion-template>\n            <div *ngIf=\"getStatus(prescriptionMappingForTemplate[data.key].status)\">\n              <strong>{{'Status: ' + getStatus(prescriptionMappingForTemplate[data.key].status)}}</strong>\n            </div><br/>\n          </td>\n          <td style=\"width:235px;text-align: center;\"></td>\n          <td style=\"width:235px;text-align: center;\"></td>\n          <td style=\"width:235px;text-align: center;\"></td>\n        </tr>\n        <tr *ngFor=\"let infoObj of data['prescription_information']; let i = index\">\n          <td>\n            {{infoObj.stat}}\n          </td>\n          <td>\n            {{infoObj.date}}\n          </td>\n          <td>\n            {{infoObj.time}}\n          </td>\n        </tr>\n      </table> -->\n    </div>\n   \n  </div>\n</ng-template>\n\n\n<app-print-discharge [customTemplate]=\"recordChart\" [view]=\"'l'\" (destroyComponent)=\"pdfDownloaded()\"\n  [title]=\"'Medication Administration Record'\" [dimensions]=\"[842, 595]\" [saveTitle]=\"'MAR'\" [printType]=\"marType\"></app-print-discharge>\n","import { Component, ElementRef, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation, EventEmitter } from '@angular/core';\nimport { forkJoin, interval, of, Subscription } from 'rxjs';\nimport { DataSet, Timeline } from 'vis-timeline/standalone';\nimport { TimelineServiceService } from '../../services/timeline-service.service'\nimport { AppService } from \"src/app/services/app.service\"\nimport { DrugChart, PersonAwayPeriod, Posology, Prescription, PrescriptionMedicaitonSupply } from 'src/app/models/EPMA';\nimport moment from 'moment';\nimport { TimeerHelper } from '../drug-chart/timer-helper'\n\nimport { SubjectsService } from 'src/app/services/subjects.service';\nimport { ApirequestService } from 'src/app/services/apirequest.service';\nimport { filter, filterparam, filterParams, filters, orderbystatement, selectstatement } from 'src/app/models/filter.model';\nimport { HostListener } from \"@angular/core\";\nimport { RoleAction } from 'src/app/services/enum';\nimport { DataRequest } from 'src/app/services/datarequest';\n\n@Component({\n  selector: 'app-drug-chart',\n  templateUrl: './drug-chart.component.html',\n  styleUrls: ['./drug-chart.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DrugChartComponent implements OnInit, OnDestroy {\n  screenHeight: number = window.innerHeight\n  screenWidth: number = window.innerWidth;\n  timediv: Timeline;\n  @HostListener('window:resize', ['$event'])\n  onResize(event?) {\n    this.screenHeight = window.innerHeight;\n\n    this.screenWidth = window.innerWidth;\n  }\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (this.isitemclickedboolean) {\n\n      this.isitemclickedboolean = false;\n    }\n    else {\n      this.showContextMenu = false;\n\n    }\n  }\n  @Input() groupFilterType;\n\n  isZoomCssApplied = false;\n\n  isitemclickedboolean = false;\n  showAdministrationForm: boolean = false;\n  showEditpopup: boolean = false;\n\n  showContextMenu: boolean = false;\n  contextmenuX = 0;\n  contextmenuY = 0;\n  contextdistype = \"none\"\n  editpopuptypetype = \"\"\n  PrescriptionAdmistration: Prescription;\n\n  displayeventtime: any;\n  doctorConformationModel: boolean = false;\n  selectedDose: any;\n  timeerHelper: TimeerHelper;\n  errorgeneratingevents = false;\n  range: any;\n  menuArray: any[];\n\n  subscription: Subscription = new Subscription();\n  @Output() emitPrintIcon = new EventEmitter<any>();\n\n\n\n  @ViewChild('timecomponentid', { static: false }) timecomponentid: ElementRef;\n\n\n  constructor(public dr: DataRequest,\n    public subjects: SubjectsService,\n    private timelineService: TimelineServiceService,\n    public appService: AppService,\n    private apiRequest: ApirequestService) {\n\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.timelineService.Reset();\n    this.timeerHelper = null;\n    for (var timelinearray of this.appService.TimelineArray) {\n      timelinearray.timeline.destroy();\n      timelinearray.group = null;\n      timelinearray.items = null;\n      timelinearray.options = null;\n      timelinearray.PRNArray = null;\n    }\n    this.appService.TimelineArray = null;\n    this.timediv.destroy();\n\n  }\n\n\n\n  ngOnInit(): void {\n\n    const patientDetails$ = this.apiRequest.getRequest(this.appService.baseURI + `/GetBaseViewListByAttribute/patientbanner_mainbanner?synapseattributename=person_id&attributevalue=${this.appService.personId}`);\n    const encounterDetails$ = this.apiRequest.getRequest(this.appService.baseURI + `/GetObject?synapsenamespace=core&synapseentityname=encounter&id=${this.appService.encounter.encounter_id}`);\n    let prescriptionHistory$ = this.appService.Prescription.length ? this.apiRequest\n      .postRequest(\n        this.appService.baseURI + '/GetBaseViewListByPost/epma_reviewhistory',\n        this.CreateSessionFilter()\n      ) : of(null);\n    forkJoin([patientDetails$, encounterDetails$, prescriptionHistory$]).subscribe(responseList => {\n      this.appService.patientDetails = JSON.parse(responseList[0])[0];\n      this.appService.encounterDetails = JSON.parse(responseList[1]);\n      this.appService.disabledatechange = false;\n      if (this.appService.Prescription.length) {\n        for (let prescription of responseList[2]) {\n          prescription.__posology = JSON.parse(prescription.__posology);\n          prescription.__routes = JSON.parse(prescription.__routes);\n          prescription.__medications = JSON.parse(prescription.__medications);\n          this.appService.prescriptionHistory.push(<Prescription>prescription);\n        }\n        this.appService.prescriptionHistory.forEach(presHistory => {\n          presHistory.history_status = this.getPrescriptionStatus(presHistory);\n        });\n      }\n      //click print here \n\n\n    });\n  }\n\n  CreateSessionFilter() {\n    let condition = '';\n\n    const pm = new filterParams();\n    const pres_ids = []\n    this.appService.Prescription.forEach(pres => {\n      pres_ids.push(pres.prescription_id);\n    });\n    for (var i = 0; i < pres_ids.length; i++) {\n      condition += \"or prescription_id = @prescription_id\" + i + \" \";\n      pm.filterparams.push(new filterparam(\"prescription_id\" + i, pres_ids[i]));\n    }\n    condition = condition.replace(/^\\or+|\\or+$/g, '');\n    let f = new filters();\n    f.filters.push(new filter(condition));\n    const select = new selectstatement('SELECT *');\n\n    const orderby = new orderbystatement('ORDER BY 2');\n\n    const body = [];\n    body.push(f);\n    body.push(pm);\n    body.push(select);\n    body.push(orderby);\n\n    return JSON.stringify(body);\n  }\n\n  getPrescriptionStatus(pres: Prescription | { prescriptionstatus_id: string }) {\n    var status = this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == pres.prescriptionstatus_id);\n    if (status)\n      return this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == pres.prescriptionstatus_id).status;\n    else\n      return \"active\";\n  }\n}\n","drug chart\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\nimport { contents, InfusionType, PrescriptionContext, title } from \"../../services/enum\"\nimport { AppService } from \"src/app/services/app.service\"\nimport moment from 'moment';\nimport { Dose, Medicationadministration, Posology, Prescription, Prescriptionreminders } from '../../models/EPMA';\n\nimport { Subscription } from 'rxjs';\nimport { Injectable } from \"@angular/core\";\n\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TimeerHelper {\n    prescriptionStatus: string = \"\";\n    timelinestart: any;\n    timelineend: any;\n    currentDate: any;\n    minEventDate: any;\n    MaxEventDate: any;\n    subscriptions: Subscription = new Subscription();\n    PRNids = new Array();\n    PrescriptionFormEvent: any = [];\n    isreportevents: boolean\n    bufferambertime = 0;\n    CreateWithheldEvents: boolean;\n    constructor(public appService: AppService) {\n\n\n\n    }\n\n    // createPrescriptionFormEvent(prescription: Prescription) {\n    //     this.isTempEvents = true;\n    //     this.PrescriptionFormEvent = [];\n    //     this.prescriptionStatus = \"\";\n    //     // setting max and min event date\n    //     this.MaxEventDate = moment(this.currentDate).add(8, 'days');\n    //     this.minEventDate = moment(this.currentDate).add(-8, 'days');\n    //     this.MaxEventDate.set({ hour: 23, minute: 59, second: 0, millisecond: 0 })\n    //     this.minEventDate.set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n\n    //     if (prescription.prescriptionstatus_id != null && prescription.prescriptionstatus_id != \"\") {\n    //         this.prescriptionStatus = this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == prescription.prescriptionstatus_id).status;\n    //     }\n    //     if (prescription.__posology[0].prn) {\n\n    //         this.addevents(prescription.prescription_id, prescription.__posology[0].__dose[0].dose_id, new Date(), null, prescription.__posology[0].posology_id, prescription.__posology[0].prn,\n    //             false, false, false, contents.Administer_PRN)\n    //         this.PRNids.push(prescription.__posology[0].__dose[0].dose_id);\n\n    //     }\n    //     else if (prescription.isinfusion) {\n    //         if (this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\") {\n    //             this.addInfutionEvent(prescription);\n    //         }\n    //     }\n    //     else {\n    //         let temp = this.appService.TimelineArray;\n    //         this.currentDate = new Date();\n    //         if (prescription.__posology[0].frequency == \"protocol\") {\n    //             this.addProtocolEvents(prescription)\n    //         }\n    //         else {\n    //             this.addLogicalEvent(prescription);\n    //         }\n    //     }\n    //     let temp = this.PrescriptionFormEvent;\n    //     this.PrescriptionFormEvent = Array.from(new Set(temp.map(a => a.dose_id)))\n    //         .map(id => {\n    //             return temp.find(a => a.dose_id === id)\n    //         })\n\n    //     return this.PrescriptionFormEvent;\n\n    // }\n    addReminderevents(prescription_id: any, dose_id: any, eventStart: any, eventEnd: any, epma_prescriptionreminders_id: any, type: number, pending: boolean,\n        remindertype: number, isinfusion: boolean, content: any, title: string, admitdone = false,issystem=false) {\n        let opacityclass = \"\";\n        if (eventEnd == null) {\n            opacityclass = this.iseventinpatientaway(moment(eventStart));\n        }\n        if (this.isreportevents) {\n            this.appService.AllReminderevents.push({\n                prescription_id: prescription_id,\n                epma_prescriptionreminders_id: epma_prescriptionreminders_id,\n                dose_id: dose_id,\n                eventStart: moment(eventStart),\n                eventEnd: eventEnd,\n                type: type,\n                pending: pending,\n                remindertype: remindertype,\n                isinfusion: isinfusion,\n                content: content,\n                title: title,\n                admitdone: admitdone,\n                opacityclass: opacityclass,\n                diffrence: 0,\n                stackclass: false\n\n            }\n\n            )\n        }\n        else {\n            this.appService.CurrentReminderevents.push({\n                prescription_id: prescription_id,\n                epma_prescriptionreminders_id: epma_prescriptionreminders_id,\n                dose_id: dose_id,\n                eventStart: moment(eventStart),\n                eventEnd: eventEnd,\n                type: type,\n                pending: pending,\n                remindertype: remindertype,\n                isinfusion: isinfusion,\n                content: content,\n                title: title,\n                admitdone: admitdone,\n                opacityclass: opacityclass,\n                diffrence: 0,\n                stackclass: false,\n                issystem:issystem\n            }\n\n            )\n\n        }\n    }\n    createWithDoseReminder(reminder: Prescriptionreminders) {\n      \n        let Overdue = moment().add(-this.appService.appConfig.defaultReminderOverdueTimePeriod, 'h');\n        let prescriptionEvents = [];\n        if (this.isreportevents) {\n            prescriptionEvents = this.appService.reportData.filter(e => e.prescription_id == reminder.prescription_id && moment(reminder.activationdatetime).isSameOrBefore(moment(e.eventStart)) && !e.dose_id.includes(\"bolus_\") && !e.dose_id.includes(\"end\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.content.includes(\"Administer_PRN\") && !e.dose_id.includes(\"infusionevent\"))\n        }\n        else {\n            prescriptionEvents = this.appService.events.filter(e => e.prescription_id == reminder.prescription_id && moment(reminder.activationdatetime).isSameOrBefore(moment(e.eventStart)) && !e.dose_id.includes(\"bolus_\") && !e.dose_id.includes(\"end\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.content.includes(\"Administer_PRN\") && !e.dose_id.includes(\"infusionevent\"))\n        }\n        for (let event of prescriptionEvents) {\n            if (!reminder.enddatetime || moment(reminder.enddatetime).isSameOrAfter(moment(event.eventStart))) {\n\n                if (this.appService.remindersack.find(x => x.logicalid == \"dur_Reminder\" + event.dose_id)) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + event.dose_id, moment(event.eventStart),\n                        null, reminder.epma_prescriptionreminders_id, 3, false, 2, false, contents.ReminderAcknowledged, reminder.message)\n                }\n                else if (moment(reminder.lastmodifiedon).isSameOrBefore(moment(event.eventStart)) && moment(event.eventStart).isSameOrAfter(moment())) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + event.dose_id, moment(event.eventStart),\n                        null, reminder.epma_prescriptionreminders_id, 2, false, 2, false, contents.Reminder, reminder.message)\n                }\n                else if (moment(reminder.lastmodifiedon).isSameOrBefore(moment(event.eventStart)) && moment(event.eventStart).isBefore(moment()) && Overdue.isBefore(moment(reminder.activationdatetime))) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + event.dose_id, moment(event.eventStart),\n                        null, reminder.epma_prescriptionreminders_id, 1, false, 2, false, contents.Reminderdue, reminder.message)\n                }\n                else if (moment(reminder.lastmodifiedon).isSameOrBefore(moment(event.eventStart)) && Overdue.isAfter(moment(event.eventStart))) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + event.dose_id, moment(event.eventStart),\n                        null, reminder.epma_prescriptionreminders_id, 0, false, 2, false, contents.Reminderoverdue, reminder.message)\n                }\n            }\n\n        }\n\n\n    }\n    createRepeatReminder(start: any, enddate: any, reminder: Prescriptionreminders) {\n       \n        if(moment(start).isSameOrBefore(moment(reminder.activationdatetime))){\n            start=moment(reminder.activationdatetime)\n        }\n        let Overdue = moment().add(-this.appService.appConfig.defaultReminderOverdueTimePeriod, 'h');\n        let prescriptions = this.appService.Prescription.find(x => x.prescription_id == reminder.prescription_id)\n        let prescriptionStatus = this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == prescriptions.prescriptionstatus_id).status;\n        let prescriptionenddate = this.appService.GetCurrentPosology(prescriptions).prescriptionenddate\n       \n        if (prescriptionStatus == \"suspended\" || prescriptionStatus == \"stopped\" || prescriptionStatus == \"cancelled\") {\n            enddate = this.appService.GetCurrentPosology(prescriptions).prescriptionenddate\n        }\n        if (prescriptionenddate && moment(prescriptionenddate).isSameOrBefore(moment(enddate))) {\n            enddate = moment(prescriptionenddate);\n        }\n        if(moment(reminder.enddatetime).isSameOrBefore(moment(enddate))){\n            enddate=moment(reminder.enddatetime)\n        }\n        let remindersplotTime=moment(start).clone();\n        while(moment(remindersplotTime).isSameOrBefore(moment(enddate))){\n\n            if (this.appService.remindersack.find(x=>x.logicalid==\"dur_Reminder\" + this.createLogicalId(remindersplotTime, reminder.epma_prescriptionreminders_id))) {\n                this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + this.createLogicalId(remindersplotTime, reminder.epma_prescriptionreminders_id), moment(remindersplotTime),\n                    null, reminder.epma_prescriptionreminders_id, 3, false, 1, false, contents.ReminderAcknowledged, reminder.message)\n            }\n            else if (moment(remindersplotTime).isSameOrAfter(moment())) {\n                this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + this.createLogicalId(remindersplotTime, reminder.epma_prescriptionreminders_id), moment(remindersplotTime),\n                    null, reminder.epma_prescriptionreminders_id, 2, false, 1, false, contents.Reminder, reminder.message)\n            }\n            else if (moment(remindersplotTime).isBefore(moment()) && Overdue.isBefore(moment(remindersplotTime))) {\n                this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + this.createLogicalId(remindersplotTime, reminder.epma_prescriptionreminders_id), moment(remindersplotTime),\n                    null, reminder.epma_prescriptionreminders_id, 1, false, 1, false, contents.Reminderdue, reminder.message)\n            }\n            else if (Overdue.isAfter(moment(remindersplotTime))) {\n                this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + this.createLogicalId(remindersplotTime, reminder.epma_prescriptionreminders_id), moment(remindersplotTime),\n                    null, reminder.epma_prescriptionreminders_id, 0, false, 1, false, contents.Reminderoverdue, reminder.message)\n            }\n\n            if(reminder.repeattype==\"h\")\n            remindersplotTime = moment(remindersplotTime).add(reminder.repeatsize,\"h\")\n            if(reminder.repeattype==\"m\")\n            remindersplotTime = moment(remindersplotTime).add(reminder.repeatsize,\"m\")\n            if(reminder.repeattype==\"d\")\n            remindersplotTime = moment(remindersplotTime).add(reminder.repeatsize,\"d\")\n        }\n\n\n    }\n    AddReminders(eventStartDate: any, eventEndDate: any,Reminderprescription:Prescription) {\n        //  let overduetimeOther =overduetimeOther.add(this.appService.appConfig.defaultReminderOverdueTimePeriod, \"hours\");\n        let start = moment(eventStartDate).clone();\n        let enddate = moment(eventEndDate).clone();moment\n        if (Reminderprescription) {\n          let  sortreminder = this.appService.CurrentReminderevents.sort((a, b) => new Date(a.eventStart).getTime() - new Date(b.eventStart).getTime()).filter(x=>x.prescription_id==Reminderprescription.prescription_id)\n            let pendingReminder = sortreminder.find(x=>moment(x.eventStart).isAfter(moment()));\n            if(pendingReminder){\n                pendingReminder.pending=true;\n                this.appService.AllReminderevents.push(pendingReminder);\n            }\n\n        }\n       \n        for (let reminder of this.appService.Prescriptionreminders) {\n            let Overdue = moment().add(-this.appService.appConfig.defaultReminderOverdueTimePeriod, 'h');\n\n            if (!reminder.activationdatetime) {\n                let administration = this.appService.Medicationadministration.filter(x => x.prescription_id == reminder.prescription_id).sort((a, b) => new Date(a.administrationstartime).getTime() - new Date(b.administrationstartime).getTime());\n                if (administration.length > 0) {\n                    reminder.__calculatedactivationdatetime = moment(administration[0].administrationstartime, \"YYYY-MM-DD HH:mm\").add(+reminder.activationinhours, \"hours\")\n                }\n                else{\n                    continue;\n                }\n            } else {\n                reminder.__calculatedactivationdatetime = moment(reminder.activationdatetime);\n            }\n\n\n            if (reminder.remindertype && reminder.remindertype == 1) {\n\n                this.createRepeatReminder(start, enddate, reminder);\n\n            }\n            else if (reminder.remindertype && reminder.remindertype == 2) {\n                this.createWithDoseReminder(reminder)\n            }\n            else {\n                if (reminder.isacknowledged) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + reminder.epma_prescriptionreminders_id, moment(reminder.__calculatedactivationdatetime),\n                        null, reminder.epma_prescriptionreminders_id, 3, false, 0, false, contents.ReminderAcknowledged, reminder.message,false,reminder.issystem)\n                }\n                else if (moment(reminder.__calculatedactivationdatetime).isSameOrAfter(moment())) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + reminder.epma_prescriptionreminders_id, moment(reminder.__calculatedactivationdatetime),\n                        null, reminder.epma_prescriptionreminders_id, 2, false, 0, false, contents.Reminder, reminder.message,false,reminder.issystem)\n                }\n                else if (moment(reminder.__calculatedactivationdatetime).isBefore(moment()) && Overdue.isBefore(moment(reminder.__calculatedactivationdatetime))) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + reminder.epma_prescriptionreminders_id, moment(reminder.__calculatedactivationdatetime),\n                        null, reminder.epma_prescriptionreminders_id, 1, false, 0, false, contents.Reminderdue, reminder.message,false,reminder.issystem)\n                }\n                else if (Overdue.isAfter(moment(reminder.__calculatedactivationdatetime))) {\n                    this.addReminderevents(reminder.prescription_id, \"dur_Reminder\" + reminder.epma_prescriptionreminders_id, moment(reminder.__calculatedactivationdatetime),\n                        null, reminder.epma_prescriptionreminders_id, 0, false, 0, false, contents.Reminderoverdue, reminder.message,false,reminder.issystem)\n                }\n            }\n        }\n\n       \n\n        if (!this.isreportevents) {\n            for (let reminder of this.appService.Prescriptionreminders.filter(x => !x.issystem && (x.remindertype !=1 && x.remindertype !=2))) {\n\n                if(this.appService.CurrentReminderevents.find(x=> x.epma_prescriptionreminders_id != reminder.epma_prescriptionreminders_id && moment(x.eventStart).isSame(moment(reminder.activationdatetime) ) && x.prescription_id == reminder.prescription_id )){\n                    let array = this.appService.CurrentReminderevents.filter(x=> moment(x.eventStart).isSame(moment(reminder.activationdatetime)) && x.prescription_id == reminder.prescription_id)\n                    for(let obj of array){\n                      \n                       this.appService.CurrentReminderevents.splice(this.appService.CurrentReminderevents.indexOf(obj), 1);\n                    }\n                   // this.appService.CurrentReminderevents= this.appService.CurrentReminderevents.filter(x=>x.epma_prescriptionreminders_id == reminder.epma_prescriptionreminders_id && ! moment(x.eventStart).isSame(moment(reminder.activationdatetime)) && x.prescription_id == reminder.prescription_id)\n                    \n                    if(array.find(x=>x.type < 3)){\n                        array=array.filter(x=>x.type < 3);\n                        if(array[0].type== 2){\n                            array[0].content= contents.Multiple_Reminders;\n                            array[0].title=\"Multiple Reminders\";\n\n                        }\n                        if(array[0].type== 1){\n                            array[0].content= contents.Multiple_Reminders_With_The_Date;\n                            array[0].title=\"Multiple Reminders\";\n\n                        }\n                        if(array[0].type== 0){\n                            array[0].content= contents.Multiple_Reminders_One_Day_Has_Passed;\n                            array[0].title=\"Multiple Reminders\";\n\n                        }\n                        this.appService.CurrentReminderevents.push(array[0]);\n\n                    }\n                    else{\n                        array[0].content= contents.Multiple_Reminders_Has_Been_Acknowledged;\n                        array[0].title=\"Multiple Reminders3\";\n                        this.appService.CurrentReminderevents.push(array[0]);\n                    }\n\n                }\n                \n            } \n        }\n    }\n    AddCIDurationLine(prescription: Prescription, sortedArray: any) {\n\n        this.appService.events = this.appService.events.filter(x => !(x.dose_id.includes(\"dur\") && x.prescription_id == prescription.prescription_id));\n\n\n\n\n        let length = sortedArray.length;\n        sortedArray.forEach((value, index) => {\n            // console.log(index); // 0, 1, 2\n            // console.log(value); // 9, 2, 5\n            if (!value.dose_id.includes(\"pause\") && !value.dose_id.includes(\"end_\")) {\n                let linestartDatetime = value.eventStart\n                let LineEndline: any;\n                if (index + 1 == length) {\n                    LineEndline = moment(this.timelineend);\n                }\n                else {\n                    LineEndline = sortedArray[index + 1].eventStart\n                }\n                if (this.appService.Medicationadministration.find(x => x.administredinfusionrate == 0 && x.logicalid == value.dose_id)) {\n                    this.addevents(prescription.prescription_id, \"durdoted\" + index + prescription.prescription_id, linestartDatetime,\n                        LineEndline, prescription.__posology[0].posology_id, false, false, false, true, \"<div class='PauseDurline'></div>\", \"\")\n                }\n                else {\n                    this.addevents(prescription.prescription_id, \"dur\" + index + prescription.prescription_id, linestartDatetime,\n                        LineEndline, prescription.__posology[0].posology_id, false, false, false, true, contents.durationline, \"\")\n                }\n\n            }\n        });\n\n\n    }\n    CurrentPrescriptionFlowArray(prescription: Prescription) {\n\n        let currentPresctionStatus\n        let prescriptionEvents = this.appService.Medicationadministration.filter(e => e.prescription_id == prescription.prescription_id && !e.logicalid.includes(\"bolus_\"))\n        let latestevent = this.appService.events.filter(e => e.prescription_id == prescription.prescription_id && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\"))\n        latestevent = latestevent.sort((b, a) => moment(a.eventStart).valueOf() - moment(b.eventStart).valueOf())\n        prescriptionEvents = prescriptionEvents.sort((a, b) => moment(a.administrationstartime).valueOf() - moment(b.administrationstartime).valueOf())\n        if (prescription.__completed || this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == prescription.prescriptionstatus_id).status == \"stopped\" ||\n            this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == prescription.prescriptionstatus_id).status == \"cancelled\") {\n            currentPresctionStatus = {\n                start: this.timelinestart,\n                end: this.timelineend,\n                prescriptionid: prescription.prescription_id,\n                content: \"<strong>Stopped</strong>\"\n            }\n        }\n        else if (!prescriptionEvents.find(x => x.logicalid.startsWith(\"start_\"))) {\n            currentPresctionStatus = {\n                start: this.timelinestart,\n                end: this.timelineend,\n                prescriptionid: prescription.prescription_id,\n                content: \"<strong>Not started</strong>\"\n            }\n        }\n        else if (prescriptionEvents.find(x => x.logicalid.startsWith(\"start_\"))) {\n            let content = \"<strong>Currently: \" + prescriptionEvents[prescriptionEvents.length - 1].administredinfusionrate + \" \" + prescription.__posology[0].infusionrateunits + \"</strong>\"\n            if (latestevent[0].dose_id.startsWith(\"pause\")) {\n                content = \"<strong>PAUSED-previously: \" + prescriptionEvents[prescriptionEvents.length - 1].administredinfusionrate + \" \" + prescription.__posology[0].infusionrateunits + \"</strong>\"\n            }\n            currentPresctionStatus = {\n                start: this.timelinestart,\n                end: this.timelineend,\n                prescriptionid: prescription.prescription_id,\n                content: content\n            }\n        }\n        this.appService.arrPrescriptionCurrentFlowRate.push(currentPresctionStatus);\n\n\n\n\n    }\n    AddStackClassEvent(prescription: Prescription) {\n        if (prescription.isinfusion && (prescription.__posology[0].infusiontypeid == 'ci' || prescription.__posology[0].infusiontypeid == InfusionType.pca)) {\n            this.CurrentPrescriptionFlowArray(prescription);\n        }\n\n        let prescriptionEvents = this.appService.events.filter(e => e.prescription_id == prescription.prescription_id && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.content.includes(\"Administer_PRN\") && !e.dose_id.includes(\"infusionevent\"))\n        /////////////////remove duplicate////////////////////////\n        let temp = prescriptionEvents;\n        prescriptionEvents = Array.from(new Set(temp.map(a => a.dose_id)))\n            .map(id => {\n                return temp.find(a => a.dose_id === id)\n            })\n\n        //////////////////////////////////////////////////\n\n        const sortedArray = prescriptionEvents.sort((a, b) => a.eventStart - b.eventStart)\n        if (prescription.isinfusion && (prescription.__posology[0].infusiontypeid == 'ci' || prescription.__posology[0].infusiontypeid == InfusionType.pca)) {\n            this.AddCIDurationLine(prescription, sortedArray);\n        }\n        let EventIsStackTrue: any\n        let zoombooton\n        let priviousEvent: any\n        for (let pNext of sortedArray) {\n            if (EventIsStackTrue) {\n                let lastevent = new Date(moment(EventIsStackTrue.eventStart, moment.ISO_8601).toString());\n                let currentEvent = new Date(moment(pNext.eventStart, moment.ISO_8601).toString());\n                let diffMs = (currentEvent.valueOf() - lastevent.valueOf());\n                let diffrence = Math.round(diffMs / 60000);\n\n                if (diffrence < 91) {\n                    if (priviousEvent && priviousEvent.stackclass != true) {//if there is allready a stack class in net event no need to add\n                        EventIsStackTrue.diffrence = diffrence;\n                        EventIsStackTrue.stackclass = true;\n                    }\n                    //check to add zoom button every 90 min diffrence\n                    if (zoombooton && Math.round((moment(EventIsStackTrue.eventStart).valueOf() - moment(zoombooton.eventStart).valueOf()) / 60000) < 40) {\n                        priviousEvent = EventIsStackTrue;\n                        EventIsStackTrue = pNext;\n                        continue;\n                    }\n                    zoombooton = {\n                        prescription_id: EventIsStackTrue.prescription_id,\n                        posology_id: EventIsStackTrue.posology_id,\n                        dose_id: \"dur_Zoom\" + EventIsStackTrue.dose_id,\n                        eventStart: moment(EventIsStackTrue.eventStart),\n                        eventEnd: null,\n                        prn: false,\n                        iscancel: false,\n                        doctorsorder: false,\n                        isinfusion: false,\n                        content: \"<div class ='Zoombutton'></div>\",\n                        title: \"\",\n                        admitdone: false,\n                        opacityclass: \"\",\n                        diffrence: diffrence,\n                        stackclass: false\n\n                    }\n                    this.appService.stackButtons.push(zoombooton);\n\n                }\n            }\n            else {\n\n                //first loop only when priviousEvent and EventIsStackTrue is undefind\n                priviousEvent = pNext;\n                EventIsStackTrue = pNext;\n                continue;\n            }\n            priviousEvent = EventIsStackTrue;\n            EventIsStackTrue = pNext;\n\n\n        }\n    }\n\n    checkIFMOAisPrescrib(prescription: Prescription) {\n\n\n\n        let formularycode = prescription.__medications.find(x => x.isprimary).__codes.find(y => y.terminology == \"formulary\").code;\n        //  let codeobject = this.appService.Prescription.find(x => x.prescription_id != prescription.prescription_id).__medications.find(y => y.isprimary == true).__codes.find(z => z.terminology == \"formulary\" && z.code == formularycode)\n        let codeobject = this.appService.Prescription.filter(x => x.prescription_id != prescription.prescription_id && x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Inpatient).prescriptioncontext_id &&\n            (x.__medications.find(y => y.isprimary == true).__codes.filter(z => z.terminology == \"formulary\" && z.code == formularycode).length != 0))\n        if (codeobject && codeobject.length != 0) {\n            return true;// MOA match and no need to show\n        }\n        else {\n            return false // Code not found and MOA prescription not prescribed\n        }\n    }\n\n    AddPRNFutureLine(prescriptions: Prescription[]) {\n\n        let prnPrescriptions = prescriptions.filter(x => x.__posology.find(z => z.iscurrent && z.prn))\n        for (let p of prnPrescriptions) {\n\n            if (this.appService.events.find(x => x.prescription_id == p.prescription_id && x.admitdone == true && x.content != contents.EnterInError)) {\n                let pres = this.appService.events.filter(x => x.prescription_id == p.prescription_id && x.admitdone == true && x.content != contents.EnterInError)\n                if (pres) {\n                    const sortedArray = pres.sort((b, a) => a.eventStart - b.eventStart)\n                    let lastadmited = sortedArray[0];\n                    let enddate: any;\n                    if (p.__posology.find(x => x.iscurrent).frequency == \"h\") {\n                        enddate = moment(lastadmited.eventStart).add(p.__posology.find(x => x.iscurrent).frequencysize, 'hours');  // see the cloning?frequency\n                    }\n                    else {\n                        enddate = moment(lastadmited.eventStart).add(p.__posology.find(x => x.iscurrent).frequencysize, 'minutes');\n                    }\n\n                    if (p.__posology.find(x => x.posology_id == lastadmited.posology_id && x.iscurrent)) {\n                        this.addevents(lastadmited.prescription_id, \"dur\" + lastadmited.prescription_id, lastadmited.eventStart,\n                            enddate, lastadmited.posology_id, false, false, false, true, \"<div class='divPRN'></div>\", \"PRN\")\n                    }\n                }\n            }\n\n\n        }\n\n    }\n\n    createEvents(eventStartDate: any, eventEndDate: any, isReportview = false,Reminderprescription:Prescription = null,CreateWithheldEvents=false) {\n        this.CreateWithheldEvents=CreateWithheldEvents\n        this.isreportevents = isReportview;\n        if (!isReportview) {\n            this.timelinestart = eventStartDate;\n            this.timelineend = eventEndDate;\n            this.appService.events = [];\n            this.appService.CurrentReminderevents = []\n            this.appService.arrPrescriptionCurrentFlowRate = [];\n            this.appService.stackButtons = [];\n        }\n        else {\n            this.appService.AllReminderevents = [];\n            this.appService.reportData = [];\n        }\n\n\n\n        this.appService.FilteredPrescription = this.appService.FilteredPrescription.filter(x => x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Admission).prescriptioncontext_id\n            || x.prescriptioncontext_id == null || x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Inpatient).prescriptioncontext_id)\n\n        let posologyloopCount = 0;\n        let loopPrescription=[]\n        if(Reminderprescription){\n            loopPrescription.push(this.appService.FilteredPrescription.find(x=>x.prescription_id==Reminderprescription.prescription_id))\n        }\n        else{\n            loopPrescription= this.appService.FilteredPrescription\n        }\n        for (let prescription of loopPrescription) {\n\n            this.bufferambertime = this.appService.buffertimeAmber;\n            if (prescription.__medications.find(x => x.isprimary).iscritical) {\n                this.bufferambertime = this.appService.criticalDrugbuffertimeAmber;\n            }\n            this.prescriptionStatus = \"\";\n\n            if (prescription.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Admission).prescriptioncontext_id) {\n\n                if (this.checkIFMOAisPrescrib(prescription)) {\n                    this.appService.FilteredPrescription = this.appService.FilteredPrescription.filter(x => x.prescription_id != prescription.prescription_id)\n                    continue;\n                }\n                else {\n                    continue;\n                }\n            }\n            // setting max and min event date \n\n            // this.MaxEventDate=  moment(eventEndDate);\n            // this.minEventDate = moment(eventStartDate);\n            // this.MaxEventDate.set({ hour: 23, minute: 59, second: 0, millisecond: 0 })\n            // this.minEventDate.set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n\n            if (prescription.prescriptionstatus_id != null && prescription.prescriptionstatus_id != \"\") {\n                this.prescriptionStatus = this.appService.MetaPrescriptionstatus.find(x => x.prescriptionstatus_id == prescription.prescriptionstatus_id).status;\n            }\n            for (let pslg of prescription.__posology) {\n                posologyloopCount = 0;\n                if (this.appService.encounter.dischargedatetime && moment(eventEndDate).isAfter(moment(this.appService.encounter.dischargedatetime))) {\n                    this.MaxEventDate = moment(this.appService.encounter.dischargedatetime);\n                }\n                else {\n                    this.MaxEventDate = moment(eventEndDate);\n                    this.MaxEventDate.set({ hour: 23, minute: 59, second: 0, millisecond: 0 })\n                }\n\n                this.minEventDate = moment(eventStartDate);\n\n                this.minEventDate.set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n                if (pslg.prn) {\n                    // create all administer events only onces\n                    if (posologyloopCount == 0) {\n                        posologyloopCount = 1;\n                        this.addAdministeredEvent(prescription);\n                    }\n                    if (pslg.iscurrent && this.prescriptionStatus != \"suspended\" && this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\") {\n\n                        this.addevents(prescription.prescription_id, pslg.__dose[0].dose_id, new Date(), null, pslg.posology_id, pslg.prn,\n                            false, false, false, contents.Administer_PRN, title.Administer_PRN)\n                        this.PRNids.push(pslg.__dose[0].dose_id);\n\n                    }\n                    // if (this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\") {\n\n                    // }\n                }\n                else if (prescription.isinfusion) {\n                    //  if ( this.prescriptionStatus != \"cancelled\") {\n                    this.addInfutionEvent(prescription, pslg);\n                    //  }\n                }\n                else {\n                    let temp = this.appService.TimelineArray;\n                    this.currentDate = new Date();\n\n                    // if (this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\") {\n\n                    if (posologyloopCount == 0) {\n                        posologyloopCount = 1;\n                        this.addAdministeredEvent(prescription);\n                    }\n\n                    if (pslg.frequency == \"protocol\") {\n                        this.addProtocolEvents(prescription, pslg, this.prescriptionStatus);\n                    }\n                    else {\n                        this.addLogicalEvent(prescription, pslg, this.prescriptionStatus);\n                    }\n\n\n                }\n            }\n            this.AddStackClassEvent(prescription);\n        }\n\n        let temp = this.appService.events;\n        this.appService.events = Array.from(new Set(temp.map(a => a.dose_id)))\n            .map(id => {\n                return temp.find(a => a.dose_id === id)\n            })\n            if (isReportview) {\n                let reportData = this.appService.reportData;\n            this.appService.reportData = Array.from(new Set(reportData.map(a => a.dose_id)))\n            .map(id => {\n                return reportData.find(a => a.dose_id === id)\n            })\n        }\n        this.AddReminders(eventStartDate, eventEndDate,Reminderprescription);\n        this.AddPRNFutureLine(this.appService.FilteredPrescription);\n\n    }\n\n\n    addProtocolEvents(prescription: Prescription, pslg: Posology, prescriptionStatus: string) {\n\n        let repitTimes = pslg.repeatprotocoltimes;\n        let minemumDate = new Date(Math.min.apply(null, pslg.__dose.map(function (e) {\n            return new Date(e.dosestartdatetime);\n        })));\n        let maximumDate = new Date(Math.max.apply(null, pslg.__dose.map(function (e) {\n            return new Date(e.dosestartdatetime);\n        })));\n        let dateDiff = 0;\n\n\n\n\n\n        do {// to repete whole protocall 1 ti\n            for (let dose of pslg.__dose) {\n                if (moment(this.minEventDate) < moment(dose.dosestartdatetime) &&\n                    moment(dose.dosestartdatetime) <= moment(this.MaxEventDate)) {\n                    let ploteDate = moment(dose.dosestartdatetime)\n                    ploteDate = moment(ploteDate).add(dateDiff, 'd');\n                    const logicalId = this.createLogicalId(ploteDate, dose.dose_id);\n                    if (!this.appService.Medicationadministration.find(x => x.logicalid == logicalId)) {\n                        if (!(!dose.dosesize && !dose.strengthdenominator && !dose.strengthneumerator && !dose.descriptivedose)) {\n                            let enddate = moment(this.MaxEventDate)\n                            if (prescriptionStatus == \"suspended\" || prescriptionStatus == \"stopped\" || prescriptionStatus == \"cancelled\") {\n                                enddate = moment(prescription.lastmodifiedon)\n                            }\n                            if (moment(enddate).isSameOrAfter(moment(ploteDate))) {\n                                this.createLogicalevents(pslg, ploteDate, dose);\n                            }\n                        }\n                    }\n\n                }\n            }\n            dateDiff = dateDiff + moment(maximumDate).diff(moment(minemumDate), 'days') + 1;\n            repitTimes = repitTimes - 1;\n            if (repitTimes < 1) {\n                break;\n            }\n        } while (!pslg.repeatlastday)\n        ///////////////// loo end ////////////////////////\n        // repeate only last day\n\n        if (pslg.repeatlastday) {\n            let lastdose = pslg.__dose[pslg.__dose.length - 1];\n\n            let dose = [];\n            for (let x of pslg.__dose) {\n                if (moment(lastdose.dosestartdatetime).format('DD') == moment(x.dosestartdatetime).format('DD')) {\n                    if (x.dosesize && x.dosesize != \"0\") {\n                        dose.push(x);\n                    }\n                }\n            }\n            //  let dose = pslg.__dose.filter(x=> moment(x.dosestartdatetime, \"MM/DD/YYYY\").format('DD') == moment(tempdose.dosestartdatetime).format('DD'))\n            for (let plotdose of dose) {\n                let ploteDate = moment(plotdose.dosestartdatetime)\n                let repeatlastdayuntil = moment(pslg.repeatlastdayuntil)\n                if (moment(repeatlastdayuntil, \"MM/DD/YYYY\") < moment(this.MaxEventDate, \"MM/DD/YYYY\")) {\n                    this.MaxEventDate = moment(pslg.repeatlastdayuntil);\n                    this.MaxEventDate.set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n                }\n                if (prescriptionStatus == \"suspended\" || prescriptionStatus == \"stopped\" || prescriptionStatus == \"cancelled\") {\n                    this.MaxEventDate = moment(prescription.lastmodifiedon)\n                }\n                ploteDate = moment(ploteDate).add(1, 'd');\n                while (moment(ploteDate).isSameOrBefore(moment(this.MaxEventDate))) {\n\n\n                    const logicalId = this.createLogicalId(ploteDate, plotdose.dose_id);\n                    if (!this.appService.Medicationadministration.find(x => x.logicalid == logicalId)) {\n                        if (pslg.iscurrent || moment(pslg.prescriptionenddate) >= ploteDate) {\n\n                            this.createLogicalevents(pslg, ploteDate, plotdose);\n                        }\n                    }\n                    ploteDate = moment(ploteDate).add(1, 'd');\n\n\n\n                }\n            }\n\n        }\n\n\n\n    }\n\n    addLogicalEvent(prescription: Prescription, pslg: Posology, prescriptionStatus: string) {\n        let daystoplot = JSON.parse(pslg.daysofweek);\n        for (let dose of pslg.__dose) {\n            let ploteDate = moment(dose.dosestartdatetime);\n            let enddate = moment(pslg.prescriptionenddate)\n            if (prescriptionStatus == \"suspended\" || prescriptionStatus == \"stopped\" || prescriptionStatus == \"cancelled\") {\n                if( pslg.prescriptionenddate && moment(pslg.prescriptionenddate).isBefore(moment(prescription.lastmodifiedon))){\n                    enddate = moment(pslg.prescriptionenddate)\n                }\n                else{\n                    enddate = moment(prescription.lastmodifiedon)\n                }\n                let dosetransfer = this.appService.DoseEvents.filter(x => x.posology_id == pslg.posology_id && x.eventtype == \"Transfer\");\n                dosetransfer.sort((b,a) => new Date(a.startdatetime).getTime() - new Date(b.startdatetime).getTime())\n                for(let transEvent of dosetransfer){//finding max event transferdate before stoping  \n                   if(moment(transEvent.startdatetime).isAfter(moment(prescription.lastmodifiedon)) && moment(transEvent.dosedatetime).isBefore(moment(prescription.lastmodifiedon))){\n                    enddate = moment(transEvent.startdatetime)\n                    break;\n                   }\n                }\n               \n                \n            }\n           \n            if (!this.CreateWithheldEvents && moment(enddate) <= moment(this.MaxEventDate)) {\n                this.MaxEventDate = moment(enddate);\n\n            }\n            let futureTransferevent = this.appService.DoseEvents.filter(x => x.dose_id == dose.dose_id && x.posology_id == pslg.posology_id && (moment(x.startdatetime).isAfter(moment(pslg.prescriptionenddate)) &&\n                (moment(x.dosedatetime).isSameOrBefore(moment(pslg.prescriptionenddate)))));\n          \n            for (let k of futureTransferevent) {\n                if (prescription.__posology.find(x => x.posology_id == k.posology_id)) {\n\n                    this.createLogicalevents(pslg, moment(k.startdatetime), dose);\n                    // addfutureevent.push(k);\n                }\n            }\n\n            if (dose.isadditionaladministration) {// if isadditional administration not need to loop till date   \n                const logicalId = this.createLogicalId(ploteDate, dose.dose_id);\n                if (!this.appService.Medicationadministration.find(x => x.logicalid == logicalId)) {\n                    if (pslg.iscurrent || moment(pslg.prescriptionenddate) > ploteDate) {\n                        this.createLogicalevents(pslg, ploteDate, dose);\n\n                    }\n                }\n            }\n            else {\n                while (moment(ploteDate, \"MM/DD/YYYY HH\") <= moment(this.MaxEventDate, \"MM/DD/YYYY HH\")) {\n                    const logicalId = this.createLogicalId(ploteDate, dose.dose_id);\n                    if (!this.appService.Medicationadministration.find(x => x.logicalid == logicalId)) {\n\n                        if (daystoplot.indexOf(moment(ploteDate).format('dddd')) > -1 || daystoplot.length == 0) {\n                            if (moment(this.minEventDate, \"MM/DD/YYYY\") < moment(ploteDate, \"MM/DD/YYYY\")) {\n                                if (pslg.iscurrent || moment(pslg.prescriptionenddate) >= ploteDate) {\n                                    this.createLogicalevents(pslg, ploteDate, dose)\n                                    if (pslg.frequency == \"stat\") {\n                                        break;\n                                    }\n                                }\n                            }\n                        } else {\n                            //Not in the array\n                        }\n\n                    }\n                    if (pslg.frequency == \"stat\") {\n                        break;\n                    }\n                    if (pslg.dosingdaysfrequencysize == 0) {\n                        ploteDate = moment(ploteDate).add(1, 'd');\n                    }\n                    else {\n                        if (pslg.dosingdaysfrequency == \"days\") {\n                            ploteDate = moment(ploteDate).add(pslg.dosingdaysfrequencysize, 'd');\n                        }\n                        else if (pslg.dosingdaysfrequency == \"weeks\") {\n                            ploteDate = moment(ploteDate).add(pslg.dosingdaysfrequencysize, 'w');\n                        }\n                        else if (pslg.dosingdaysfrequency == \"months\") {\n                            ploteDate = moment(ploteDate).add(pslg.dosingdaysfrequencysize, 'M');\n                        }\n\n                    }\n                }\n            }\n        }\n\n    }\n\n\n\n    createLogicalevents(pslg: Posology, ploteDate: any, dose: Dose) {\n        let logical_ID = this.createLogicalId(ploteDate, dose.dose_id)\n        let posology = pslg;\n\n        if (moment(posology.prescriptionstartdate) > moment(ploteDate)) {\n            if (!dose.isadditionaladministration) {\n                return;\n            }\n        }\n        let doseprescription = this.appService.Prescription.find(x => x.prescription_id == dose.prescription_id)\n        // Checking if dose required doctors or and also if doctor has not yet conform isdoctorsorderconfirmed shoud be false\n        let isdoseCancle = false;\n        let canceldose;\n        let doctorcomporm = this.appService.DoseEvents.find(x => x.logicalid == logical_ID && x.eventtype == \"doconfirm\") ? true : false;\n\n        let isTitrationDone = this.appService.DoseEvents.find(\n            x => x.dose_id == null && x.eventtype == \"titration\" && x.posology_id == pslg.posology_id &&\n                (moment(x.titrateduntildatetime) >= moment(ploteDate) || x.titrateduntildatetime == null)) ? true : false;\n\n\n        if (!isTitrationDone) {\n            isTitrationDone = this.appService.DoseEvents.find(x => x.dose_id == dose.dose_id && x.eventtype == \"titration\" && x.logicalid == logical_ID && moment(x.titrateduntildatetime).format(\"YYYYMMDDHHmm\") == moment(ploteDate).format(\"YYYYMMDDHHmm\")) ? true : false;\n\n        }\n\n        if (this.appService.DoseEvents.filter(x => x.logicalid == logical_ID && x.eventtype != \"Undo\").length > 0) {\n            isdoseCancle = this.appService.DoseEvents.filter(x => x.logicalid == logical_ID)[0].eventtype == \"Cancel\" ? true : false;\n            canceldose=this.appService.DoseEvents.filter(x => x.logicalid == logical_ID)[0]\n        }\n\n        let dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == logical_ID && x.eventtype == \"Transfer\");\n        if (dosetransferDate) {\n            ploteDate = moment(dosetransferDate.dosedatetime);\n            if (moment(pslg.prescriptionenddate) <= ploteDate) {\n                return;\n            }\n        }\n\n        dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == logical_ID && x.eventtype == \"AdminTransfer\");\n        if (dosetransferDate) {\n            ploteDate = moment(dosetransferDate.dosedatetime);\n        }\n\n        /////////////////////////////////////\n        let current = new Date(moment(new Date(), moment.ISO_8601).toString());\n        let start = new Date(moment(ploteDate, moment.ISO_8601).toString());\n        let diffMs = (start.valueOf() - current.valueOf());\n        let diffMins = Math.round(diffMs / 60000); // minutes\n        ///////////////////////////////\n\n        if (isdoseCancle) {\n            // if (posology.doctorsorder) {\n                if(canceldose.comments == \"Medication suspended\"){\n                    this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                        isdoseCancle, doctorcomporm, false, contents.Administration_withheld_by_doctor, \"Withheld by prescriber\")                    \n                }\n                else{\n                    this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                        isdoseCancle, doctorcomporm, false, contents.Administration_withheld_by_doctor, title.Administration_withheld_by_doctor)                }\n           \n            // }\n            // else {\n            //     this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n            //         isdoseCancle, doctorcomporm, false, contents.Cancelled)\n            // }\n        }\n        else if (doseprescription.titration && !isTitrationDone && !isdoseCancle) {\n            if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Due, title.Administration_requires_doctors_confirmation_Due)\n            }\n\n            else if (diffMins <= -this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Late, title.Administration_requires_doctors_confirmation_Late)\n            }\n            else if (diffMins >= this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Planned, title.Administration_requires_doctors_confirmation_Planned)\n            }\n        }\n        else if (posology.doctorsorder && !doctorcomporm && !isdoseCancle) {\n            if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Due, title.Administration_requires_doctors_confirmation_Due)\n            }\n\n            else if (diffMins <= -this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Late, title.Administration_requires_doctors_confirmation_Late)\n            }\n            else if (diffMins >= this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, true, false, contents.Administration_requires_doctors_confirmation_Planned, title.Administration_requires_doctors_confirmation_Planned)\n            }\n        }\n        // check if dose not cancel and even if doctor order is required in dose order is conformed\n        else if (!isdoseCancle) {\n            if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, false, false, contents.Due_Administration, title.Due_Administration)\n            }\n            else if (diffMins <= -this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, false, false, contents.Late_Administration, title.Late_Administration)\n            }\n            else if (diffMins >= this.bufferambertime) {\n                this.addevents(dose.prescription_id, logical_ID, ploteDate, null, dose.posology_id, posology.prn,\n                    isdoseCancle, false, false, contents.Planned_Administration, title.Planned_Administration)\n            }\n        }\n\n\n    }\n\n    addAdministeredEvent(Prescription: Prescription) {\n        for (let medicationadministration of this.appService.Medicationadministration.filter(x => x.prescription_id == Prescription.prescription_id)) {\n\n            if (moment(this.minEventDate) < moment(medicationadministration.administrationstartime)) {\n                // if (true) {\n                let pslg = Prescription.__posology.find(x => x.posology_id == medicationadministration.posology_id)\n                if (!pslg) {\n                    this.addAdministeredEventForDeletedPSLG(medicationadministration);\n                    continue;\n                }\n                if (medicationadministration.isenterinerror) {\n                    this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        null, pslg.posology_id, pslg.prn, false, false, false, contents.EnterInError, title.EnterInError, true)\n                    continue;\n                }\n                let plannedtime = new Date(moment(medicationadministration.planneddatetime, moment.ISO_8601).toString());\n                let administeredtime = new Date(moment(medicationadministration.administrationstartime, moment.ISO_8601).toString());\n\n                let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n                let diffMins = Math.round(diffMs / 60000); // minutes\n                // Check the statuse is defer\n                let plannedinfustionValue = + medicationadministration.planneddosesize;\n                let administredinfusionValue = +medicationadministration.administreddosesize;\n                let maxdose = +medicationadministration.planneddosesizerangemax\n                if (pslg.dosetype == \"units\") {\n                    plannedinfustionValue = +medicationadministration.planneddosesize;\n                    administredinfusionValue = +medicationadministration.administreddosesize;\n                }\n                else if (pslg.dosetype == \"strength\") {\n                    plannedinfustionValue = +medicationadministration.plannedstrengthneumerator;\n                    administredinfusionValue = +medicationadministration.administeredstrengthneumerator;\n                }\n                else {// for descriptive no need to compare\n                    plannedinfustionValue = 0;\n                    administredinfusionValue = 0;\n                }\n\n                if (medicationadministration.adminstrationstatus == \"defer\") {\n                    this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Defered, title.Administration_Defered, true)\n                }\n                //-- if statuse notgiven\n                else if (medicationadministration.adminstrationstatus == \"notgiven\") {\n                    this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Failed, title.Administration_Failed, true)\n                }\n                // for prn cannot be late or early\n                else if (pslg.prn) {\n                    if (plannedinfustionValue == administredinfusionValue) {\n                        this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, pslg.posology_id, pslg.prn, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                    }\n                    else {\n                        this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                    }\n\n                }\n                //-- if administed and statuse given or self given\n                else {\n                    //On time administered ---------------------------------------------------------------------------\n                    if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                        /// if diffrentproduct is administer\n                        if (medicationadministration.isdifferentproductadministered) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_Administered_Is_A_Different_Product_From_Prescribed, title.Dose_Administered_Is_A_Different_Product_From_Prescribed, true)\n                        }\n                        // cheching Dose administered is differnt from prescribed\n                        else if (maxdose && maxdose > 0) {\n                            if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                            }\n                            else {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                            }\n                        }\n                        else if (plannedinfustionValue == administredinfusionValue) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                        }\n                        else {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                        }\n                    }\n                    // early dose Administered ---------------------------------------------------------------------------\n                    else if (diffMins <= -this.appService.bufferAdministered) {\n                        //   cheching Administered early  but Dose administered early is differnt from prescribed\n                        if (medicationadministration.isdifferentproductadministered) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_Administered_Early_Is_A_Different_Product_From_Prescribed, title.Dose_Administered_Early_Is_A_Different_Product_From_Prescribed, true)\n                        }\n\n                        else if (maxdose && maxdose > 0) {\n                            if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Completed_early, title.Administration_Completed_early, true)\n                            }\n                            else {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_early_is_differnt_from_prescribed, title.Dose_administered_early_is_differnt_from_prescribed, true)\n                            }\n                        }\n                        else if (plannedinfustionValue == administredinfusionValue) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Completed_early, title.Administration_Completed_early, true)\n                        }\n                        else {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_early_is_differnt_from_prescribed, title.Dose_administered_early_is_differnt_from_prescribed, true)\n                        }\n                    }\n\n                    // late dose Administered -----------------------------------------------------------------------------\n                    else if (diffMins >= -this.appService.bufferAdministered) {\n                        if (medicationadministration.isdifferentproductadministered) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_Administered_Late_Is_A_Different_Product_From_Prescribed, title.Dose_Administered_Late_Is_A_Different_Product_From_Prescribed, true)\n                        }\n\n                        //   cheching Administered early  but Dose administered early is differnt from prescribed\n                        else if (maxdose && maxdose > 0) {\n                            if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Completed_late, title.Administration_Completed_late, true)\n                            }\n                            else {\n                                this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_late_is_differnt_from_prescribed, title.Dose_administered_late_is_differnt_from_prescribed, true)\n                            }\n                        }\n                        else if (plannedinfustionValue == administredinfusionValue) {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Administration_Completed_late, title.Administration_Completed_late, true)\n                        }\n                        else {\n                            this.addevents(pslg.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, pslg.posology_id, pslg.prn, false, false, false, contents.Dose_administered_late_is_differnt_from_prescribed, title.Dose_administered_late_is_differnt_from_prescribed, true)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    addAdministeredEventForDeletedPSLG(medicationadministration: Medicationadministration) {\n\n        if (moment(this.minEventDate) < moment(medicationadministration.administrationstartime)) {\n            // if (true) {\n            let plannedtime = new Date(moment(medicationadministration.planneddatetime, moment.ISO_8601).toString());\n            let administeredtime = new Date(moment(medicationadministration.administrationstartime, moment.ISO_8601).toString());\n\n            let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n            let diffMins = Math.round(diffMs / 60000); // minutes\n            // Check the statuse is defer\n            let plannedinfustionValue = + medicationadministration.planneddosesize;\n            let administredinfusionValue = +medicationadministration.administreddosesize;\n            let maxdose = +medicationadministration.planneddosesizerangemax\n\n            if (plannedinfustionValue == 0) {\n                plannedinfustionValue = +medicationadministration.plannedstrengthneumerator;\n                administredinfusionValue = +medicationadministration.administeredstrengthneumerator;\n            }\n            else {// for descriptive no need to compare\n                plannedinfustionValue = 0;\n                administredinfusionValue = 0;\n            }\n\n            if (medicationadministration.adminstrationstatus == \"defer\") {\n                this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                    null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Defered, title.Administration_Defered, true)\n            }\n            //-- if statuse notgiven\n            else if (medicationadministration.adminstrationstatus == \"notgiven\") {\n                this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                    null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Failed, title.Administration_Failed, true)\n            }\n            // for prn cannot be late or early\n            else if (false) {\n                if (plannedinfustionValue == administredinfusionValue) {\n                    this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        null, medicationadministration.posology_id, false, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                }\n                else {\n                    this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                }\n\n            }\n            //-- if administed and statuse given or self given\n            else {\n                //On time administered ---------------------------------------------------------------------------\n                if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                    // cheching Dose administered is differnt from prescribed\n                    if (maxdose && maxdose > 0) {\n                        if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                        }\n                        else {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                        }\n                    }\n                    else if (plannedinfustionValue == administredinfusionValue) {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Completed_Administration, title.Completed_Administration, true)\n                    }\n                    else {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_is_differnt_from_prescribed, title.Dose_administered_is_differnt_from_prescribed, true)\n                    }\n                }\n                // early dose Administered ---------------------------------------------------------------------------\n                else if (diffMins <= -this.appService.bufferAdministered) {\n                    //   cheching Administered early  but Dose administered early is differnt from prescribed\n                    if (maxdose && maxdose > 0) {\n                        if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Completed_early, title.Administration_Completed_early, true)\n                        }\n                        else {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_early_is_differnt_from_prescribed, title.Dose_administered_early_is_differnt_from_prescribed, true)\n                        }\n                    }\n                    else if (plannedinfustionValue == administredinfusionValue) {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Completed_early, title.Administration_Completed_early, true)\n                    }\n                    else {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_early_is_differnt_from_prescribed, title.Dose_administered_early_is_differnt_from_prescribed, true)\n                    }\n                }\n\n                // late dose Administered -----------------------------------------------------------------------------\n                else if (diffMins >= -this.appService.bufferAdministered) {\n                    //   cheching Administered early  but Dose administered early is differnt from prescribed\n                    if (maxdose && maxdose > 0) {\n                        if (administredinfusionValue >= plannedinfustionValue && maxdose >= administredinfusionValue) {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Completed_late, title.Administration_Completed_late, true)\n                        }\n                        else {\n                            this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_late_is_differnt_from_prescribed, title.Dose_administered_late_is_differnt_from_prescribed, true)\n                        }\n                    }\n                    else if (plannedinfustionValue == administredinfusionValue) {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Administration_Completed_late, title.Administration_Completed_late, true)\n                    }\n                    else {\n                        this.addevents(medicationadministration.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                            null, medicationadministration.posology_id, false, false, false, false, contents.Dose_administered_late_is_differnt_from_prescribed, title.Dose_administered_late_is_differnt_from_prescribed, true)\n                    }\n                }\n            }\n        }\n\n    }\n\n    addevents(prescription_id: any, dose_id: any, eventStart: any, eventEnd: any, posology_id: any, prn: boolean, iscancel: boolean,\n        doctorsorder: boolean, isinfusion: boolean, content: any, title: string, admitdone = false) {\n        let titration = this.appService.Prescription.find(x => x.prescription_id == prescription_id).titration;\n        let opacityclass = \"\";\n        if (eventEnd == null) {\n            opacityclass = this.iseventinpatientaway(moment(eventStart));\n        }\n        if (this.isreportevents) {\n            this.appService.reportData.push({\n                prescription_id: prescription_id,\n                posology_id: posology_id,\n                dose_id: dose_id,\n                eventStart: moment(eventStart),\n                eventEnd: eventEnd,\n                prn: prn,\n                iscancel: iscancel,\n                doctorsorder: doctorsorder,\n                isinfusion: isinfusion,\n                content: content,\n                title: title,\n                admitdone: admitdone,\n                titration: titration\n            }\n\n            )\n        }\n        else {\n            this.appService.events.push({\n                prescription_id: prescription_id,\n                posology_id: posology_id,\n                dose_id: dose_id,\n                eventStart: moment(eventStart),\n                eventEnd: eventEnd,\n                prn: prn,\n                iscancel: iscancel,\n                doctorsorder: doctorsorder,\n                isinfusion: isinfusion,\n                content: content,\n                title: title,\n                admitdone: admitdone,\n                opacityclass: opacityclass,\n                diffrence: 0,\n                stackclass: false\n            }\n\n            )\n\n        }\n    }\n\n    iseventinpatientaway(eventdate: any) {\n        let iseventInaway = false;\n        for (let x of this.appService.PersonAwayPeriod) {\n            if (x.isenabled) {\n                let sdate = moment(x.awayfrom);\n                let edate = moment(x.awayto);\n                if (moment(eventdate).isBetween(sdate, edate, undefined, '[]')) {\n                    iseventInaway = true;\n                    break;\n                }\n            }\n        }\n        if (iseventInaway) {\n            return \" addopacity\";\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    createLogicalId(dosedate: any, dose_id: any) {\n        let logicalid = moment(dosedate).format('YYYYMMDDHHmm') + \"_\" + dose_id.toString();\n        return logicalid;\n    }\n\n\n\n    makeId(length) {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n\n\n    addInfutionEvent(prescription: Prescription, pslg: Posology) {\n\n\n        // let infutionlist = this.appService.Dose.filter(x => x.prescription_id == prescription.prescription_id && x.continuityid == null);\n\n\n        let infutionlist = pslg.__dose.filter(x => x.continuityid == null);\n\n        this.PlotNonDoseAdminsterEvensForCI(prescription);\n\n        for (let dose of infutionlist) {\n            let allDoses = pslg.__dose.filter(x => x.continuityid == dose.dose_id);\n            allDoses.sort((b, a) => new Date(b.dosestartdatetime).getTime() - new Date(a.dosestartdatetime).getTime());\n            this.createAdmiseredInfusionEvents(prescription, dose, allDoses);\n\n\n            this.createInfusioniEvents(prescription, pslg, dose, allDoses);\n\n\n\n        }\n\n\n\n\n    }\n\n\n    createInfusioniEvents(prescription: Prescription, pslg: Posology, startDose: Dose, allDoses: any) {\n\n\n        let daystoplot = JSON.parse(pslg.daysofweek);\n\n        let EndDosetime: any;\n\n        if (prescription.linkedinfusionid) {\n            let linkedinfusion = this.appService.Prescription.find(x => x.prescription_id == prescription.linkedinfusionid)\n            if (!this.appService.InfusionEvents.find(x => x.posology_id == linkedinfusion.__posology[0].posology_id && x.eventtype == \"endinfusion\")) {\n                return;\n            }\n        }\n        if (allDoses.length > 0) {\n            EndDosetime = allDoses[allDoses.length - 1].doseenddatatime;\n        }\n        else {\n            EndDosetime = startDose.doseenddatatime;\n        }\n\n        let startDosetime = moment(startDose.dosestartdatetime);\n\n\n\n        let enddate = moment(pslg.prescriptionenddate)\n        if (moment(enddate, \"MM/DD/YYYY\") < moment(this.MaxEventDate, \"MM/DD/YYYY\")) {\n            this.MaxEventDate = moment(pslg.prescriptionenddate);\n\n        }\n        if (this.prescriptionStatus == \"suspended\" || this.prescriptionStatus == \"stopped\" || this.prescriptionStatus == \"cancelled\") {\n            this.MaxEventDate = moment(prescription.lastmodifiedon)\n\n\n            let futureTransferevent = this.appService.DoseEvents.filter(x => x.dose_id == startDose.dose_id && x.posology_id == pslg.posology_id && (moment(x.startdatetime).isSameOrAfter(moment(prescription.lastmodifiedon)) &&\n                (moment(x.dosedatetime).isSameOrBefore(moment(prescription.lastmodifiedon)))));\n\n            for (let k of futureTransferevent) {\n                if (prescription.__posology.find(x => x.posology_id == k.posology_id)) {\n                    if (moment(this.MaxEventDate).isBefore(moment(k.startdatetime))) {\n                        this.MaxEventDate = moment(k.startdatetime);\n                    }\n                }\n            }\n        }\n        else {\n\n            let futureTransferevent = this.appService.DoseEvents.filter(x => x.dose_id == startDose.dose_id && x.posology_id == pslg.posology_id && (moment(x.startdatetime).isSameOrAfter(moment(pslg.prescriptionenddate)) &&\n                (moment(x.dosedatetime).isSameOrBefore(moment(pslg.prescriptionenddate)))));\n\n            for (let k of futureTransferevent) {\n                if (prescription.__posology.find(x => x.posology_id == k.posology_id)) {\n                    if (moment(this.MaxEventDate).isBefore(moment(k.startdatetime))) {\n                        this.MaxEventDate = moment(k.startdatetime);\n                    }\n                }\n            }\n        }\n        // if ( ==\"ci\" ||\n        // this.appService.Prescription.find(p=>p.prescription_id == prescription.prescription_id).__posology.find(po=>po.posology_id==pslg.posology_id).infusiontypeid ==\"rate\" && \n        // this.appService.Prescription.find(p=>p.prescription_id == prescription.prescription_id).__posology.find(po=>po.posology_id==pslg.posology_id).infusiontypeid ==\"variable\"\n        // ) {\n        //     this.MaxEventDate = moment().add(8, 'days');\n        // }\n\n\n\n        let repeatDays = 0;\n        while (moment(startDosetime, \"MM/DD/YYYY \") <= moment(this.MaxEventDate, \"MM/DD/YYYY\")) {\n\n            if (daystoplot.indexOf(moment(startDosetime).format('dddd')) > -1 || daystoplot.length == 0) {\n                //no need to add days in the choose array\n            }\n            else {\n                startDosetime = moment(startDosetime).add(1, 'd');\n                EndDosetime = moment(EndDosetime).add(1, 'd');\n                continue;\n            }\n\n            if (startDosetime >= moment(pslg.prescriptionstartdate)) {\n                if ((pslg.infusiontypeid == 'ci' || pslg.infusiontypeid == InfusionType.pca) || (moment(this.minEventDate, \"MM/DD/YYYY\") < moment(startDosetime, \"MM/DD/YYYY\"))) {\n\n\n\n                    let startFlowrate = startDose.infusionrate;\n                    const logicalId = this.createLogicalId(startDosetime, startDose.dose_id);\n                    let administeredevent = this.appService.Medicationadministration.find(x => x.logicalid == \"start_\" + logicalId && x.dose_id == startDose.dose_id);\n\n\n                    if (administeredevent && administeredevent.adminstrationstatus == \"notgiven\") {\n                        repeatDays++;\n                        if (pslg.prescriptionenddate == EndDosetime) {\n                            // more then 24 hource so no repete and breck\n                            break;\n                        }\n                        startDosetime = moment(startDosetime).add(1, 'd');\n                        EndDosetime = moment(EndDosetime).add(1, 'd');\n                        continue;\n                    }\n\n\n                    let plotstartDosetime = moment(startDosetime);\n                    let dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == \"start_\" + logicalId && x.eventtype == \"Transfer\");\n                    if (dosetransferDate) {\n                        plotstartDosetime = moment(dosetransferDate.dosedatetime);\n                        if (moment(pslg.prescriptionenddate) <= plotstartDosetime) {\n                            break;\n                        }\n                    }\n                    ///Infution trans or not if cancel \n                    let isdoseCancle = false;\n                    const logicalId_1 = this.createLogicalId(startDosetime, startDose.dose_id);\n                    if (this.appService.DoseEvents.filter(x => x.logicalid == \"start_\" + logicalId_1).length > 0) {\n                        isdoseCancle = this.appService.DoseEvents.filter(x => x.logicalid == \"start_\" + logicalId_1)[0].eventtype == \"Cancel\" ? true : false;\n                    }\n                    if (isdoseCancle) {\n\n                        this.addevents(startDose.prescription_id, \"start_\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime, null, pslg.posology_id, false,\n                            isdoseCancle, false, true, contents.Administration_withheld_by_doctor_Infution, title.Administration_withheld_by_doctor_Infution)\n                        if (pslg.prescriptionenddate == EndDosetime) {\n                            // more then 24 hource so no repete and breck\n                            break;\n                        }\n                        startDosetime = moment(startDosetime).add(1, 'd');\n                        EndDosetime = moment(EndDosetime).add(1, 'd');\n                        continue;\n                    }\n\n                    let diffMins = this.getTimeDiff(plotstartDosetime);\n                    const logicalId_2 = this.createLogicalId(startDosetime, startDose.dose_id);\n                    dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == \"start_\" + logicalId_2 && x.eventtype == \"AdminTransfer\");\n                    if (dosetransferDate) {\n                        plotstartDosetime = moment(dosetransferDate.dosedatetime);\n                    }\n                    if (administeredevent && prescription.infusiontype_id == \"bolus\") {\n\n                        startDosetime = moment(startDosetime).add(1, 'd');\n                        EndDosetime = moment(EndDosetime).add(1, 'd');\n                        continue;\n                    }\n                    //Flow rate for start node\n                    if (!administeredevent && prescription.infusiontype_id != \"bolus\" && this.prescriptionStatus != \"stopped\") {\n                        let doserate = startDose.infusiondoserate == null ? startDose.infusionrate + \" \" + pslg.infusionrateunits : startDose.infusiondoserate + \" \" + startDose.infusiondoserateunits;\n                        this.addevents(startDose.prescription_id, \"flowrate_\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime,\n                            null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + doserate\n\n                        + \"</div>\", \"\")\n                    }\n                    /////////////////////////\n                    if (administeredevent && this.prescriptionStatus != \"suspended\" && this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\") {\n                        let startcount = this.appService.InfusionEvents.filter(x => x.posology_id == pslg.posology_id && x.eventtype == \"administered\").length -\n                            this.appService.InfusionEvents.filter(x => x.posology_id == pslg.posology_id && x.eventtype == \"endinfusion\").length\n                        if (startcount >= 1) {\n                            this.addevents(prescription.prescription_id, \"infusionevent\" + prescription.prescription_id, new Date(), null, pslg.posology_id, pslg.prn,\n                                false, false, false, contents.Recordadditionaladministration, title.Recordadditionaladministration)\n                            this.PRNids.push(\"infusionevent\" + prescription.prescription_id);\n                        }\n\n\n                        this.addevents(startDose.prescription_id, \"flowrate_\" + this.createLogicalId(startDosetime, startDose.dose_id), moment(administeredevent.administrationstartime),\n                            null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + administeredevent.administredinfusionrate + \" \" +\n                            pslg.infusionrateunits\n                        + \"</div>\", \"\")\n                    }\n                    else {\n                        if (!administeredevent) {\n\n                            if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                                this.addevents(startDose.prescription_id, \"start_\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime,\n                                    null, startDose.posology_id, false, false, false, true, contents.Infusiondue, title.Infusiondue)\n                            }\n                            else if (diffMins <= -this.bufferambertime) {\n                                this.addevents(startDose.prescription_id, \"start_\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime,\n                                    null, startDose.posology_id, false, false, false, true, contents.InfusionLate, title.InfusionLate)\n                            }\n                            else if (diffMins >= this.bufferambertime) {\n                                this.addevents(startDose.prescription_id, \"start_\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime,\n                                    null, startDose.posology_id, false, false, false, true, contents.Infusionplanned, title.Infusionplanned)\n                            }\n                        }\n\n                    }\n\n                    let plotEndDosetime = moment(EndDosetime);\n                    const logicalId_3 = this.createLogicalId(EndDosetime, startDose.dose_id);\n                    let dosetransferDateend = this.appService.DoseEvents.find(x => x.logicalid == \"end_\" + logicalId_3 && x.eventtype == \"Transfer\");\n                    if (dosetransferDateend) {\n                        plotEndDosetime = moment(dosetransferDateend.dosedatetime);\n                    }\n                    // admin transfer override transfer\n                    const logicalId_4 = this.createLogicalId(EndDosetime, startDose.dose_id);\n                    dosetransferDateend = this.appService.DoseEvents.find(x => x.logicalid == \"end_\" + logicalId_4 && x.eventtype == \"AdminTransfer\");\n                    if (dosetransferDateend) {\n                        plotEndDosetime = moment(dosetransferDateend.dosedatetime);\n                    }\n\n\n                    diffMins = this.getTimeDiff(plotEndDosetime);\n                    if (prescription.infusiontype_id != \"bolus\") {\n                        const logicalId_5 = this.createLogicalId(EndDosetime, startDose.dose_id);\n                        let infusionEndEvent = this.appService.InfusionEvents.find(x => x.logicalid == \"end_\" + logicalId_5 && x.eventtype == \"endinfusion\")\n                        if (EndDosetime) {\n                            ////////////////////////\n                            // if infusion is comlete\n\n                            if (pslg.infusiontypeid != 'ci' && pslg.infusiontypeid != InfusionType.pca && infusionEndEvent) {\n                                let plannedtime = new Date(moment(infusionEndEvent.planneddatetime, moment.ISO_8601).toString());\n                                let administeredtime = new Date(moment(infusionEndEvent.eventdatetime, moment.ISO_8601).toString());\n\n                                let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n                                let diffMins = Math.round(diffMs / 60000); // minutes\n                                if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                                    this.addevents(prescription.prescription_id, infusionEndEvent.logicalid, infusionEndEvent.eventdatetime,\n                                        null, infusionEndEvent.posology_id, false, false, false, true, contents.InfusionCompleteddone, title.InfusionCompleteddone, true)\n                                }\n                                else if (diffMins >= this.appService.bufferAdministered) {\n                                    this.addevents(prescription.prescription_id, infusionEndEvent.logicalid, infusionEndEvent.eventdatetime,\n                                        null, infusionEndEvent.posology_id, false, false, false, true, contents.InfusionCompletedLate2, title.InfusionCompletedLate2, true)\n                                }\n                                else if (diffMins <= -this.appService.bufferAdministered) {\n                                    this.addevents(prescription.prescription_id, infusionEndEvent.logicalid, infusionEndEvent.eventdatetime,\n                                        null, infusionEndEvent.posology_id, false, false, false, true, contents.InfusionCompletedEarly2, title.InfusionCompletedEarly2, true)\n                                }\n                            }\n\n                            // if infusion is not comlete\n                            else if ((pslg.infusiontypeid != 'ci' && pslg.infusiontypeid != InfusionType.pca) || (this.prescriptionStatus != \"suspended\" && this.prescriptionStatus != \"stopped\" && this.prescriptionStatus != \"cancelled\")) {\n                                if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                                    this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n                                        null, startDose.posology_id, false, false, false, true, contents.InfusionCompletiondue, title.InfusionCompletiondue)\n                                }\n                                else if (diffMins <= -this.bufferambertime) {\n                                    this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n                                        null, startDose.posology_id, false, false, false, true, contents.InfusionCompleteoverdue, title.InfusionCompleteoverdue)\n                                }\n                                else if (diffMins >= this.bufferambertime) {\n                                    this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n                                        null, startDose.posology_id, false, false, false, true, contents.Infusioncompletionplanned, title.Infusioncompletionplanned)\n                                }\n                            }\n                        }\n\n                        if (EndDosetime == null && pslg.prescriptionenddate == null && (pslg.infusiontypeid == 'ci' || pslg.infusiontypeid == InfusionType.pca)) {\n                            let enddate = this.MaxEventDate;\n                            if (infusionEndEvent) {\n                                enddate = infusionEndEvent.eventdatetime;\n\n                            }\n                            if (this.prescriptionStatus == \"suspended\" || this.prescriptionStatus == \"stopped\" || this.prescriptionStatus == \"cancelled\") {\n\n                                let infusionEndEvent = this.appService.InfusionEvents.find(x => x.posology_id == pslg.posology_id && x.eventtype == \"endinfusion\")\n                                if (infusionEndEvent) {\n                                    enddate = moment(infusionEndEvent.eventdatetime);\n                                } else {\n                                    enddate = moment(prescription.lastmodifiedon);\n                                }\n                            }\n                            // else if () {\n                            //     enddate = moment(prescription.lastmodifiedon);\n                            //     // this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), enddate,\n                            //     //     null, startDose.posology_id, false, false, false, true, contents.InfusionCompleteddone)\n\n                            //     //     this.addevents(startDose.prescription_id, \"dur\" + startDose.prescription_id, plotstartDosetime,\n                            //     //     enddate, startDose.posology_id, false, false, false, true, contents.durationline)\n\n                            // }\n                            if (administeredevent) {\n                                this.addevents(startDose.prescription_id, \"dur\" + startDose.prescription_id, moment(administeredevent.administrationstartime),\n                                    enddate, startDose.posology_id, false, false, false, true, contents.durationline, \"\")\n\n                            }\n                            else {\n                                this.addevents(startDose.prescription_id, \"dur\" + startDose.prescription_id, plotstartDosetime,\n                                    enddate, startDose.posology_id, false, false, false, true, contents.durationline, \"\")\n\n                            }\n                        }\n                        else {\n                            let durationEnd = plotEndDosetime\n                            if (infusionEndEvent) {\n                                durationEnd = infusionEndEvent.eventdatetime;\n                            }\n                            if ((pslg.infusiontypeid == 'ci' || pslg.infusiontypeid == InfusionType.pca) && (this.prescriptionStatus == \"suspended\" || this.prescriptionStatus == \"stopped\" || this.prescriptionStatus == \"cancelled\")) {\n                                durationEnd = moment(prescription.lastmodifiedon);\n                            }\n                            if (infusionEndEvent && (pslg.infusiontypeid == 'ci' || pslg.infusiontypeid == InfusionType.pca) && (this.prescriptionStatus == \"suspended\" || this.prescriptionStatus == \"stopped\" || this.prescriptionStatus == \"cancelled\")) {\n                                durationEnd = infusionEndEvent.eventdatetime;\n                            }\n\n                            if (administeredevent) {\n                                this.addevents(startDose.prescription_id, \"dur\" + this.createLogicalId(startDosetime, startDose.dose_id), moment(administeredevent.administrationstartime),\n                                    durationEnd, startDose.posology_id, false, false, false, true, contents.durationline, \"\")\n                            }\n                            else {\n                                this.addevents(startDose.prescription_id, \"dur\" + this.createLogicalId(startDosetime, startDose.dose_id), plotstartDosetime,\n                                    durationEnd, startDose.posology_id, false, false, false, true, contents.durationline, \"\")\n                            }\n                        }\n\n                    }\n                }\n            }\n            if (startDosetime >= moment(pslg.prescriptionstartdate)) {\n                this.PloteFutureFlowRateChange(pslg, startDose, allDoses, repeatDays);\n            }\n            repeatDays++;\n            if (pslg.prescriptionenddate == EndDosetime) {\n                // more then 24 hource so no repete and breck\n                break;\n            }\n            if (pslg.infusiontypeid == \"rate\" && pslg.frequency == \"stat\") {\n                break;\n            }\n            if (pslg.dosingdaysfrequencysize == 0) {\n                startDosetime = moment(startDosetime).add(1, 'd');\n                EndDosetime = moment(EndDosetime).add(1, 'd');\n            }\n            else {\n                if (pslg.dosingdaysfrequency == \"days\") {\n\n                    startDosetime = moment(startDosetime).add(pslg.dosingdaysfrequencysize, 'd');\n                    EndDosetime = moment(EndDosetime).add(pslg.dosingdaysfrequencysize, 'd');\n                }\n                else if (pslg.dosingdaysfrequency == \"weeks\") {\n\n                    startDosetime = moment(startDosetime).add(pslg.dosingdaysfrequencysize, 'w');\n                    EndDosetime = moment(EndDosetime).add(pslg.dosingdaysfrequencysize, 'w');\n                }\n                else if (pslg.dosingdaysfrequency == \"months\") {\n\n                    startDosetime = moment(startDosetime).add(pslg.dosingdaysfrequencysize, 'M');\n                    EndDosetime = moment(EndDosetime).add(pslg.dosingdaysfrequencysize, 'M');\n                }\n\n            }\n\n        }\n\n        /////////////////////////////////////\n\n        /////////////////////////////////\n\n\n    }\n\n    PloteFutureFlowRateChange(pslg: Posology, startDose: Dose, allDoses: any, repeatDays: any) {\n        const logicalId = this.createLogicalId(moment(startDose.dosestartdatetime), startDose.dose_id);\n        let administeredevent = this.appService.Medicationadministration.find(x => x.logicalid == \"start_\" + logicalId && x.dose_id == startDose.dose_id);\n\n        if (administeredevent && administeredevent.adminstrationstatus == \"defer\") {\n            return;\n        }\n        let firstDosetime = moment(startDose.dosestartdatetime).add(repeatDays, 'd');\n        let currentFlowRate = startDose.infusionrate;\n        const logicalId_1 = this.createLogicalId(firstDosetime, startDose.dose_id)\n        let startFlowRateAdministered = this.appService.Medicationadministration.find(x => x.logicalid == \"start_\" + logicalId_1);\n        if (startFlowRateAdministered) {\n            currentFlowRate = startFlowRateAdministered.administredinfusionrate;\n        }\n        let allinfusion = this.appService.InfusionEvents.filter(x => x.posology_id == startDose.posology_id && (x.eventtype == \"adjust\" || x.eventtype == \"restart\" || x.eventtype == \"administered\"));\n        allinfusion.sort((a, b) => b._sequenceid - a._sequenceid);\n        if (allinfusion.length > 0 && (allinfusion[0].eventtype == \"adjust\" || allinfusion[0].eventtype == \"restart\")) {\n            currentFlowRate = this.appService.Medicationadministration.find(x => x.logicalid == allinfusion[0].logicalid).administredinfusionrate;\n        }\n        // while (repeatDays > 0) {\n        for (let dose of allDoses) {\n\n            let startDosetime = moment(dose.dosestartdatetime);\n            let originalStarttime = moment(startDosetime);\n            const logicalId_2 = this.createLogicalId(originalStarttime, dose.dose_id);\n            let dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == \"adjust_\" + logicalId_2 && x.eventtype == \"Transfer\");\n            if (dosetransferDate) {\n                startDosetime = moment(dosetransferDate.dosedatetime);\n            }\n            //if there is admin transfer there override transfer\n            const logicalId_3 = this.createLogicalId(originalStarttime, dose.dose_id);\n            dosetransferDate = this.appService.DoseEvents.find(x => x.logicalid == \"adjust_\" + logicalId_3 && x.eventtype == \"AdminTransfer\");\n            if (dosetransferDate) {\n                startDosetime = moment(dosetransferDate.dosedatetime);\n            }\n            startDosetime = moment(startDosetime).add(repeatDays, 'd');\n\n            let diffMins = this.getTimeDiff(startDosetime);\n            const logicalId_4 = this.createLogicalId(originalStarttime, dose.dose_id);\n            let administeredevent = this.appService.Medicationadministration.find(x => x.logicalid == \"adjust_\" + logicalId_4 && x.dose_id == dose.dose_id);\n            //////////////////////////////\n            if (administeredevent) {\n\n                this.addevents(dose.prescription_id, \"flowrate_\" + this.createLogicalId(originalStarttime, dose.dose_id), moment(administeredevent.administrationstartime),\n                    null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + administeredevent.administredinfusionrate + \" \" +\n                    pslg.infusionrateunits\n                + \"</div>\", \"\")\n                currentFlowRate = administeredevent.administredinfusionrate;\n                continue;\n            }\n            else {\n\n                this.addevents(dose.prescription_id, \"flowrate_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                    null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + dose.infusiondoserate + \" \" +\n                    dose.infusiondoserateunits\n                + \"</div>\", \"\")\n            }\n            ////////////////////////////\n            if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n                if (currentFlowRate == dose.infusionrate) {\n\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.Maintain_Infusion_Rate_Due, title.Maintain_Infusion_Rate_Due)\n                } else if (currentFlowRate < dose.infusionrate) {\n\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRateDue, title.IncreaseInfusionRateDue)\n                } else {\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRateDue, title.DecreaseInfusionRateDue)\n                }\n                currentFlowRate = dose.infusionrate;\n            }\n            else if (diffMins <= -this.bufferambertime) {\n                if (currentFlowRate == dose.infusionrate) {\n\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.Maintain_Infusion_Rate_Late, title.Maintain_Infusion_Rate_Late)\n                } else if (currentFlowRate < dose.infusionrate) {\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRateLate, title.IncreaseInfusionRateLate)\n                } else {\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRateLate, title.DecreaseInfusionRateLate)\n                }\n                currentFlowRate = dose.infusionrate;\n            }\n            else if (diffMins >= this.bufferambertime) {\n                if (currentFlowRate == dose.infusionrate) {\n\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.Maintain_Infusion_Rate_Planned, title.Maintain_Infusion_Rate_Planned)\n                } else if (currentFlowRate < dose.infusionrate) {\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRatePlanned, title.IncreaseInfusionRatePlanned)\n                } else {\n                    this.addevents(dose.prescription_id, \"adjust_\" + this.createLogicalId(originalStarttime, dose.dose_id), startDosetime,\n                        null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRatePlanned, title.DecreaseInfusionRatePlanned)\n                }\n                currentFlowRate = dose.infusionrate;\n            }\n\n\n\n            // }\n            // repeatDays--;\n        }\n    }\n    PlotNonDoseAdminsterEvensForCI(prescription: Prescription) {\n        if ((prescription.__posology[0].infusiontypeid == 'ci' || prescription.__posology[0].infusiontypeid == InfusionType.pca) && (this.prescriptionStatus == \"suspended\" || this.prescriptionStatus == \"stopped\" || this.prescriptionStatus == \"cancelled\")) {\n            let administeredevent = this.appService.Medicationadministration.find(x => x.prescription_id == prescription.prescription_id && x.logicalid.startsWith(\"start_\"));\n\n            if (administeredevent && administeredevent.adminstrationstatus == \"notgiven\") {\n                return;\n            }\n        }\n\n        let allNonAdministeredEvent = this.appService.InfusionEvents.filter(x => x.posology_id == this.appService.GetCurrentPosology(prescription).posology_id &&\n            (x.eventtype == \"pause\" || x.eventtype == \"bolus\" || x.eventtype == \"changeinfusionset\" || x.eventtype == \"changeinfusionkit\" || x.eventtype == \"endinfusion\" || x.eventtype == \"endinfusion_planned\"))\n        for (let infusionevent of allNonAdministeredEvent) {\n            if (infusionevent.eventtype == \"bolus\") {\n                this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                    null, infusionevent.posology_id, false, false, false, true, contents.BolusAdministrationCompleted, title.BolusAdministrationCompleted, true)\n            }\n            if (infusionevent.eventtype == \"pause\") {\n                this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                    null, infusionevent.posology_id, false, false, false, true, contents.InfusionRatePaused, title.InfusionRatePaused, true)\n            }\n            else if (infusionevent.eventtype == \"changeinfusionset\") {\n                this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                    null, infusionevent.posology_id, false, false, false, true, contents.ContinuousInfusionSetChanged, title.ContinuousInfusionSetChanged, true)\n            }\n            else if (infusionevent.eventtype == \"changeinfusionkit\") {\n                this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                    null, infusionevent.posology_id, false, false, false, true, contents.Continuousinfusionsyringeorbagchange, title.Continuousinfusionsyringeorbagchange, true)\n            }\n\n            else if (infusionevent.eventtype == \"endinfusion_planned\") {\n\n                let plannedtime = new Date(moment(infusionevent.planneddatetime, moment.ISO_8601).toString());\n                let administeredtime = new Date(moment(infusionevent.eventdatetime, moment.ISO_8601).toString());\n\n                let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n                let diffMins = this.getTimeDiff(infusionevent.eventdatetime); // minutes\n\n                if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.InfusionCompletiondue, title.InfusionCompletiondue, false)\n                }\n                else if (diffMins >= this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.Infusioncompletionplanned, title.Infusioncompletionplanned, false)\n                }\n                else if (diffMins <= -this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.InfusionCompleteoverdue, title.InfusionCompleteoverdue, false)\n                }\n            }\n            else if (infusionevent.eventtype == \"endinfusion\") {\n                let plannedtime = new Date(moment(infusionevent.planneddatetime, moment.ISO_8601).toString());\n                let administeredtime = new Date(moment(infusionevent.eventdatetime, moment.ISO_8601).toString());\n\n                let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n                let diffMins = Math.round(diffMs / 60000); // minutes\n                if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.InfusionCompleteddone, title.InfusionCompleteddone, true)\n                }\n                else if (diffMins >= this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.InfusionCompletedLate2, title.InfusionCompletedLate2, true)\n                }\n                else if (diffMins <= -this.appService.bufferAdministered) {\n                    this.addevents(prescription.prescription_id, infusionevent.logicalid, infusionevent.eventdatetime,\n                        null, infusionevent.posology_id, false, false, false, true, contents.InfusionCompletedEarly2, title.InfusionCompletedEarly2, true)\n                }\n            }\n\n        }\n\n\n    }\n    // if (diffMins > -this.bufferambertime && diffMins < this.bufferambertime) {\n    //     this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n    //         null, startDose.posology_id, false, false, false, true, contents.InfusionCompletiondue)\n    // }\n    // else if (diffMins <= -this.bufferambertime) {\n    //     this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n    //         null, startDose.posology_id, false, false, false, true, contents.InfusionCompleteoverdue)\n    // }\n    // else if (diffMins >= this.bufferambertime) {\n    //     this.addevents(startDose.prescription_id, \"end_\" + this.createLogicalId(EndDosetime, startDose.dose_id), plotEndDosetime,\n    //         null, startDose.posology_id, false, false, false, true, contents.Infusioncompletionplanned)\n    // }\n    createAdmiseredInfusionEvents(prescription: Prescription, startDose: Dose, allDoses: any) {\n        let allAdministered = this.appService.Medicationadministration.filter(x => x.prescription_id == prescription.prescription_id);\n        allAdministered.sort((b, a) => new Date(b.administrationstartime).getTime() - new Date(a.administrationstartime).getTime());\n        let currentFlowRate = 0;\n        // non adminster like pause change bag or cancled event\n\n        for (let medicationadministration of allAdministered) {\n            if (medicationadministration.isenterinerror) {\n                this.addevents(prescription.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                    null, medicationadministration.posology_id, false, false, false, false, contents.EnterInErrorbolus, title.EnterInError, true)\n                continue;\n            }\n            let plannedtime = new Date(moment(medicationadministration.planneddatetime, moment.ISO_8601).toString());\n            let administeredtime = new Date(moment(medicationadministration.administrationstartime, moment.ISO_8601).toString());\n\n            let plannedinfustionValue = + medicationadministration.plannedinfustionrate;\n            let administredinfusionValue = +medicationadministration.administredinfusionrate;\n\n            if (prescription.__posology.find(x => x.posology_id == medicationadministration.posology_id).infusiontypeid == \"bolus\") {\n                if (prescription.__posology.find(x => x.posology_id == medicationadministration.posology_id).dosetype == \"units\") {\n                    plannedinfustionValue = +medicationadministration.planneddosesize;\n                    administredinfusionValue = +medicationadministration.administreddosesize;\n                }\n                else if (prescription.__posology.find(x => x.posology_id == medicationadministration.posology_id).dosetype == \"strength\") {\n                    plannedinfustionValue = +medicationadministration.plannedstrengthneumerator;\n                    administredinfusionValue = +medicationadministration.administeredstrengthneumerator;\n                }\n                else {// for descriptive no need to compare\n                    plannedinfustionValue = 0;\n                    administredinfusionValue = 0;\n                }\n            }\n            let diffMs = (administeredtime.valueOf() - plannedtime.valueOf());\n            let diffMins = Math.round(diffMs / 60000); // minutes\n\n\n\n            if (medicationadministration.adminstrationstatus == \"notgiven\") {\n                this.addevents(prescription.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                    null, medicationadministration.posology_id, false, false, false, true, contents.AdministrationInfution_Failed, title.AdministrationInfution_Failed, true)\n            }\n            else {\n                let TempEventtype = this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype;\n                if (TempEventtype == \"adjust\" || TempEventtype == \"restart\") {\n\n                    this.addevents(startDose.prescription_id, \"flowrate_\" + this.createLogicalId(medicationadministration.administrationstartime, medicationadministration.dose_id), medicationadministration.administrationstartime,\n                        null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + medicationadministration.administredinfusionrate + \" \" +\n                        prescription.__posology.find(x => x.posology_id == medicationadministration.posology_id).infusionrateunits\n                    + \"</div>\", \"\")\n\n                }\n                // this.addevents(startDose.prescription_id, \"flowrate_\" + medicationadministration.logicalid, medicationadministration.administrationstartime,\n                //     null, startDose.posology_id, false, false, false, true, \"<div class='durationFlorate'>\" + medicationadministration.administredinfusionrate + \" ml/h</div>\")\n                // on time administration\n                if (diffMins > -this.appService.bufferAdministered && diffMins < this.appService.bufferAdministered) {\n                    // cheching Dose administered is differnt from prescribed flow\n                    if (plannedinfustionValue == administredinfusionValue) {\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, startDose.posology_id, false, false, false, true, contents.Infusiondone, title.Infusiondone, true)\n                            currentFlowRate = administredinfusionValue;\n\n                        }\n\n                        else {\n                            if (currentFlowRate > administredinfusionValue) {\n                                if (medicationadministration.isinfusionkitchange) {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.Adjusted_Decrease_Infusion_Rate_Done_Kit_Change, title.Adjusted_Decrease_Infusion_Rate_Done_Kit_Change, true)\n                                }\n\n                                else {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRatedone, title.DecreaseInfusionRatedone, true)\n                                }\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                if (medicationadministration.isinfusionkitchange) {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.Adjusted_Increase_Infusion_Rate_Done_Kit_Change, title.Adjusted_Increase_Infusion_Rate_Done_Kit_Change, true)\n                                }\n\n                                else {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRatedone, title.IncreaseInfusionRatedone, true)\n                                }\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n\n                                if (medicationadministration.isinfusionkitchange) {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.Adjusted_Maintain_Infusion_Rate_Done_Kit_Change, title.Adjusted_Maintain_Infusion_Rate_Done_Kit_Change, true)\n                                }\n\n                                else {\n                                    this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                        null, startDose.posology_id, false, false, false, true, contents.Maintain_Infusion_Rate_done, title.Maintain_Infusion_Rate_done, true)\n                                }\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n                    else {\n\n                        // events Dulta sign\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            if (plannedinfustionValue < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedone, title.AdjustedIncreaseInfusionRatedone, true)\n                            }\n                            else {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedone, title.AdjustedDecreaseInfusionRatedone, true)\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n\n                        else {\n                            //For Flow Changed event\n                            if (currentFlowRate > administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedone, title.AdjustedDecreaseInfusionRatedone, true)\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedone, title.AdjustedIncreaseInfusionRatedone, true)\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedsameInfusionRatedone, title.AdjustedsameInfusionRatedone, true)//  Adjusted same Infusion Rate done this image need to change\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n\n                }\n                else if (diffMins >= this.appService.bufferAdministered) {\n\n                    if (plannedinfustionValue == administredinfusionValue) {\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, startDose.posology_id, false, false, false, true, contents.InfusionCompletedLate, title.InfusionCompletedLate, true)\n                            currentFlowRate = administredinfusionValue;\n                        }\n                        // else if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"bolus\") {\n                        //     this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        //         null, startDose.posology_id, false, false, false, true, contents.BolusAdministrationCompleted)\n                        // }\n                        else {\n                            if (currentFlowRate > administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRatedonelate, title.DecreaseInfusionRatedonelate, true)\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRatedonelate, title.IncreaseInfusionRatedonelate, true)\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.MaintainInfusionRatedonelate, title.MaintainInfusionRatedonelate, true)// this image need to change\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n                    else {\n\n                        // events Dulta sign\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            if (plannedinfustionValue < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedonelate, title.AdjustedIncreaseInfusionRatedonelate, true)\n                            }\n                            else {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedonelate, title.AdjustedDecreaseInfusionRatedonelate, true)\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n\n                        else {// for flowchange delta\n                            if (currentFlowRate > administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedonelate, title.AdjustedDecreaseInfusionRatedonelate, true)\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedonelate, title.AdjustedIncreaseInfusionRatedonelate, true)\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.FaliedtoAdjustInfusionRatedonelate, title.FaliedtoAdjustInfusionRatedonelate, true)// this image need to change\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n                }\n\n\n                else if (diffMins <= -this.appService.bufferAdministered) {\n                    if (plannedinfustionValue == administredinfusionValue) {\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                null, startDose.posology_id, false, false, false, true, contents.InfusionCompletedEarly, title.InfusionCompletedEarly, true)\n                            currentFlowRate = administredinfusionValue;\n                        }\n                        // else if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"bolus\") {\n                        //     this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                        //         null, startDose.posology_id, false, false, false, true, contents.BolusAdministrationCompleted)\n                        // }\n                        else {\n                            if (currentFlowRate > administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.DecreaseInfusionRatedoneearly, title.DecreaseInfusionRatedoneearly, true)\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.IncreaseInfusionRatedoneearly, title.IncreaseInfusionRatedoneearly, true)\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.MaintainInfusionRatedoneearly, title.MaintainInfusionRatedoneearly, true)// this image need to change\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n                    else {\n\n                        // events Dulta sign\n                        if (this.appService.InfusionEvents.find(x => x.logicalid == medicationadministration.logicalid).eventtype == \"administered\") {\n                            if (plannedinfustionValue < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedoneearly, title.AdjustedIncreaseInfusionRatedoneearly, true)\n                            }\n                            else {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedoneearly, title.AdjustedDecreaseInfusionRatedoneearly, true)\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n\n                        else {// for flowchange delta\n                            if (currentFlowRate > administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedDecreaseInfusionRatedoneearly, title.AdjustedDecreaseInfusionRatedoneearly, true)\n                            }\n                            else if (currentFlowRate < administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.AdjustedIncreaseInfusionRatedoneearly, title.AdjustedIncreaseInfusionRatedoneearly, true)\n                            }\n                            else if (currentFlowRate == administredinfusionValue) {\n                                this.addevents(startDose.prescription_id, medicationadministration.logicalid, medicationadministration.administrationstartime,\n                                    null, startDose.posology_id, false, false, false, true, contents.FaliedtoAdjustInfusionRatedoneearly, title.FaliedtoAdjustInfusionRatedoneearly, true)// this image need to change\n                            }\n                            currentFlowRate = administredinfusionValue;\n                        }\n                    }\n                }\n\n            }\n\n\n        }\n    }\n\n    getTimeDiff(datetime: any) {\n        let current = new Date(moment(new Date(), moment.ISO_8601).toString());\n        let start = new Date(moment(datetime, moment.ISO_8601).toString());\n        let diffMs = (start.valueOf() - current.valueOf());\n        return Math.round(diffMs / 60000); // minutes\n    }\n\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport moment from 'moment';\nimport { Medication, Medicationadministration, MetaPrescriptionadditionalcondition, MetaPrescriptionstatus, Prescription, PrescriptionEvent } from 'src/app/models/EPMA';\nimport { AppService } from 'src/app/services/app.service';\nimport { PrescriptionContext, PrescriptionStatus } from 'src/app/services/enum';\n\n@Component({\n  selector: 'app-prescription-infusion-print-template',\n  templateUrl: './prescription-infusion-print-template.component.html',\n  styleUrls: ['./prescription-infusion-print-template.component.css']\n})\nexport class PrescriptionInfusionPrintTemplateComponent implements OnInit {\n\n  metaprescriptionstatus: MetaPrescriptionstatus[];\n  additionalcondition: MetaPrescriptionadditionalcondition[];\n  medicationadminstration: Medicationadministration;\n  prescriptionEvent: PrescriptionEvent;\n  @Input() componenttype: string;\n  @Input() prescription: Prescription;\n  @Input() administration: Medicationadministration;\n  @Input() fromPrinting = false;\n  @Input() posologyid: string;\n  @Input() sumstatus: string;\n  showPrescriptionHistory: boolean = false;\n  primaryMedication: Medication;\n  plannedTime: string;\n  routes = \"\";\n  choosenDays = \"\";\n  prescriptionAdditionalCondition = \"\";\n  device = \"\";\n  oxygenAdditionalInformation: string = \"\";\n  indicationstring = \"\";\n  isMOAPrescription: boolean = false;\n  startDate: any;\n  modifiedFrom: any;\n  prescriptionEventComment: string;\n  dischargeSummaryComment: string;\n  dischargeSummarystatus: string;\n  prescription_id: string;\n  prescriptionstatus: string;\n  prnmaxdosestring: string;\n  lastmodifiedbyrole: any;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {\n    const currentPosology = this.appService.GetCurrentPosology(this.prescription);\n    this.prescription_id = this.prescription.prescription_id;\n    this.prescription.__medications.sort(value => {\n      return value.isprimary ? -1 : 1\n    });\n    this.metaprescriptionstatus = this.appService.MetaPrescriptionstatus;\n    this.additionalcondition = this.appService.MetaPrescriptionadditionalcondition;\n    this.primaryMedication = this.prescription.__medications.find(e => e.isprimary == true);\n    if (this.administration) {\n      this.plannedTime = moment(this.administration.planneddatetime, \"YYYY-MM-DD HH:mm\").format(\"DD-MMM-YYYY HH:mm\");\n    }\n    let oxydevice = this.appService.oxygenDevices.find(x => x.code == this.prescription.oxygendevices_id);\n    if (oxydevice) {\n      this.device = oxydevice.name;\n    }\n\n    this.startDate = this.prescription.startdatetime;\n    if (moment(this.prescription.startdatetime).format(\"YYYYMMDDHHmm\") != moment(currentPosology.prescriptionstartdate).format(\"YYYYMMDDHHmm\")) {\n      this.modifiedFrom = currentPosology.prescriptionstartdate;\n    } else {\n      this.modifiedFrom = null;\n    }\n\n    this.GetRoutes();\n    this.GetChoosenDays();\n    this.getOxygenAditionalInformation();\n    this.getMOAPrescription();\n    this.indicationstring = this.appService.GetIndication(this.prescription);\n\n    this.prescriptionEvent = this.appService.prescriptionEvent.find(e => e.prescriptionid == this.prescription_id);\n    if (this.prescriptionEvent) {\n      this.prescriptionEventComment = this.prescriptionEvent.comments;\n    }\n\n    this.GetDischargeSummaryMessage();\n    this.getPrescriptionStatus();\n    if (currentPosology.prn && currentPosology.prnmaxdose) {\n      this.prnmaxdosestring = this.appService.GetPRNMaxDoseDisplayString(currentPosology.prnmaxdose);\n    }\n    this.lastmodifiedbyrole = this.appService.JSONTryParse(this.prescription.lastmodifiedbyrole)??[].join(\", \");\n  }\n  GetRoutes() {\n    this.routes = this.prescription.__routes.sort((x, y) => Number(y.isdefault) - Number(x.isdefault)).map(m => m.route).join(\",\");\n  }\n  GetChoosenDays() {\n    this.choosenDays = JSON.parse(this.appService.GetCurrentPosology(this.prescription, this.posologyid).daysofweek).join(\", \");\n  }\n  getOxygenAditionalInformation() {\n    let arrayAdd = [];\n    if (this.prescription.oxygenadditionalinfo) {\n      JSON.parse(this.prescription.oxygenadditionalinfo).forEach(element => {\n        arrayAdd.push(this.appService.oxygenprescriptionadditionalinfo.find(e => e.oxygenprescriptionadditionalinfo_id == element).additionalinfo);\n      });\n    }\n    this.oxygenAdditionalInformation = arrayAdd.join(\",\");\n  }\n  GetAdditionalcondition() {\n    var condition = this.additionalcondition.find(x => x.prescriptionadditionalconditions_id == this.prescription.prescriptionadditionalconditions_id);\n    if (condition)\n      this.prescriptionAdditionalCondition = this.additionalcondition.find(x => x.prescriptionadditionalconditions_id == this.prescription.prescriptionadditionalconditions_id).additionalcondition;\n    else\n      this.prescriptionAdditionalCondition = \"No additional criteria\";\n  }\n  getMOAPrescription() {\n    if (this.prescription.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Admission).prescriptioncontext_id) {\n      this.isMOAPrescription = true;\n    }\n  }\n  GetDischargeSummaryMessage() {\n    // discharge summary comment\n    this.dischargeSummaryComment = \"\";\n    this.dischargeSummarystatus = \"\";\n    if (this.componenttype == 'SUMNO') {\n      let prescription_stop_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.stopped || x.status == PrescriptionStatus.cancelled).prescriptionstatus_id;\n      let prescription_cancel_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.cancelled).prescriptionstatus_id;\n      let prescription_suspend_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.suspended).prescriptionstatus_id;\n      let allPrescription = this.appService.Prescription.filter(x => x.__medications.find(x => x.isprimary).__codes[0].code == this.primaryMedication.__codes[0].code && x.prescriptioncontext_id != this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Discharge).prescriptioncontext_id);\n      if (this.sumstatus == PrescriptionStatus.stopped) {\n        let allStop = allPrescription.filter(x => x.prescriptionstatus_id == prescription_stop_statusid || x.prescriptionstatus_id == prescription_cancel_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));\n        if (allStop && allStop.length > 0) {\n          let comment = this.appService.prescriptionEvent.find(e => e.prescriptionid == allStop[0].prescription_id);\n          if (comment) {\n            this.dischargeSummaryComment = comment.comments;\n            this.dischargeSummarystatus = PrescriptionStatus.stopped;\n          }\n        }\n      }\n      if (this.sumstatus == PrescriptionStatus.suspended) {\n        let addedToChart = allPrescription.filter(x => x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Inpatient).prescriptioncontext_id).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n        if (addedToChart && addedToChart.length == 0)// this drug was not added to drug chart as inpatient medication \n        {\n          this.dischargeSummaryComment = \"Medicine suspended on admission\";\n          this.dischargeSummarystatus = PrescriptionStatus.suspended;\n        }\n        else {\n          let allActive = allPrescription.filter(x => x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Inpatient).prescriptioncontext_id && x.prescriptionstatus_id != prescription_suspend_statusid && x.prescriptionstatus_id != prescription_stop_statusid && x.prescriptionstatus_id != prescription_cancel_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n          if (allActive && allActive.length > 0) // added to drug chart as inpatient medicaiton but, not to discharge prescription \n          {\n            this.dischargeSummaryComment = \"Medicine suspended on discharge\";\n            this.dischargeSummarystatus = PrescriptionStatus.suspended;\n          } else {\n            let allSuspend = allPrescription.filter(x => x.prescriptionstatus_id == prescription_suspend_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n            if (allSuspend && allSuspend.length > 0) // added to drug chart and manually suspended \n            {\n              let comment = this.appService.prescriptionEvent.find(e => e.prescriptionid == allSuspend[0].prescription_id);\n              if (comment) {\n                this.dischargeSummaryComment = comment.comments;\n                this.dischargeSummarystatus = PrescriptionStatus.suspended;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  getPrescriptionStatus() {\n    var status = this.metaprescriptionstatus.find(x => x.prescriptionstatus_id == this.prescription.prescriptionstatus_id);\n    if (status)\n      this.prescriptionstatus = this.metaprescriptionstatus.find(x => x.prescriptionstatus_id == this.prescription.prescriptionstatus_id).status;\n    else\n      this.prescriptionstatus = \"active\";\n  }\n\n}\n","<span *ngFor=\"let med of prescription.__medications; let i = index\">\n    <span style=\"font-size: 12px;font-weight: bold;\">{{med.name}} </span>\n    <!-- <ng-container *ngIf=\"fromPrinting\"><span class=\"empa-template-bold\" *ngIf=\"!fromPrinting\">{{med.name.split(' ').join('  ')}} </span></ng-container> -->\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n    <span *ngIf=\"med.__ingredients.length==1\"> ({{med.__ingredients[0].name}}) </span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span><br>\n    <span *ngIf=\"med.isprimary\">\n        <span  \n        *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0 && (appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesize || appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator || appService.GetCurrentPosology(prescription, posologyid).__dose[0].descriptivedose)\">\n        <span style=\"font-size: 11px;color: #2a93ba;font-weight: bold;\"> DOSE:</span>\n        <span  *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\">\n            <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"!appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">\n                {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesize| number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n                <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax\">\n                    - {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n               </span>\n                \n            </span>\n\n            <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">\n                {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength| number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n                <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthrangemax\">\n                    - {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthrangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n               </span>\n                \n            </span>\n\n        </span>\n        <span *ngIf=\"fromPrinting\">&nbsp;</span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\">\n            <span *ngIf=\"!fromPrinting\" style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\">\n                <span>  {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator |\n                    number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumeratorunit}}</span>\n                <span *ngIf=\"prescription.__medications.length==1\"> /\n                    {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominator |\n                    number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominatorunit}}\n                </span>\n            </span>\n              \n            <span *ngIf=\"fromPrinting\" style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\">\n                <span>  {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator |\n                    number}}&nbsp;&nbsp;{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumeratorunit}}\n                </span>\n                <span *ngIf=\"prescription.__medications.length==1\"> /\n                    {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominator |\n                    number}}&nbsp;&nbsp;{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominatorunit}}\n                </span>\n            </span>\n                \n        </span>\n \n        <span *ngIf=\"fromPrinting\">&nbsp;</span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='descriptive'\">\n            <span style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].descriptivedose}}</span>\n        </span>\n\n    </span>\n    </span>\n    <span *ngIf=\"!med.isprimary\">\n        <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"med.doseformunits\">- {{med.doseformsize | number}} {{med.doseformunits}}</span>\n        <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"med.strengthdenominatorunit\">- {{med.strengthdenominator | number}} {{med.strengthdenominatorunit}}</span>\n    </span>\n    <span *ngIf=\"prescription.ismodifiedrelease\">-MR</span>\n    <span *ngIf=\"prescription.isgastroresistant\">-GR</span>\n    <span *ngIf=\"i!=prescription.__medications.length-1\">\n        <br />\n    </span>\n</span>\n\n<br />\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).totalinfusionvolume\"><span style=\"color: #7891D8;font-weight: bold;\">TOTAL VOLUME: </span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription, posologyid).totalinfusionvolume | number}}ml</span> - </span>\n<span style=\"color: #7891D8;font-weight: bold;\">RATE: </span>\n\n<span *ngIf=\"prescription.titration\" style=\"font-size:11px; color: #646464;font-weight: bold;\">Titrate</span>\n\n<span *ngIf=\"(appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='ci' ||\n              appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='pca') &&\n              !prescription.titration\">\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='variable'\">\n        <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Variable</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='protocol'\">\n        <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Protocol</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency!='variable' && appService.GetCurrentPosology(prescription, posologyid).frequency!='protocol'\">\n        <span style=\"font-size:11px; color: #646464;font-weight: bold;\"> {{appService.GetCurrentPosology(prescription, posologyid).infusionrate | number}}\n            {{appService.GetCurrentPosology(prescription, posologyid).infusionrateunits}}\n        </span>\n    </span>\n\n    <span *ngIf=\"primaryMedication\">\n        <span\n            *ngIf=\"!prescription.ismedicinalgas && appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='ci'\"><span>\n                - CONTINUOUS\n                INFUSION</span>\n        </span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='rate'\">INTERMITTENT - </span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='pca'\"><span> - PCA/NCA\n            </span>\n        </span>\n    </span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n\n</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='rate' && !prescription.titration\">\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='variable'\">\n        <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Variable</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='protocol'\">\n        <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Protocol</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency!='variable' && appService.GetCurrentPosology(prescription, posologyid).frequency!='protocol'\"> <span\n        style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription, posologyid).infusionrate | number}}\n            {{appService.GetCurrentPosology(prescription, posologyid).infusionrateunits}}\n        </span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='rate'\"> - INTERMITTENT </span>\n        - <span style=\"color: #7891D8;font-weight: bold;\">DURATION: </span> {{appService.GetCurrentPosology(prescription, posologyid).infusionduration}}h </span>\n</span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusiontypeid=='bolus' && !prescription.titration\">\n    <span> BOLUS</span> <span *ngIf=\"fromPrinting\">&nbsp;</span> <span style=\"color: #7891D8;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).infusionduration\"> -\n        DURATION: {{appService.GetCurrentPosology(prescription, posologyid).infusionduration}}h </span>\n</span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span *ngIf=\"device\">\n    - <span>{{device}} </span> <span *ngIf=\"fromPrinting\">&nbsp;</span>\n</span>\n\n<span *ngIf=\"prescription.oxygenadditionalinfo && prescription.oxygenadditionalinfo.length>2\">\n    - <span>{{oxygenAdditionalInformation}} </span> <span *ngIf=\"fromPrinting\">&nbsp;</span>\n</span>\n<span *ngIf=\"prescription.__routes.length>0\">\n  <br/>  <span> <span style=\"color: #7891D8;font-weight: bold; font-size:11px\">ROUTE: </span>{{routes}}\n        <!-- <span *ngIf=\"primaryMedication\">\n            <span *ngIf=\"!prescription.ismedicinalgas\"><span>\n                    (infusion)</span>\n\n            </span>\n        </span> -->\n    </span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n</span>\n\n<span style=\"color: #7891D8;font-weight: bold;\" *ngIf=\"prescription.titration\"> TARGET {{prescription.titrationtype}}\n    <span *ngIf=\"prescription.titrationtargetmin\"> {{prescription.titrationtargetmin | number}}\n        {{prescription.titrationtargetunits}} </span>\n    <span *ngIf=\"prescription.titrationtargetmax\"> - {{prescription.titrationtargetmax | number}}\n        {{prescription.titrationtargetunits}} </span>\n        <span *ngIf=\"fromPrinting\">&nbsp;</span>\n</span>\n<!-- <span\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0 && (appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesize || appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator || appService.GetCurrentPosology(prescription, posologyid).__dose[0].descriptivedose)\">\n    <span> - DOSE </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\">\n        <span class=\"empa-template-bold\">{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesize| number}}\n            <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax\">\n                - {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax|number}}\n           </span>\n            {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\">\n        <span class=\"empa-template-bold\">{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator |\n            number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumeratorunit}} /\n            {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominator |\n            number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominatorunit}}</span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='descriptive'\">\n        <span class=\"empa-template-bold\">{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].descriptivedose}}</span>\n    </span>\n\n</span> -->\n\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='mor'\">\n    - Morning\n</span>\n\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='mid'\">\n    - Noon\n</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='night'\">\n    - Night\n</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='eve'\">\n   - Evening\n</span>\n\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='stat'\">\n    - Stat. dose\n</span>\n\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='x'\">\n    - {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} time(s) per day\n</span>\n\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='h'\">\n    - Every {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} hour(s)\n</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='m'\">\n    - Every {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} min(s)\n</span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).daysofweek && appService.GetCurrentPosology(prescription, posologyid).daysofweek.length>2\"> - Every\n    {{choosenDays}}</span>\n<span\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize && appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize>0\"> -\n    Every {{appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize}} {{appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequency}}</span>\n<span\n    *ngIf=\"prescriptionAdditionalCondition && prescriptionAdditionalCondition!='No additional criteria'\"> –\n    {{prescriptionAdditionalCondition}}</span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).doctorsorder\"> - Prescriber to confirm</span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prn\"> - When needed<span *ngIf=\"prnmaxdosestring\">(Max {{prnmaxdosestring}} per day)</span></span>\n<span *ngIf=\"fromPrinting\">&nbsp;</span>\n<span *ngIf=\"(componenttype=='OP' || componenttype=='medication_rec' || componenttype=='MOD' || componenttype=='SUM' || componenttype=='MODNO' || componenttype=='SUMNO') && (appService.GetCurrentPosology(prescription, posologyid).totalquantity || appService.GetCurrentPosology(prescription, posologyid).totalquantitytext)\">\n    <br/><span>TOTAL QUANTITY</span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).totalquantity\"> {{appService.GetCurrentPosology(prescription, posologyid).totalquantity}} {{ appService.GetCurrentPosology(prescription, posologyid).totalquantity|numberToWords}}\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\"> {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}</span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\"> {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominatorunit}}</span>\n    </span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).totalquantitytext\"> {{appService.GetCurrentPosology(prescription, posologyid).totalquantitytext}}</span>\n    <span *ngIf=\"fromPrinting\">&nbsp;</span>\n\n</span>\n<br/>\n<span *ngIf=\"fromPrinting\">\n    <span\n        *ngIf=\"componenttype!='additional' && componenttype!='MOA' && componenttype!='MOD' && componenttype!='SUM' && componenttype!='SUMNO' && componenttype!='MODNO'\">\n        <span *ngIf=\"componenttype=='administer' && !appService.GetCurrentPosology(prescription).prn\">\n            <span *ngIf=\"administration.planneddatetime\"><span>PLANNED TIME:\n                </span>\n                <span><strong>{{plannedTime}} </strong> </span></span>\n        </span>\n\n        <span\n            *ngIf=\"componenttype!='medicationOrderSet' && componenttype!='administer' && !prescription.linkedinfusionid\">\n            <span *ngIf=\"startDate\"><span style=\"font-size:11px; color: #7891D8;font-weight: bold;\">FROM:\n                </span> <span>{{startDate | date :\n                    \"dd-MMM-yyyy HH:mm\"}} </span></span>\n            <!-- <span *ngIf=\"modifiedFrom\"><br /> <span>MODIFIED FROM:\n                </span> <span>{{modifiedFrom | date :\n                    \"dd-MMM-yyyy HH:mm\"}} </span></span> -->\n            <!-- <span *ngIf=\"appService.GetCurrentPosology(prescription).prescriptionenddate\">&nbsp;</span> -->\n            <span *ngIf=\"appService.GetCurrentPosology(prescription).prescriptionenddate\"><br /><span\n                style=\"font-size:11px; color: #7891D8;font-weight: bold;\">UNTIL:\n                </span> <span\n                >{{appService.GetCurrentPosology(prescription).prescriptionenddate |\n                    date :\n                    \"dd-MMM-yyyy HH:mm\"}} </span></span>\n\n        </span><br>\n        <span>          \n            <span style=\"font-size:11px; color: #7891D8;font-weight: bold;\"> PRESCRIBED BY: </span>\n            <!-- <span *ngIf=\"isMOAPrescription\"> ADDED BY: </span> -->\n            <span>{{prescription.lastmodifiedby}}</span><span *ngIf=\"lastmodifiedbyrole && appService.appConfig.AppSettings.IsShowUserRole\">({{lastmodifiedbyrole}})</span>\n        </span><br>\n\n        <div *ngIf=\"prescriptionEventComment && !(componenttype=='SUM'|| componenttype=='SUMNO')\">\n            <div>\n            </div>\n            <!-- <div class=\"p-popover-body-width-s2\">\n                <span class=\"text-muted\">REASON FOR STATUS({{prescriptionstatus | uppercase}}) </span>\n            </div> -->\n            <div>\n                <span>{{'STATUS &nbsp; ( &nbsp;' + prescriptionstatus + ' &nbsp;) &nbsp;:&nbsp; ' + prescriptionEventComment}} </span>\n            </div>\n            <!-- <div class=\"p-popover-body-width-s3\">\n                <span class=\"emp-card-comment-block\">{{prescriptionEventComment}}</span>\n            </div> -->\n        </div>\n        <div *ngIf=\"dischargeSummaryComment && (componenttype=='SUM'|| componenttype=='SUMNO')\">\n            <div>\n            </div>\n            <!-- <div class=\"p-popover-body-width-s2\">\n                <span class=\"text-muted break-word\">REASON FOR STATUS({{dischargeSummarystatus | uppercase}}) </span>\n            </div> -->\n            <div>\n                <span>{{'STATUS &nbsp; ( &nbsp;' + dischargeSummarystatus + ' &nbsp;) &nbsp;:&nbsp; ' + dischargeSummaryComment}} </span>\n            </div>\n            <!-- <div class=\"p-popover-body-width-s3\">\n                <span class=\"emp-card-comment-block\">{{dischargeSummaryComment}}</span>\n            </div> -->\n        </div>\n    </span>\n</span>\n<span *ngIf=\"fromPrinting\">\n    <br />\n    <!-- <span *ngIf=\"componenttype=='administer' && !appService.GetCurrentPosology(prescription, posologyid).prn\">\n        <span *ngIf=\"administration.planneddatetime\"><span>PLANNED TIME </span>\n        <span *ngIf=\"fromPrinting\">&nbsp;</span><span><strong>{{plannedTime}} </strong> </span></span>\n    </span>\n    <span *ngIf=\"componenttype!='medicationOrderSet' && componenttype!='administer' && !prescription.linkedinfusionid\">\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prescriptionstartdate\"><span>FROM\n            </span><span *ngIf=\"fromPrinting\">&nbsp;</span><span>{{startDate | date :\n                \"dd-MMM-yyyy HH:mm\"}} </span></span>\n        <span *ngIf=\"fromPrinting && appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate\">&nbsp;</span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate && !fromPrinting\"><span>UNTIL\n            </span><span *ngIf=\"fromPrinting\">&nbsp;</span> <span>{{appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate | date :\n                \"dd-MMM-yyyy HH:mm\"}} </span></span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate && fromPrinting\"><span>UNTIL\n                </span><span *ngIf=\"fromPrinting\">&nbsp;</span> <span>{{appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate | date :\n                    \"dd-MMM-yyyy\"}}&nbsp;&nbsp;{{appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate | date :\n                      \"HH:mm\"}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>\n    </span> -->\n    \n    <span *ngIf=\"prescription.indication\"><span style=\"color: #7891D8;font-weight: bold; font-size: 11px;\">INDICATION </span> <span *ngIf=\"fromPrinting\">&nbsp;</span> <span\n    >{{indicationstring}} </span></span><br>\n    <span *ngIf=\"prescription.comments\"><span style=\"font-size:11px; color: #7891D8;font-weight: bold;\">COMMENTS </span> <span\n        >{{prescription.comments}} </span></span>\n</span>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport moment from 'moment';\nimport { Medication, Medicationadministration, MetaPrescriptionadditionalcondition, MetaPrescriptionstatus, Prescription } from 'src/app/models/EPMA';\nimport { AppService } from 'src/app/services/app.service';\n\n@Component({\n  selector: 'app-prescription-non-infusion-print-template',\n  templateUrl: './prescription-non-infusion-print-template.component.html',\n  styleUrls: ['./prescription-non-infusion-print-template.component.css']\n})\nexport class PrescriptionNonInfusionPrintTemplateComponent implements OnInit {\n\n  prescriptionstatus: MetaPrescriptionstatus[];\n  additionalcondition: MetaPrescriptionadditionalcondition[];\n  medicationadminstration: Medicationadministration;\n  @Input() componenttype: string;\n  @Input() prescription: Prescription;\n  @Input() administration: Medicationadministration;\n  @Input() posologyid: string;\n  @Input() fromPrinting = false;\n  showPrescriptionHistory: boolean = false;\n  primaryMedication: Medication;\n  plannedTime: string;\n  chosenDays = \"\";\n  routes = \"\";\n  prescriptionAdditionalConditions: string;\n  indicationstring = \"\"\n  prnmaxdosestring: string;\n  startDate: any;\n  lastmodifiedbyrole: any;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {\n    this.prescription.__medications.sort(value => {\n      return value.isprimary ? -1 : 1\n    });\n    this.prescriptionstatus = this.appService.MetaPrescriptionstatus;\n    this.additionalcondition = this.appService.MetaPrescriptionadditionalcondition;\n    this.primaryMedication = this.prescription.__medications.find(e => e.isprimary == true);\n    if (this.administration) {\n      this.plannedTime = moment(this.administration.planneddatetime, \"YYYY-MM-DD HH:mm\").format(\"DD-MMM-YYYY HH:mm\");\n    }\n\n    this.GetChosenDays();\n    this.GetRoutes();\n    this.GetAdditionalConditions();\n    this.indicationstring = this.appService.GetIndication(this.prescription);\n    this.startDate = this.prescription.startdatetime;\n    const currentPosology = this.appService.GetCurrentPosology(this.prescription, this.posologyid);\n    if (currentPosology.prn && currentPosology.prnmaxdose) {\n      this.prnmaxdosestring = this.appService.GetPRNMaxDoseDisplayString(currentPosology.prnmaxdose);\n    }\n    this.lastmodifiedbyrole = this.appService.JSONTryParse(this.prescription.lastmodifiedbyrole)??[].join(\", \");\n  }\n\n  GetRoutes() {\n    this.routes = this.prescription.__routes.sort((x, y) => Number(y.isdefault) - Number(x.isdefault)).map(m => m.route).join(\",\");\n  }\n  GetChosenDays() {\n    this.chosenDays = JSON.parse(this.appService.GetCurrentPosology(this.prescription, this.posologyid).daysofweek).join(\", \");\n  }\n  GetAdditionalConditions() {\n    var condition = this.additionalcondition.find(x => x.prescriptionadditionalconditions_id == this.prescription.prescriptionadditionalconditions_id);\n    if (condition)\n      this.prescriptionAdditionalConditions = this.additionalcondition.find(x => x.prescriptionadditionalconditions_id == this.prescription.prescriptionadditionalconditions_id).additionalcondition;\n    else\n      this.prescriptionAdditionalConditions = \"No additional criteria\";\n  }\n\n}\n","<span *ngFor=\"let med of prescription.__medications\">\n    <span style=\"font-size: 12px;font-weight: bold;\">{{med.name}}</span>\n    <span *ngIf=\"med.__ingredients.length==1\"> ({{med.__ingredients[0].name}}) </span>\n    <span *ngIf=\"prescription.__medications.length > 1\">\n        <span *ngIf=\"med.isprimary\">\n            <span\n                *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0 && (appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesize || appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator || appService.GetCurrentPosology(prescription, posologyid).__dose[0].descriptivedose)\">\n                <span style=\"font-size: 11px;color: #2a93ba;font-weight: bold;\" >DOSE:</span> \n                <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\">\n                    <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" \n                        *ngIf=\"!appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">{{appService.GetCurrentPosology(prescription,\n                        posologyid).__dose[0].dosesize| number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n                        <span\n                            *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax\">\n                            - {{appService.GetCurrentPosology(prescription,posologyid).__dose[0].dosesizerangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n                        </span>\n                        \n                    </span>\n\n                    <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" \n                        *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">{{appService.GetCurrentPosology(prescription,\n                        posologyid).__dose[0].dosestrength| number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n                        <span\n                            *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthrangemax\">\n                            - {{appService.GetCurrentPosology(prescription,\n                            posologyid).__dose[0].dosestrengthrangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n                        </span>\n                        \n                    </span>\n\n                </span>\n                <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\">\n                    <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\">\n                        <span> {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator |\n                            number}}{{appService.GetCurrentPosology(prescription,\n                            posologyid).__dose[0].strengthneumeratorunit}}</span>\n                        <span *ngIf=\"prescription.__medications.length==1\"> /\n                            {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominator |\n                            number}}{{appService.GetCurrentPosology(prescription,\n                            posologyid).__dose[0].strengthdenominatorunit}}\n                        </span>\n                    </span>\n                </span>\n                <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='descriptive'\">\n                    <span style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription,\n                        posologyid).__dose[0].descriptivedose}}</span>\n                </span>\n\n            </span>\n        </span>\n        <span *ngIf=\"!med.isprimary\">\n            <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"med.doseformunits\">- {{med.doseformsize}}\n                {{med.doseformunits}}</span>\n            <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" *ngIf=\"med.strengthdenominatorunit\">-\n                {{med.strengthdenominator}}{{med.strengthdenominatorunit}}</span>\n        </span>\n    </span>\n    <span *ngIf=\"prescription.ismodifiedrelease\">-MR</span>\n    <span *ngIf=\"prescription.isgastroresistant\">-GR</span>\n</span>\n<br />\n<span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\"  *ngIf=\"prescription.__medications.length == 1 || prescription.titration\">DOSE:\n</span>\n<span\n    *ngIf=\"prescription.__medications.length > 1 && !prescription.titration && appService.GetCurrentPosology(prescription, posologyid).totalinfusionvolume\">\n    <span style=\"color: #7891D8;font-weight: bold;\">TOTAL VOLUME: </span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription,\n        posologyid).totalinfusionvolume | number}}ml</span>\n</span>\n<span *ngIf=\"prescription.titration && componenttype!='administer'\" style=\"font-size:11px; color: #646464;font-weight: bold;\">Titrate</span>\n<span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\"  *ngIf=\"prescription.titration && componenttype!='administer'\"> TARGET\n    {{prescription.titrationtype}}\n    <span *ngIf=\"prescription.titrationtargetmin\"> {{prescription.titrationtargetmin}}\n        {{prescription.titrationtargetunits}}</span>\n    <span *ngIf=\"prescription.titrationtargetmax\"> - {{prescription.titrationtargetmax}}\n        {{prescription.titrationtargetunits}}</span>\n</span>\n<span *ngIf=\"!(prescription.titration && componenttype!='administer') && prescription.__medications.length == 1\">\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\">\n        <span *ngIf=\"componenttype=='administer'\">\n            <span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"administration\">{{administration.planneddosesize | number}} <span\n                    *ngIf=\"administration.planneddosesizerangemax && administration.planneddosesizerangemax!='0'\"> -\n                    {{administration.planneddosesizerangemax | number}} </span>\n                {{administration.planneddoseunit}}</span>\n        </span>\n        <span *ngIf=\"componenttype!='administer'\">\n            <span\n                *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='' || appService.GetCurrentPosology(prescription, posologyid).frequency=='x' || appService.GetCurrentPosology(prescription, posologyid).frequency=='h' || appService.GetCurrentPosology(prescription, posologyid).frequency=='stat' || appService.GetCurrentPosology(prescription, posologyid).frequency=='mor'  || appService.GetCurrentPosology(prescription, posologyid).frequency=='mid' || appService.GetCurrentPosology(prescription, posologyid).frequency=='eve'  || appService.GetCurrentPosology(prescription, posologyid).frequency=='night'\">\n                <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\"\n                    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0 && !appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">{{appService.GetCurrentPosology(prescription,\n                    posologyid).__dose[0].dosesize | number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n                    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax\">\n                        - {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosesizerangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}\n                    </span>\n                    \n                </span>\n                <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" \n                    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0 && appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrength\">{{appService.GetCurrentPosology(prescription,\n                    posologyid).__dose[0].dosestrength | number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n                    <span\n                        *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthrangemax\">\n                        - {{appService.GetCurrentPosology(prescription,\n                        posologyid).__dose[0].dosestrengthrangemax|number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].dosestrengthunits}}\n                    </span>\n                    \n                </span>\n\n            </span>\n            <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='variable'\">\n                <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Variable</span>\n            </span>\n            <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='protocol'\">\n                <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Protocol</span>\n            </span>\n        </span>\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\">\n        <span *ngIf=\"componenttype=='administer'\">\n            <span style=\"font-size:11px; color: #646464;font-weight: bold;\"\n                *ngIf=\"administration\">{{administration.plannedstrengthneumerator}}{{administration.plannedstrengthneumeratorunits}}\n                / {{administration.plannedstrengthdenominator}}{{administration.plannedstrengthdenominatorunits}}</span>\n        </span>\n        <span *ngIf=\"componenttype!='administer'\">\n            <span\n                *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='' || appService.GetCurrentPosology(prescription, posologyid).frequency=='x' || appService.GetCurrentPosology(prescription, posologyid).frequency=='h' || appService.GetCurrentPosology(prescription, posologyid).frequency=='stat' || appService.GetCurrentPosology(prescription, posologyid).frequency=='mor'  || appService.GetCurrentPosology(prescription, posologyid).frequency=='mid' || appService.GetCurrentPosology(prescription, posologyid).frequency=='eve' || appService.GetCurrentPosology(prescription, posologyid).frequency=='night'\">\n                <span style=\"font-size: 12px;color: #2a93ba;font-weight: bold;\" \n                    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0\">\n                    {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumerator |\n                    number}}{{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthneumeratorunit}}\n                    /\n                    {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominator |\n                    number}}{{appService.GetCurrentPosology(prescription,\n                    posologyid).__dose[0].strengthdenominatorunit}}\n                </span>\n            </span>\n            <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='variable'\">\n                <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Variable</span>\n            </span>\n            <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='protocol'\">\n                <span style=\"font-size:11px; color: #646464;font-weight: bold;\">Protocol</span>\n            </span>\n        </span>\n\n    </span>\n    <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='descriptive'\">\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).__dose.length>0\"\n            style=\"font-size:11px; color: #646464;font-weight: bold;\">{{appService.GetCurrentPosology(prescription,\n            posologyid).__dose[0].descriptivedose}}</span>\n    </span>\n</span>\n\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='mor'\">\n    - Morning\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='mid'\">\n    - Noon\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='eve'\">\n    - Evening\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\"\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='night'\">\n    - Night\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='stat'\">\n    - Stat. dose\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='x'\">\n    - {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} time(s) per day\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='h'\">\n    - Every {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} hour(s)\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).frequency=='m'\">\n    - Every {{appService.GetCurrentPosology(prescription, posologyid).frequencysize}} min(s)\n</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\"\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).daysofweek && appService.GetCurrentPosology(prescription, posologyid).daysofweek.length>2\">\n    - Every\n    {{chosenDays}}</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\"\n    *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize && appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize>0\">\n    -\n    Every {{appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequencysize}}\n    {{appService.GetCurrentPosology(prescription, posologyid).dosingdaysfrequency}}</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"prescriptionAdditionalConditions!='No additional criteria'\"> –\n    {{prescriptionAdditionalConditions}}</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).doctorsorder\"> - Prescriber to confirm</span>\n<span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prn\"> - When\n    needed<span *ngIf=\"prnmaxdosestring\">(Max {{prnmaxdosestring}} per day)</span></span>\n<span *ngIf=\"prescription.__routes.length>0\"> <br /><span><span\n    style=\"color: #7891D8;font-weight: bold;font-size:11px\" >ROUTE: </span> {{routes}} </span></span>\n<span\n    *ngIf=\"(componenttype=='OP' || componenttype=='medication_rec' || componenttype=='MOD' || componenttype=='SUM' || componenttype=='MODNO' || componenttype=='SUMNO') && (appService.GetCurrentPosology(prescription, posologyid).totalquantity || appService.GetCurrentPosology(prescription, posologyid).totalquantitytext)\">\n    <br /><span>TOTAL QUANTITY</span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).totalquantity\">\n        {{appService.GetCurrentPosology(prescription, posologyid).totalquantity}} {{\n        appService.GetCurrentPosology(prescription, posologyid).totalquantity|numberToWords}}\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='units'\">\n            {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].doseunit}}(s)</span>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).dosetype=='strength'\">\n            {{appService.GetCurrentPosology(prescription, posologyid).__dose[0].strengthdenominatorunit}}</span>\n    </span>\n    <span style=\"font-size:11px; color: #646464;font-weight: bold;\" *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).totalquantitytext\">\n        {{appService.GetCurrentPosology(prescription, posologyid).totalquantitytext}}</span>\n</span>\n<span *ngIf=\"fromPrinting\">\n    <br />\n    <!-- <span *ngIf=\"componenttype=='administer' && !appService.GetCurrentPosology(prescription, posologyid).prn\">\n        <span *ngIf=\"administration.planneddatetime\"><span>PLANNED TIME </span>\n            <span class=\"dose-text\"><strong>{{plannedTime}} </strong> </span></span>\n    </span> -->\n    <span *ngIf=\"componenttype!='medicationOrderSet'  && componenttype!='administer' && !prescription.linkedinfusionid\">\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prescriptionstartdate\"><span style=\"color: #7891D8;font-weight: bold;font-size:11px\">FROM\n            </span> <span>{{startDate | date :\n                \"dd-MMM-yyyy HH:mm\"}} </span></span><br>\n        <span *ngIf=\"appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate\"><span style=\"color: #7891D8;font-weight: bold;font-size:11px\">UNTIL\n            </span> <span>{{appService.GetCurrentPosology(prescription, posologyid).prescriptionenddate | date :\n                \"dd-MMM-yyyy HH:mm\"}} </span></span>\n    </span><br>\n    <span>          \n        <span style=\"font-size:11px; color: #7891D8;font-weight: bold;\"> PRESCRIBED BY: </span>\n        <!-- <span *ngIf=\"isMOAPrescription\"> ADDED BY: </span> -->\n        <span>{{prescription.lastmodifiedby}}</span><span *ngIf=\"lastmodifiedbyrole && appService.appConfig.AppSettings.IsShowUserRole\">({{lastmodifiedbyrole}})</span>\n    </span><br>\n    \n    <span *ngIf=\"prescription.indication\"><span style=\"font-size:11px; color: #7891D8;font-weight: bold;\">INDICATION </span> <span\n    style=\"font-size:11px; color: #646464;font-weight: bold;\" >{{indicationstring}} </span></span><br>\n    <span *ngIf=\"prescription.comments\"><span style=\"font-size:11px; color: #7891D8;font-weight: bold;\">COMMENTS </span> <span\n        >{{prescription.comments}} </span></span>\n    \n</span>","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { jsPDF } from 'jspdf';\nimport { Dose, Epma_Medsonadmission, Medication, Prescription } from 'src/app/models/EPMA';\nimport { DoseType, InfusionType, PrescriptionContext, PrescriptionStatus } from 'src/app/services/enum';\nimport * as Canvg  from 'canvg';\nimport * as DOMPurify  from 'dompurify';\nimport * as html2canvas from 'html2canvas';\nimport { HelperService } from 'src/app/services/helper.service';\nimport { AppService } from 'src/app/services/app.service';\nimport moment from 'moment';\nimport * as html2pdf from 'html2pdf.js';\nimport { Subscription } from 'rxjs';\nimport { ApirequestService } from 'src/app/services/apirequest.service';\nimport { filter, filterparam, filterParams, filters, orderbystatement, selectstatement } from 'src/app/models/filter.model';\n\nconst pdfMake = require('pdfmake/build/pdfmake.js');\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts\";  \ndeclare var require: any;\nconst htmlToPdfmake = require(\"html-to-pdfmake\");\n(<any>pdfMake).vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n  selector: 'app-print-discharge',\n  templateUrl: './print-discharge.component.html',\n  styleUrls: ['./print-discharge.component.css'],\n})\nexport class PrintDischargeComponent implements OnInit, AfterViewInit {\n\n  @Input() customTemplate: TemplateRef<any>;\n  @Input() unChangedPres: Array<Prescription>;\n  @Input() changedPres: Array<Prescription>;\n  @Input() stoppedPres: Array<Prescription>;\n  @Input() suspendedPres: Array<Prescription>;\n  @Input() newPres: Array<Prescription>;\n  @Input() dischargeComments: any;\n  @Input() view: any = 'p';\n  @Input() dimensions: any = [800,650];\n  @Input() title: string = 'Discharge Summary';\n  @Input() saveTitle: string = 'Discharge Summary';\n  @Input() measuringUnit: any = 'pt';\n  @Input() notesDisplayData: Array<any>;\n  @Input() printType: any;\n\n  @Output() destroyComponent: EventEmitter<any> = new EventEmitter();\n  @Output() getRecordedNotes: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('dischargeSummaryElement')\n  dischargeSummaryElement: ElementRef;\n\n  therapyType: string;\n  primaryMedication: Medication;\n  patientDetails = { fullname: '', born: '', hospitalnumber: '', nhsnumber: '', allergies: '', dob: '', age: '', gender: '', address: '' };\n  subscriptions: Subscription = new Subscription();\n  arrreconcilation: any[] = [];\n  AdditionalInfo: boolean = false;\n  latestNotes: string = \"\";\n  NodesType = \"\";\n  dischargeSummaryComment: string;\n  dischargeSummarystatus: string;\n  allergyIntoleranceList: any;\n  allergiesString: string;\n\n  constructor(private hs: HelperService, public appService: AppService, private apiRequest: ApirequestService) { }\n\n  ngOnInit() {\n    console.log('this.customTemplate',this.customTemplate);\n    if (!this.customTemplate) {\n      this.dischargeComments = this.dischargeComments[0];   \n\n    this.getRecordedNotes.emit('');\n    this.hs.getDosesPrescriptions(this.unChangedPres);\n    this.hs.getDosesPrescriptions(this.changedPres);\n    this.hs.getDosesPrescriptions(this.stoppedPres);\n    this.hs.getDosesPrescriptions(this.suspendedPres);\n    this.hs.getDosesPrescriptions(this.newPres);\n    // console.log(\"suspendedPres\", this.suspendedPres);\n    console.log(\"stoppedPres\", this.stoppedPres);\n    // this.stoppedPrescription(this.stoppedPres);\n    this.unChangedPres.forEach(pres => {\n      const typeOfMedicine = this.getTherapyType(pres);\n      pres[\"type_of_medicine\"] = typeOfMedicine;\n    });\n    this.changedPres.forEach(pres => {\n      const typeOfMedicine = this.getTherapyType(pres);\n      pres[\"type_of_medicine\"] = typeOfMedicine;\n    });\n    this.stoppedPres.forEach(pres => {\n      const typeOfMedicine = this.getTherapyType(pres);\n      pres[\"type_of_medicine\"] = typeOfMedicine;\n    });\n    this.suspendedPres.forEach(pres => {\n      const typeOfMedicine = this.getTherapyType(pres);\n      pres[\"type_of_medicine\"] = typeOfMedicine;\n    });\n    this.newPres.forEach(pres => {\n      const typeOfMedicine = this.getTherapyType(pres);\n      pres[\"type_of_medicine\"] = typeOfMedicine;\n    });\n  }\n\n  \n    this.getAllergiesList();\n    Canvg;\n    DOMPurify;\n    html2canvas;\n\n  }\n\n  ngAfterViewInit() {\n      // this.createPdf();\n      setTimeout(() => {\n        this.downloadAsPDF();\n      }, 1000);\n      \n  }\n\n  public downloadAsPDF() {\n    this.patientDetails = this.appService.patientDetails;\n    const splitAge = this.patientDetails.born?.split(' ');\n    this.patientDetails.dob = splitAge[0] + ' ' + splitAge[1] + ' ' + splitAge[2];\n    this.patientDetails.age = splitAge[3];\n    var printType = this.printType\n\n    let htmlToPdfOptions = {\n      \"tableAutoSize\": true, \n      \"removeExtraBlanks\": true, \n      \"removeTagClasses\": true\n    }\n    const pdfTable = this.dischargeSummaryElement.nativeElement;\n    var html = htmlToPdfmake(pdfTable.innerHTML,htmlToPdfOptions);\n    var documentDefinition = { \n      header: (currentPage, pageCount, pageSize) => {\n        // you can apply any logic and return any valid pdfmake element\n        if(currentPage > 1)\n        {\n          return {\n            columns: [\n              { text: ' ' + this.patientDetails.fullname.split(',')[0]+',  ' + this.patientDetails.fullname.split(',')[1] + ', ' + this.patientDetails.dob + ', ' + this.patientDetails.age + ', ' + this.patientDetails.gender + ', ' + this.patientDetails.hospitalnumber + ', ' + this.patientDetails.nhsnumber + ', ' + this.patientDetails.address + '\\n' + this.allergiesString , alignment : 'center', style: 'header'},\n              // { text: this.allergiesString , alignment : 'center', style: 'header'},\n            ],\n            margin: [0,10,0,10],\n          } \n        }\n        \n      },\n      footer: function(currentPage, pageCount, pageSize) { \n        let currTime = moment(moment()).format('HH:mm');\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n\n        let date =dd + '/' + mm + '/' + yyyy;\n        if(printType == 'empty')\n        {\n          return {\n            columns: [\n              { text: 'Prescriber to print name, sign & date:________________________', alignment : 'left',style: 'footer'},\n              { text: 'Royal National Orthopaedic Hospital Trust, Brockley Hill, Stanmore, Middlesex HA7 4LP. Tel: 020 8954 2300'  , alignment : 'right', style: 'footer'},\n              { text: 'Page '+currentPage.toString() + ' of ' + pageCount + ' Date/Time: ' + date+ ' ' + currTime , alignment : 'center', style: 'footer'},\n            ],\n            margin: [10, 10, 0, 5],\n          };\n        }\n        else {\n          return {\n            columns: [\n              { text: 'Royal National Orthopaedic Hospital Trust, Brockley Hill, Stanmore, Middlesex HA7 4LP. Tel: 020 8954 2300 \\n Page '+currentPage.toString() + ' of ' + pageCount + ' Date/Time: ' + date+ ' ' + currTime , alignment : 'center', style: 'footer'},\n            ],\n            margin: [0, 5, 0, 5],\n          } \n        }\n        // return 'Page '+currentPage.toString() + ' of ' + pageCount + ' Date/Time: ' + date+ ' ' + currTime; \n      },\n      pageMargins: [10, 45, 25, 30],\n      // pageOrientation: 'portrait', \n      pageSize: {width: 595, height: 842},\n      Times: {\n        normal: 'Times-Roman',\n        bold: 'Times-Bold',\n        italics: 'Times-Italic',\n        bolditalics: 'Times-BoldItalic'\n      },\n      content: html,\n      styles: {\n        header: {\n          fontSize: 8,\n          italics: true,\n          color: 'grey'\n        },\n        footer: {\n          fontSize: 8,\n          italics: true,\n          color: 'grey'\n        },\n      },\n    };\n    pdfMake.createPdf(documentDefinition).open(); \n    this.destroyComponent.emit('destroy');\n     \n  }\n\n  // create pdf from html and display in new tab.\n  createPdf() {\n    // console.log('patientDetails',this.patientDetails);\n    this.patientDetails = this.appService.patientDetails;\n    const splitAge = this.patientDetails.born?.split(' ');\n    this.patientDetails.dob = splitAge[0] + ' ' + splitAge[1] + ' ' + splitAge[2];\n    this.patientDetails.age = splitAge[3];\n\n    let title = this.title\n\n    let pdf = new jsPDF(this.view, this.measuringUnit, this.dimensions, true);\n    var element = this.dischargeSummaryElement.nativeElement;\n    \n    if (this.customTemplate) {\n      pdf.html(this.dischargeSummaryElement.nativeElement, {\n        margin: [40,0,30,0],\n        callback: (pdf) => {\n          pdf.setProperties({\n            title: this.title,\n          });\n  \n          const pageCount = pdf.getNumberOfPages();\n          let currTime = moment(moment()).format('HH:mm');\n          for(var i = 1; i <= pageCount; i++)\n          {\n            pdf.setPage(i);\n            if(i > 1)\n            {\n              pdf.setFont(undefined,'bold');\n              pdf.text('Name: ' + this.patientDetails.fullname.split(',')[0]+',  ' + this.patientDetails.fullname.split(',')[1] + ' DOB: ' + this.patientDetails.dob + ' Age: ' + this.patientDetails.age + ' Gender: ' + ((this.patientDetails.gender == 'Male')?'M':'F') + ' Hospital Number: ' + this.patientDetails.hospitalnumber + ' NHS Number: ' + this.patientDetails.nhsnumber,130,30,null,null);\n            }\n            \n            pdf.setFont(undefined,'normal');\n            var today = new Date();\n            var dd = String(today.getDate()).padStart(2, '0');\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            var yyyy = today.getFullYear();\n\n            let date =dd + '/' + mm + '/' + yyyy;\n            pdf.text('Page '+ String(i) + ' of ' + pageCount + ' Date/Time: ' + date+ ' ' + currTime,350,580,null,null);\n            // pdf.text('Page '+ String(i) + ' of ' + pageCount + ' Time: ' + currTime,350,580,null,null);\n          }\n          window.open(<any>pdf.output('bloburl'), '_blank');\n          this.destroyComponent.emit('destroy');\n        },\n      });\n\n      // var opt = {\n      //   margin:       [40,0,30,0],\n      //   html2canvas:  { scale: 2 },\n      //   jsPDF:        { unit: this.measuringUnit, format: this.dimensions, orientation: this.view },\n      //   pagebreak:    { mode: ['avoid-all', 'css'] },\n      // };\n  \n      // html2pdf().from(element).set(opt).toPdf().get('pdf').then((pdf) => {\n      //   var totalPages = pdf.internal.getNumberOfPages();\n      //   let currTime = moment(moment()).format('HH:mm');\n      //   for (let i = 1; i <= totalPages; i++) {\n          \n      //     pdf.setPage(i);\n      //     // set header to every page\n      //     if(i > 1)\n      //     {\n      //       pdf.setFont(undefined,'bold');\n      //       pdf.text('Name: ' + this.patientDetails.fullname.split(',')[0]+',  ' + this.patientDetails.fullname.split(',')[1] + ' DOB: ' + this.patientDetails.dob + ' Age: ' + this.patientDetails.age + ' Gender: ' + ((this.patientDetails.gender == 'Male')?'M':'F') + ' Hospital Number: ' + this.patientDetails.hospitalnumber + ' NHS Number: ' + this.patientDetails.nhsnumber,130,30,null,null);\n      //     }\n  \n      //    // set footer to every page\n      //     pdf.setFont(undefined,'normal');\n      //     pdf.setFontSize(10);\n      //     var today = new Date();\n      //     var dd = String(today.getDate()).padStart(2, '0');\n      //     var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      //     var yyyy = today.getFullYear();\n  \n      //     let date =dd + '/' + mm + '/' + yyyy;\n      //     pdf.text('Page '+ String(i) + ' of ' + totalPages + ' Date/Time: ' + date+ ' ' + currTime,320,580,null,null);\n      //   }\n  \n      //   window.open(<any>pdf.output('bloburl'), '_blank');\n      //   this.destroyComponent.emit('destroy');\n       \n      // })\n    }\n    else{\n      pdf.html(this.dischargeSummaryElement.nativeElement, {\n        margin: [40,0,40,0],\n        callback: (pdf) => {\n          // pdf.save('doc.pdf');    // for saving the document directly.\n          pdf.setProperties({\n            title: this.title,\n          });\n          const pageCount = pdf.getNumberOfPages();\n          let currTime = moment(moment()).format('HH:mm');\n          for(var i = 1; i <= pageCount; i++)\n          {\n            pdf.setPage(i);\n            if(i > 1)\n            {\n              pdf.setFont(undefined,'bold');\n              pdf.text('Name: ' + this.patientDetails.fullname.split(',')[0]+',  ' + this.patientDetails.fullname.split(',')[1] + ' DOB: ' + this.patientDetails.dob + ' Age: ' + this.patientDetails.age + ' Gender: ' + ((this.patientDetails.gender == 'Male')?'M':'F') + ' Hospital Number: ' + this.patientDetails.hospitalnumber + ' NHS Number: ' + this.patientDetails.nhsnumber,50,30,null,null);\n            }\n            \n            pdf.setFont(undefined,'normal');\n            var today = new Date();\n            var dd = String(today.getDate()).padStart(2, '0');\n            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n            var yyyy = today.getFullYear();\n\n            let date =dd + '-' + mm + '-' + yyyy;\n            pdf.text('Page '+ String(i) + ' of ' + pageCount + ' Date: ' + date+ ' Time: ' + currTime,250,780,null,null);\n          }\n          window.open(<any>pdf.output('bloburl'), '_blank');\n          this.destroyComponent.emit('destroy');\n        },\n      });\n\n      // var opt1 = {\n      //   margin:       [40,0,30,0],\n      //   html2canvas:  { scale: 2 },\n      //   jsPDF:        { unit: this.measuringUnit, format: this.dimensions, orientation: this.view },\n      //   pagebreak:    { mode: ['avoid-all', 'css'] }\n      // };\n  \n      // html2pdf().from(element).set(opt1).toPdf().get('pdf').then((pdf) => {\n      //   var totalPages = pdf.internal.getNumberOfPages();\n      //   let currTime = moment(moment()).format('HH:mm');\n      //   for (let i = 1; i <= totalPages; i++) {\n          \n      //     pdf.setPage(i);\n      //     // set header to every page\n      //     if(i > 1)\n      //     {\n      //       pdf.setFont(undefined,'bold');\n      //       pdf.text('Name: ' + this.patientDetails.fullname.split(',')[0]+',  ' + this.patientDetails.fullname.split(',')[1] + ' DOB: ' + this.patientDetails.dob + ' Age: ' + this.patientDetails.age + ' Gender: ' + ((this.patientDetails.gender == 'Male')?'M':'F') + ' Hospital Number: ' + this.patientDetails.hospitalnumber + ' NHS Number: ' + this.patientDetails.nhsnumber,50,30,null,null);\n      //     }\n  \n      //    // set footer to every page\n      //     pdf.setFont(undefined,'normal');\n      //     pdf.setFontSize(10);\n      //     var today = new Date();\n      //     var dd = String(today.getDate()).padStart(2, '0');\n      //     var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      //     var yyyy = today.getFullYear();\n  \n      //     let date =dd + '/' + mm + '/' + yyyy;\n      //     pdf.text('Page '+ String(i) + ' of ' + totalPages + ' Date/Time: ' + date+ ' ' + currTime,200,830,null,null);\n      //   }\n  \n      //   window.open(<any>pdf.output('bloburl'), '_blank');\n      //   this.destroyComponent.emit('destroy');\n       \n      // })\n    }\n  \n  }\n\n  getTherapyType(pres: Prescription) {\n    this.primaryMedication = pres.__medications.find(e => e.isprimary == true);\n    if (!this.primaryMedication.form) {\n      return \"therapy\";\n    }\n    else if (this.primaryMedication.form.toLowerCase().indexOf(\"tablet\") != -1 || this.primaryMedication.form.toLowerCase().indexOf(\"capsule\") != -1) {\n      return \"TabletorCapsule\";\n    } else if (this.primaryMedication.form.toLowerCase().indexOf(\"injection\") != -1) {\n      return \"Injection\";\n    } else if (this.primaryMedication.form.toLowerCase().indexOf(\"infusion\") != -1) {\n      if (pres.infusiontype_id == \"ci\" || pres.infusiontype_id == InfusionType.pca) {\n        return \"ContinuousInfusion\";\n      } else {\n        return \"Infusion\";\n      }\n\n    } else if (this.primaryMedication.form.toLowerCase().indexOf(\"fluid\") != -1) {\n      return \"BasicFluids\";\n    } else if (this.primaryMedication.form.toLowerCase().indexOf(\"inhalation\") != -1) {\n      return \"Inhalation\";\n    } else {\n      return \"therapy\";\n    }\n  }\n\n  CreateSessionFilter() {\n    const condition = \"encounterid=@encounterid\";\n    const f = new filters()\n    f.filters.push(new filter(condition));\n\n    const pm = new filterParams();\n    pm.filterparams.push(new filterparam(\"encounterid\", this.appService.encounter.encounter_id));\n\n\n    const select = new selectstatement(\"SELECT *\");\n\n    const orderby = new orderbystatement(\"ORDER BY 2\");\n\n    const body = [];\n    body.push(f);\n    body.push(pm);\n    body.push(select);\n    body.push(orderby);\n\n    return JSON.stringify(body);\n  }\n\n  getAllergiesList()\n  {\n    let getAllergyListForPersonURI = this.appService.baseURI +  \"/GetBaseViewListByAttribute/terminus_personallergylist?synapseattributename=person_id&attributevalue=\" + this.appService.personId + \"&orderby=clinicalstatusvalue ASC, causativeagentcodesystem DESC, _sequenceid DESC\";\n  \n    this.subscriptions.add(\n      this.apiRequest.getRequest(getAllergyListForPersonURI)\n      .subscribe((response) => {\n          let allergies = JSON.parse(response);\n          this.allergyIntoleranceList = allergies.filter(x => x.clinicalstatusvalue == 'Active');\n          let string = '';\n          this.allergyIntoleranceList.forEach(function(element, idx, array) {\n            if (idx === array.length - 1){ \n              string += element.causativeagentdescription;\n            }\n            else{\n              string += element.causativeagentdescription + ', ';\n            }\n          });\n          this.allergiesString = string;\n      })\n    )\n  }\n\n  GetDischargeSummaryMessage(pres, componenttype, sumstatus) {\n    // discharge summary comment\n    let dischargeSummaryComment = \"\";\n    let dischargeSummarystatus = \"\";\n    if (componenttype == 'SUMNO') {\n      let prescription_stop_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.stopped || x.status == PrescriptionStatus.cancelled).prescriptionstatus_id;\n      let prescription_cancel_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.cancelled).prescriptionstatus_id;\n      let prescription_suspend_statusid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.suspended).prescriptionstatus_id;\n      let allPrescription = this.appService.Prescription.filter(x => x.__medications.find(x => x.isprimary).__codes[0].code == pres.__medications.find(x => x.isprimary).__codes[0].code && x.prescriptioncontext_id != this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Discharge).prescriptioncontext_id);\n      if (sumstatus == PrescriptionStatus.stopped) {\n        let allStop = allPrescription.filter(x => x.prescriptionstatus_id == prescription_stop_statusid || x.prescriptionstatus_id == prescription_cancel_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));\n        if (allStop && allStop.length > 0) {\n          let comment = this.appService.prescriptionEvent.find(e => e.prescriptionid == allStop[0].prescription_id);\n          if (comment) {\n            dischargeSummaryComment = comment.comments;\n            this.dischargeSummarystatus = PrescriptionStatus.stopped;\n          }\n        }\n      }\n      if (sumstatus == PrescriptionStatus.suspended) {\n        let addedToChart = allPrescription.filter(x => x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Inpatient).prescriptioncontext_id).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n        if (addedToChart && addedToChart.length == 0)// this drug was not added to drug chart as inpatient medication \n        {\n          dischargeSummaryComment = \"Medicine suspended on admission\";\n          dischargeSummarystatus = PrescriptionStatus.suspended;\n        }\n        else {\n          let allActive = allPrescription.filter(x => x.prescriptioncontext_id == this.appService.MetaPrescriptioncontext.find(y => y.context == PrescriptionContext.Inpatient).prescriptioncontext_id &&  x.prescriptionstatus_id != prescription_suspend_statusid && x.prescriptionstatus_id != prescription_stop_statusid && x.prescriptionstatus_id != prescription_cancel_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n          if (allActive && allActive.length > 0) // added to drug chart as inpatient medicaiton but, not to discharge prescription \n          {\n            dischargeSummaryComment = \"Medicine suspended on discharge\";\n            dischargeSummarystatus = PrescriptionStatus.suspended;\n          } else {\n            let allSuspend = allPrescription.filter(x => x.prescriptionstatus_id == prescription_suspend_statusid).slice().sort((b, a) => (moment(a.lastmodifiedon) > moment(b.lastmodifiedon)) ? 1 : ((moment(b.lastmodifiedon) > moment(a.lastmodifiedon)) ? -1 : 0));;\n            if (allSuspend && allSuspend.length > 0) // added to drug chart and manually suspended \n            {\n              let comment = this.appService.prescriptionEvent.find(e => e.prescriptionid == allSuspend[0].prescription_id);\n              if (comment) {\n                dischargeSummaryComment = comment.comments;\n                dischargeSummarystatus = PrescriptionStatus.suspended;\n              }\n            }\n          }\n        }\n      }\n      return dischargeSummaryComment;\n    }\n  }\n}\n","<div class=\"pdfUseOnly\" *ngIf=\"!customTemplate\">\n  <div class=\"container\" #dischargeSummaryElement>\n    <!-- <img src=\"../../../assets/images/epma/line-chart.jpg\" width=\"200\" height=\"200\"> -->\n    <div class=\"row\">\n      <div class=\"col-7 text-center h5\">\n        <span class=\"fs-1\"> Discharge Summary</span>\n      </div>\n    </div>\n    <div class=\"patient-margin\">\n      <div class=\"row patient-details prescription-type\">\n        <div class=\"col-3 text-center\">\n         Name: <strong>{{appService.patientDetails.fullname}}</strong>\n        </div>\n        <div class=\"col-3 text-center\">\n          NHS Number: <strong>{{' ' + appService.patientDetails.nhsnumber + ' '}}</strong>\n        </div>\n        <div class=\"col-3 text-center\">\n\n        </div>\n      </div>\n      <div class=\"row patient-details prescription-type\">\n        <div class=\"col-3 text-center\">\n          DOB: <strong>{{' ' + appService.patientDetails.born + ' '}}</strong>\n        </div>\n        <div class=\"col-3 text-center\">\n          Hospital Number: <strong>{{' ' + appService.patientDetails.hospitalnumber + ' '}}</strong>\n        </div>\n        <div class=\"col-3 text-center\">\n        </div>\n      </div>\n      <div class=\"row patient-details prescription-type patient-details-margin\">\n        <div class=\"col-3 text-center\">\n          {{'Height: ' + appService.refHeightValue + ' ' + 'cms'}}\n        </div>\n        <div class=\"col-3 text-center\">\n          {{'Weight: ' + appService.refWeightValue + ' ' + 'kg'}}\n        </div>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"unChangedPres && unChangedPres.length\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> Unchanged </span></div>\n      </div>\n      <div class=\"prescription-space\" *ngFor=\"let unchanged of unChangedPres; let i = index\">\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <span class=\"prescription-type\"><strong>{{unchanged.__medications[0].name}}</strong></span>\n            <div *ngIf=\"appService.GetCurrentPosology(unchanged).frequency == 'protocol'\">\n\n              <!-- <span>Description: </span> -->\n              <div class=\"doseLabel\">Dose: </div>\n              <div class=\"dose\" *ngFor=\"let dse of unchanged.showDoses; let i = index\">\n                <span>Day {{i+1}} :</span> {{dse}}\n              </div>\n            </div>\n            <div *ngIf=\"appService.GetCurrentPosology(unchanged).frequency == 'variable'\">\n              <!-- <span>Description: </span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{unchanged.showDoses}}</span>\n              </div>\n            </div>\n            <div\n              *ngIf=\"(appService.GetCurrentPosology(unchanged).frequency !== 'protocol') && (appService.GetCurrentPosology(unchanged).frequency !== 'variable')\">\n              <!-- <span>Description:</span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{unchanged.showDoses}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"unchanged.comments\">\n              <span>Comments: </span>\n              <span>{{unchanged.comments}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </ng-container>\n    <ng-container *ngIf=\"changedPres && changedPres.length\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> Changed </span></div>\n      </div>\n      <div class=\"prescription-space\" *ngFor=\"let changed of changedPres; let i = index\">\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <span class=\"prescription-type\"><strong>{{changed.__medications[0].name}}</strong></span>\n            <div *ngIf=\"appService.GetCurrentPosology(changed).frequency == 'protocol'\">\n\n              <!-- <span>Description: </span> -->\n              <div class=\"doseLabel\">Dose: </div>\n              <div class=\"dose\" *ngFor=\"let dse of changed.showDoses; let i = index\">\n                <span>Day {{i+1}} :</span> {{dse}}\n              </div>\n            </div>\n            <div *ngIf=\"appService.GetCurrentPosology(changed).frequency == 'variable'\">\n              <!-- <span>Description: </span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{changed.showDoses}}</span>\n              </div>\n            </div>\n            <div *ngIf=\"(appService.GetCurrentPosology(changed).frequency !== 'protocol') && (appService.GetCurrentPosology(changed).frequency !== 'variable')\">\n              <!-- <span>Description:</span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{changed.showDoses}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"changed.comments\">\n              <span>Comments: </span>\n              <span>{{changed.comments}}</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"changed.reasonforediting\">\n              <span>Change Reason: </span>\n              <span>{{changed.reasonforediting}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"stoppedPres && stoppedPres.length\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> Stopped </span></div>\n      </div>\n      <div class=\"prescription-space\" *ngFor=\"let stopped of stoppedPres; let i = index\">\n\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-7\">\n            <span class=\"prescription-type\"><strong>{{stopped.__medications[0].name}}</strong></span>\n            <div *ngIf=\"appService.GetCurrentPosology(stopped).frequency == 'protocol'\">\n\n              <!-- <span>Description: </span> -->\n              <div class=\"doseLabel\">Dose: </div>\n              <div class=\"dose\" *ngFor=\"let dse of stopped.showDoses; let i = index\">\n                <span>Day {{i+1}} :</span> {{dse}}\n              </div>\n            </div>\n            <div *ngIf=\"appService.GetCurrentPosology(stopped).frequency == 'variable'\">\n              <!-- <span>Description: </span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{stopped.showDoses}}</span>\n              </div>\n            </div>\n            <div *ngIf=\"(appService.GetCurrentPosology(stopped).frequency !== 'protocol') && (appService.GetCurrentPosology(stopped).frequency !== 'variable')\">\n              <!-- <span>Description:</span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{stopped.showDoses}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"stopped.comments\">\n              <span>Comments: </span>\n              <span>{{stopped.comments}}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div>\n              <span>Reason : </span>\n              <span>{{GetDischargeSummaryMessage(stopped,'SUMNO','stopped')}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </ng-container>\n    <ng-container *ngIf=\"suspendedPres && suspendedPres.length\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> Suspended </span></div>\n      </div>\n      <div class=\"prescription-space\" *ngFor=\"let suspended of suspendedPres; let i = index\">\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <span class=\"prescription-type\"><strong>{{suspended.__medications[0].name}}</strong></span>\n            <div *ngIf=\"appService.GetCurrentPosology(suspended).frequency == 'protocol'\">\n\n              <!-- <span>Description: </span> -->\n              <div class=\"doseLabel\">Dose: </div>\n              <div *ngFor=\"let dse of suspended.showDoses; let i = index\">\n                <span class=\"dose\">Day {{i+1}} :</span> {{dse}}\n              </div>\n            </div>\n            <div *ngIf=\"appService.GetCurrentPosology(suspended).frequency == 'variable'\">\n              <!-- <span>Description: </span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{suspended.showDoses}}</span>\n              </div>\n            </div>\n            <div\n              *ngIf=\"(appService.GetCurrentPosology(suspended).frequency !== 'protocol') && (appService.GetCurrentPosology(suspended).frequency !== 'variable')\">\n              <!-- <span>Description:</span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{suspended.showDoses}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"suspended.comments\">\n              <span>Comments: </span>\n              <span>{{suspended.comments}}</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div>\n              <span>Reason : </span>\n              <span>{{GetDischargeSummaryMessage(suspended,'SUMNO','suspended')}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"newPres && newPres.length\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> New </span></div>\n      </div>\n      <div class=\"prescription-space\" *ngFor=\"let ne of newPres; let i = index\">\n\n        <div class=\"row\">\n          <div class=\"col-1\">\n            <span class='{{\"layers-container therapy-type \"}}'></span>\n          </div>\n          <div class=\"col-5\">\n\n            <span class=\"prescription-type\"><strong>{{ne.__medications[0].name}}</strong></span>\n            <div *ngIf=\"appService.GetCurrentPosology(ne).frequency == 'protocol'\">\n              <!-- <span>Description: </span> -->\n              <div class=\"doseLabel\">Dose: </div>\n              <div class=\"dose\" *ngFor=\"let dse of ne.showDoses; let i = index\">\n                <span>Day {{i+1}} :</span> {{dse}}\n              </div>\n            </div>\n            <div *ngIf=\"appService.GetCurrentPosology(ne).frequency == 'variable'\">\n              <!-- <span>Description: </span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{ne.showDoses}}</span>\n              </div>\n            </div>\n            <div *ngIf=\"(appService.GetCurrentPosology(ne).frequency !== 'protocol') && (appService.GetCurrentPosology(ne).frequency !== 'variable')\">\n              <!-- <span>Description:</span> -->\n              <div>\n                <span class=\"doseLabel\">Dose: </span>\n                <span class=\"dose\">{{ne.showDoses}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-1\">\n\n          </div>\n          <div class=\"col-5\">\n            <div *ngIf=\"ne.comments\">\n              <span>Comments: </span>\n              <span>{{ne.comments}}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"dischargeComments\">\n      <div class=\"row\">\n        <div class=\"col-12 card-header-pdf  different-prescriptions header-height\"><span> Discharge Notes </span></div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\">\n\n        </div>\n        <div class=\"col-5\">\n          <div class=\"dose prescription-space\">\n            <span>{{dischargeComments.notes}}</span>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\">\n\n        </div>\n        <div class=\"col-5\">\n          <div class=\"dose prescription-space float-left\" *ngIf=\"notesDisplayData?.length > 0\">\n            <span>{{notesDisplayData[0].modifiedon | date:\"dd-MMM-yyyy\"}}</span>&nbsp;&nbsp;\n            <span>{{notesDisplayData[0].modifiedby}}</span>\n          </div>\n          <div class=\"dose prescription-space float-left\" *ngIf=\"notesDisplayData?.length == 0\">\n            <span></span>&nbsp;&nbsp;\n            <span></span>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"row patient-details prescription-type doctor-details-margin\">\n      <div class=\"col-3 text-center\">\n      </div>\n      <div class=\"col-5 text-center\">\n      </div>\n      <div class=\"col-2 text-center\">\n        Prescribed by:\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"patient-margin margin-bottom table-dimensions\" *ngIf=\"customTemplate\" #dischargeSummaryElement>\n  <ng-container *ngTemplateOutlet=\"customTemplate\">\n\n  </ng-container>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-template-number',\n  templateUrl: './template-number.component.html',\n  styleUrls: ['./template-number.component.css']\n})\nexport class TemplateNumberComponent implements OnInit {\n  @Input() marType = 'empty';\n  headerLabelText = 'Enter Number of templates';\n  colFieldName = 'Number of Templates';\n  noOfTemplates = 1;\n  isTemplateNumber = true;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n    if (this.marType === 'active') {\n      this.headerLabelText = 'Enter number of days - Past Recorded Administration';\n      this.colFieldName = 'Days';\n    }\n  }\n\n  getTemplates() {\n    this.bsModalRef.content.saveDone(this.noOfTemplates);\n    this.bsModalRef.hide();\n  }\n\n  checkTemplateNumber(event) {\n    if (event.target.value > 50) {\n      this.isTemplateNumber = false;\n    } else {\n      this.isTemplateNumber = true;\n    }\n  }\n\n  checkDecimal(event: any) {\n\n    return event.charCode >= 48 && event.charCode <= 57;\n  }\n\n  cancel() {\n    this.bsModalRef.content.cancel();\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\" style=\"padding: 0.5rem 1rem; background-color: #E6E6E6\">\n  <h6 class=\"modal-title\" id=\"lblRecordWeight\">{{headerLabelText}}</h6>\n  <button type=\"button\" class=\"close\" (click)=\"cancel()\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"alert alert-light border border-secondary\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <label class=\"text-dark\">{{colFieldName}}</label>\n      </div>\n      <div class=\"col-8\">\n        <input type=\"number\" class=\"form-control\" [(ngModel)]=\"noOfTemplates\" min=\"1\"  step=\"1\" (keyup)=\"checkTemplateNumber($event)\" (keypress)=\"checkDecimal($event)\"/>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!noOfTemplates\">\n      <div class=\"col text-danger\">\n        Please enter a value greater than 0\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!isTemplateNumber\">\n      <div class=\"col text-danger\">\n        Templates should be less than 50\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <button type=\"button\" class=\"btn btn-info btn-block\"\n            (click)=\"getTemplates()\" [disabled]=\"!noOfTemplates || !isTemplateNumber\">Confirm</button>\n        </div>\n        <div class=\"col-sm-6\">\n          <button type=\"button\" class=\"btn btn-secondary btn-block\" (click)=\"cancel()\">Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n   name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n  transform(value: any): string {\n    if (value && isInteger(value))\n      return  \"(\" + numToWords(value).trim() + \")\";\n    else \n      return \"\";\n  }\n}\n\nconst isInteger = function(x: any) {\n   return x % 1 === 0;\n}\n\n\nconst arr = x => Array.from(x);\nconst num = x => Number(x) || 0;\nconst str = x => String(x);\nconst isEmpty = xs => xs.length === 0;\nconst take = n => xs => xs.slice(0,n);\nconst drop = n => xs => xs.slice(n);\nconst reverse = xs => xs.slice(0).reverse();\nconst comp = f => g => x => f (g (x));\nconst not = x => !x;\nconst chunk = n => xs =>\n  isEmpty(xs) ? [] : [take(n)(xs), ...chunk (n) (drop (n) (xs))];\n// numToWords :: (Number a, String a) => a -> String\nlet numToWords = n => {\n  let a = [\n    '', 'one', 'two', 'three', 'four',\n    'five', 'six', 'seven', 'eight', 'nine',\n    'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',\n    'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'\n  ];\n  let b = [\n    '', '', 'twenty', 'thirty', 'forty',\n    'fifty', 'sixty', 'seventy', 'eighty', 'ninety'\n  ];\n  let g = [\n    '', 'thousand', 'million', 'billion', 'trillion', 'quadrillion',\n    'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'\n  ];\n  // this part is really nasty still\n  // it might edit this again later to show how Monoids could fix this up\n  let makeGroup = ([ones,tens,huns]) => {\n    return [\n      num(huns) === 0 ? '' : a[huns] + ' hundred ',\n      num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n      a[tens+ones] || a[ones]\n    ].join('');\n  };\n  // \"thousands\" constructor; no real good names for this, i guess\n  let thousand = (group,i) => group === '' ? group : `${group} ${g[i]}`;\n  // execute !\n  if (typeof n === 'number') return numToWords(String(n));\n  if (n === '0')             return 'zero';\n  return comp (chunk(3)) (reverse) (arr(n))\n    .map(makeGroup)\n    .map(thousand)\n    .filter(comp(not)(isEmpty))\n    .reverse()\n    .join(' ');\n};","import { Timeline } from 'vis-timeline/standalone';\nexport class DrugChart {\n\tpublic timeline: Timeline\n\tpublic items: any\n\tpublic group: any\n\tpublic options: any\n\tpublic PRNArray: any\n}\nexport class Prescription {\n\tpublic prescription_id: string\n\tpublic correlationid: string\n\tpublic prescriptioncontext_id: string\n\tpublic indication: string\n\tpublic comments: string\n\tpublic heparin: number\n\tpublic heparinunit: string\n\tpublic prescriptionadditionalconditions_id: string\n\tpublic reminderdays: number\n\tpublic remindernotes: string\n\tpublic titration: boolean\n\tpublic titrationtype: string\n\tpublic targetinr: number\n\tpublic targetsaturation: number\n\tpublic oxygendevices_id: string\n\tpublic orderformtype: string\n\tpublic isinfusion: boolean\n\tpublic infusiontype_id: string\n\tpublic ismedicinalgas: boolean\n\tpublic prescriptionsource_id: string\n\tpublic hasbeenmodified: boolean\n\tpublic reasonforediting: string\n\tpublic lastmodifiedby: string\n\tpublic lastmodifiedon: any;\n\tpublic prescriptionstatus_id: string\n\tpublic epma_prescriptionevent_id: string\n\tpublic reasonforstopping: string\n\tpublic reasonforsuspending: string\n\tpublic allowsubstitution: boolean\n\tpublic substitutioncomments: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic createdon: any\n\tpublic createdby: string\n\tpublic linkedinfusionid: string;\n\tpublic titrationtargetmin: number;\n\tpublic titrationtargetmax: number;\n\tpublic titrationtargetunits: string;\n\tpublic titrationtypecode: string;\n\tpublic otherindications: string;\n\tpublic prescriptionsources: string;\n\tpublic dispensingfrom: string;\n\tpublic ismodifiedrelease: boolean;\n\tpublic isgastroresistant: boolean;\n\tpublic moatoip: boolean;\n\tpublic otherprescriptionsource: string\n\tpublic lastmodifiedfrom: any;\n\tpublic startdatetime: any;\n\tpublic printingrequired: any;\n\tpublic createdbyrole:string\n\tpublic lastmodifiedbyrole:string\n\tpublic oxygenadditionalinfo: string\n\tpublic isdeleted : boolean;\n\tpublic __customWarning: any;\n\tpublic __warningOverrideREQ: boolean;\n\tpublic __severityWarning: string\n\tpublic __routes: Array<Prescriptionroutes>\n\tpublic __posology: Posology[]\n\tpublic __medications: Array<Medication>\n\tpublic __editingprescription: Prescription\n\tpublic __therapydate: any\n\tpublic __editingreviewstatus: Prescriptionreviewstatus\n\tpublic __index: number\n\tpublic __initialreminder: Prescriptionreminders[]\n\tpublic __nursinginstructions: Array<NursingInstruction>;\n\tpublic __drugindications: any[]\n\tpublic __drugcodes: any[]\n\tpublic __basicGroup: string\n\tpublic __medicationsummary : Medicationsummary\n\tpublic __ignoreDuplicateWarnings: string\n\tpublic __completed:boolean\n\tpublic __completedOn: any;\n  \tpublic __SupplyRequests: any[];\n\tpublic __GpConnect:any\n\n}\n\nexport class Medicationsummary {\n\tpublic\tmedicationid:string\n\tpublic\tprescriptionid:string\n\tpublic\tdisplayname:string\n\tpublic\tdisplaydose:string\n\tpublic\tdisplayroute:string\n\tpublic\tdisplayquantity:string\n\tpublic\tdisplaystatus:string\n\tpublic\tiscontrolleddrug:boolean\n\tpublic  comments:string\n\tpublic prescriptionenddate: any\n\tpublic startdatetime: any;\n\tpublic protocoldose: Array<ProtocalDose> = [];\n\tpublic protocolmessage: any;\n\tpublic indication: any;\n\tpublic printingrequired: boolean\n}\n\nexport class ProtocalDose {\n\tpublic date: any\n\tpublic text: string\n\tpublic isShowDate: boolean\n}\nexport class Posology {\n\n\tpublic posology_id: string\n\tpublic correlationid: string\n\tpublic prescription_id: string\n\tpublic prescriptionstartdate: any\n\tpublic prescriptionenddate: any\n\tpublic frequency: string\n\tpublic frequencysize: number\n\tpublic infusiontypeid: string\n\tpublic infusionrate: number\n\tpublic infusionduration: number\n\tpublic daysofweek: string\n\tpublic dosingdaysfrequency: string\n\tpublic dosingdaysfrequencysize: number\n\tpublic prescriptionduration: string\n\tpublic prescriptiodurationsize: number\n\tpublic repeatlastday: boolean\n\tpublic repeatprotocoltimes: number\n\tpublic doseperkg: number\n\tpublic dosepersa: number\n\tpublic antimicrobialstartdate: any\n\tpublic doctorsorder: boolean\n\tpublic prn: boolean\n\tpublic isadditionaladministration: boolean\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic __dose: Array<Dose>\n\tpublic classification: string\n\tpublic dosetype: string\n\tpublic repeatlastdayuntil: any\n\tpublic totalinfusionvolume: number\n\tpublic totalquantity: number\n\tpublic infusionrateunits: string;\n\tpublic maxnumofdosesperday: number;\n\tpublic prnmaxdose: string;\n\tpublic totalquantitytext: string;\n\tpublic titration: boolean\n\tpublic titrationtype: string\n\tpublic titrationtargetmin: number;\n\tpublic titrationtargetmax: number;\n\tpublic titrationtargetunits: string;\n\tpublic titrationtypecode: string;\n\tpublic iscurrent: boolean;\n\tpublic infusiondoserate: number;\n\tpublic infusiondoserateunits: string;\n  \tpublic concentration: string;\n\tpublic referenceweighttype: string;\n\tpublic doseperkgrangemax: number;\n\tpublic dosepersarangemax: number;\n}\n\nexport class Dose {\n\tpublic dose_id: string\n\tpublic correlationid: string\n\tpublic prescription_id: string\n\tpublic posology_id: string\n\tpublic dosestartdatetime: any\n\tpublic doseenddatatime: any\n\tpublic strengthneumerator: number\n\tpublic strengthdenominator: number\n\tpublic strengthneumeratorunit: string\n\tpublic strengthdenominatorunit: string\n\tpublic dosesize: string\n\tpublic doseunit: string\n\tpublic dosemeasure: string\n\tpublic descriptivedose: string\n\tpublic infusionrate: number\n\tpublic infusionduration: number\n\tpublic titration: boolean\n\tpublic titrateddoseconfirmedon: any\n\tpublic titrateddoseconfirmedby: string\n\tpublic lastmodifiedby: string\n\tpublic isadditionaladministration: boolean\n\tpublic additionaladministrationcomment: string;\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic dosetype: string\n\tpublic continuityid: string\n\tpublic isbolus: boolean\n\tpublic strengthneumeratorrangemax: number\n\tpublic strengthdenominatorrangemax: number\n\tpublic dosesizerangemax: number\n\tpublic dosestrength: number;\n\tpublic dosestrengthunits: string;\n\tpublic dosestrengthrangemax: number;\n\tpublic __doseEvent: Array<DoseEvents>\n\tpublic infusiondoserate: number;\n\tpublic infusiondoserateunits: string;\n\tpublic referenceweighttype: string;\n\tpublic doseperkg:any;\n\tpublic dosepersa:any;\n\tpublic doseperkgrangemax: any;\n\tpublic dosepersarangemax: any;\n}\n\nexport class Medicationadministration {\n\n\tpublic medicationadministration_id: string\n\tpublic site: string\n\tpublic method: string\n\tpublic dose_id: string\n\tpublic prescription_id: string\n\tpublic posology_id: string\n\tpublic administrationstartime: any\n\tpublic administrationendtime: any\n\tpublic administredby: string\n\tpublic planneddatetime: any\n\tpublic administeredstrengthneumerator: number\n\tpublic administeredstrengthneumeratorunits: string\n\tpublic administeredstrengthdenominator: number\n\tpublic administeredstrengthdenominatorunits: string\n\tpublic plannedstrengthneumerator: number\n\tpublic plannedstrengthneumeratorunits: string\n\tpublic plannedstrengthdenominator: number\n\tpublic plannedstrengthdenominatorunits: string\n\tpublic administreddosesize: string\n\tpublic administreddoseunit: string\n\tpublic administreddosemeasure: string\n\tpublic planneddosesize: string\n\tpublic planneddoseunit: string\n\tpublic planneddosemeasure: string\n\tpublic plannedinfustionrate: number\n\tpublic administredinfusionrate: number\n\tpublic comments: string\n\tpublic adminstrationstatus: string\n\tpublic adminstrationstatusreason: string\n\tpublic adminstrationstatusreasontext: string\n\tpublic requestresupply: boolean\n\tpublic doctorsordercomments: string\n\tpublic witness: string\n\tpublic substituted: boolean\n\tpublic administrationdevice: string\n\tpublic administrationsite: string\n\tpublic medication_id: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic logicalid: string\n\tpublic batchnumber: string\n\tpublic expirydate: any\n\tpublic prescriptionroutesid: string\n\tpublic routename: string;\n\tpublic planneddosesizerangemax: string\n\tpublic levelofselfadmin: string;\n\tpublic administereddescriptivedose: string;\n\tpublic _recordstatus: number;\n\tpublic correlationid: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic __administerMedication: Array<AdministerMedication>;\n\tpublic __witnessName: string;\n\tpublic isadhoc : boolean;\n\tpublic isdifferentproductadministered : boolean;\n\tpublic isenterinerror : boolean\n\tpublic isinfusionkitchange:boolean\n}\n\nexport class Medication {\n\tpublic medication_id: string;\n\tpublic correlationid: string\n\tpublic prescription_id: string;\n\tpublic name: string;\n\tpublic genericname: string;\n\tpublic medicationtype: string;\n\tpublic displayname: string;\n\tpublic form: string;\n\tpublic formcode: string;\n\tpublic strengthneumerator: number;\n\tpublic strengthdenominator: number;\n\tpublic strengthneumeratorunit: string;\n\tpublic strengthdenominatorunit: string;\n\tpublic doseformunits: string;\n\tpublic doseformsize: number;\n\tpublic doseformunitofmeasure: string;\n\tpublic bnf: string;\n\tpublic defineddailydose: string;\n\tpublic doseform: string;\n\tpublic doseperweight: string;\n\tpublic doseperweightunit: string;\n\tpublic roundingfactor: number;\n\tpublic actgroupcode: string;\n\tpublic actgroupname: string;\n\tpublic orderformtype: string;\n\tpublic maxdoseperdayunit: string;\n\tpublic maxdoseperday: number;\n\tpublic maxdoseperweek: number;\n\tpublic maxdoseperweekunit: string;\n\tpublic titrationtype: string;\n\tpublic producttype: string;\n\tpublic isformulary: boolean;\n\tpublic isblacktriangle: boolean;\n\tpublic iscontrolled: boolean;\n\tpublic iscritical: boolean;\n\tpublic isbloodproduct: boolean;\n\tpublic markedmodifier: string;\n\tpublic modifiedreleasehrs: number;\n\tpublic reviewreminderdays: number;\n\tpublic isprimary: boolean;\n\tpublic person_id: string;\n\tpublic encounter_id: string;\n\tpublic classification: string;\n\tpublic __ingredients: Array<Medicationingredients>;\n\tpublic __codes: Array<Medicationcodes>;\n\tpublic isclinicaltrial: boolean;\n\tpublic isexpensive: boolean;\n\tpublic isunlicenced: boolean;\n\tpublic ishighalert: boolean;\n\tpublic customgroup: string;\n\tpublic isantimicrobial: boolean;\n}\n\nexport class Medicationcodes {\n\tpublic medicationcodes_id: string\n\tpublic correlationid: string\n\tpublic medication_id: string\n\tpublic code: string\n\tpublic terminology: string\n}\n\nexport class Medicationingredients {\n\tpublic medicationingredients_id: string\n\tpublic correlationid: string\n\tpublic medication_id: string\n\tpublic name: string\n\tpublic displayname: string\n\tpublic strengthneumerator: number\n\tpublic strengthdenominator: string\n\tpublic strengthneumeratorunit: string\n\tpublic strengthdenominatorunit: string\n\tpublic isprimaryingredient: boolean\n}\n\nexport class Prescriptionroutes {\n\n\tpublic prescriptionroutes_id: string\n\tpublic correlationid: string\n\tpublic prescription_id: string\n\tpublic medication_id: string\n\tpublic routecode: string\n\tpublic route: string\n\tpublic routetype: string\n\tpublic isdefault: boolean\n\tpublic isunlicensed: boolean\n}\n\nexport class Medicationroutes {\n\n\tpublic medicationroutes_id: string\n\tpublic correlationid: string\n\tpublic prescription_id: string\n\tpublic medication_id: string\n\tpublic routecode: string\n\tpublic route: string\n\tpublic routetype: string\n\tpublic isdefault: boolean\n\tpublic isunlicensed: boolean\n}\n\nexport class MetaPrescriptioncontext {\n\n\tpublic prescriptioncontext_id: string\n\tpublic context: string\n}\n\nexport class MetaPrescriptionstatus {\n\tpublic prescriptionstatus_id: string\n\tpublic status: string\n\n}\nexport class MetaReviewstatus {\n\tpublic reviewstatus_id: string\n\tpublic status: string\n\tpublic description: string\n}\n\nexport class Oxygendevices {\n\toxygendevices_id: string\n\tname: string\n\tdescription: string\n\tactive: boolean\n\tcode: string\n}\n\nexport class MetaPrescriptionduration {\n\tpublic prescriptionduration_id: string\n\tpublic duration: string\n\tpublic displayorder: number\n}\n\nexport class MetaPrescriptionadditionalcondition {\n\tpublic prescriptionadditionalconditions_id: string\n\tpublic additionalcondition: string\n\n}\n\n\nexport class DoseEvents {\n\n\tpublic doseevents_id: string\n\tpublic dose_id: string\n\tpublic posology_id: string\n\tpublic startdatetime: any\n\tpublic eventtype: string\n\tpublic dosedatetime: any\n\tpublic comments: string\n\tpublic iscancelled: boolean\n\tpublic logicalid: string\n\tpublic _sequenceid: any\n\n\tpublic titrateddosesize: string\n\tpublic titrateddoseunit: string\n\tpublic titratedstrengthneumerator: number\n\tpublic titratedstrengthneumeratorunits: string\n\tpublic titratedstrengthdenominator: number\n\tpublic titratedstrengthdenominatorunits: string\n\tpublic titrateddescriptivedose: string\n\tpublic grouptitration: boolean\n\tpublic titrateduntildatetime: any\n\tpublic prescription_id: string;\n\tpublic _recordstatus: number;\n\tpublic createdby: any\n\tpublic modifiedby: any\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic correlationid: string\n}\n\nexport class InfusionEvents {\n\n\tpublic infusionevents_id: string\n\tpublic dose_id: string\n\tpublic posology_id: string\n\tpublic eventtype: string\n\tpublic planneddatetime: any\n\tpublic eventdatetime: any\n\tpublic comments: string\n\tpublic logicalid: string\n\tpublic _sequenceid: any;\n\tpublic administeredby: string\n\tpublic modifiedby: string\n\tpublic batchnumber: string\n\tpublic expirydate: any\n\tpublic _recordstatus: number;\n\tpublic correlationid: string\n\tpublic createdby: any\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic __administredinfusionrate: number;\n\tpublic __administreddosesize: string;\n\tpublic __administeredstrengthneumerator: number;\n\tpublic __administeredstrengthneumeratorunits: string;\n\tpublic __administeredstrengthdenominator: number;\n\tpublic __administeredstrengthdenominatorunits: string;\n\tpublic __witnessName :string;\n}\n\nexport class PrescriptionSource {\n\tpublic prescriptionsource_id: string\n\tpublic source: string\n\tpublic description: string\n\tpublic displayname: string\n}\n\nexport class Orderset {\n\tpublic epma_orderset_id: string\n\tpublic prescriptionordersettype_id: string\n\tpublic ordersetname: string\n\tpublic owner: string\n\tpublic person_id: string\n\tpublic defined_criteria: string\n\tpublic inclusive_value: number\n\tpublic exclusive_value: number\n\tpublic groupsauthorizedtoview: string\n\tpublic criteriajson:string;\n}\n\nexport class OrdersetPrescription {\n\tpublic epma_ordersetprescription_id: string\n\tpublic prescription_id: string\n\tpublic ordersetid: string\n}\n\nexport class FormularyDescendent {\n\tproductCode: string;\n\tproductName: string;\n\tproductType: string;\n\tproductDescendents: Array<FormularyDescendent>;\n}\n\n\nexport class AdministerMedication {\n\tpublic administermedication_id: string;\n\tpublic medicationadministrationid: string;\n\tpublic name: string;\n\tpublic genericname: string;\n\tpublic medicationtype: string;\n\tpublic displayname: string;\n\tpublic form: string;\n\tpublic formcode: string;\n\tpublic strengthneumerator: number;\n\tpublic strengthdenominator: number;\n\tpublic strengthneumeratorunit: string;\n\tpublic strengthdenominatorunit: string;\n\tpublic doseformunits: string;\n\tpublic doseformsize: number;\n\tpublic doseformunitofmeasure: string;\n\tpublic bnf: string;\n\tpublic defineddailydose: string;\n\tpublic doseform: string;\n\tpublic doseperweight: string;\n\tpublic doseperweightunit: string;\n\tpublic roundingfactor: number;\n\tpublic actgroupcode: string;\n\tpublic actgroupname: string;\n\tpublic orderformtype: string;\n\tpublic maxdoseperdayunit: string;\n\tpublic maxdoseperday: number;\n\tpublic maxdoseperweek: number;\n\tpublic maxdoseperweekunit: string;\n\tpublic titrationtype: string;\n\tpublic producttype: string;\n\tpublic isformulary: boolean;\n\tpublic isblacktriangle: boolean;\n\tpublic iscontrolled: boolean;\n\tpublic iscritical: boolean;\n\tpublic markedmodifier: string;\n\tpublic modifiedreleasehrs: number;\n\tpublic reviewreminderdays: number;\n\tpublic isprimary: boolean;\n\tpublic personid: string;\n\tpublic encounterid: string;\n\tpublic classification: string;\n\tpublic __ingredients: Array<AdministerMedicationingredients>;\n\tpublic __codes: Array<AdministerMedicationcodes>;\n\tpublic isclinicaltrial: boolean;\n\tpublic isexpensive: boolean;\n\tpublic isunlicenced: boolean;\n\tpublic ishighalert: boolean;\n\tpublic customgroup: string;\n\tpublic _index: number;\n\tpublic correlationid: string\n\tpublic administreddosesize: string\n\tpublic administreddoseunit: string\n\tpublic administeredstrengthneumerator: number\n\tpublic administeredstrengthneumeratorunits: string\n\tpublic administeredstrengthdenominator: number\n\tpublic administeredstrengthdenominatorunits: string\n\tpublic administredinfusionrate: number\n\tpublic administereddescriptivedose: string\n\tpublic batchnumber: string\n\tpublic expirydate: any\n\tpublic dosetype : string\n}\n\nexport class AdministerMedicationcodes {\n\tpublic administermedicationcodes_id: string\n\tpublic administermedicationid: string;\n\tpublic medicationadministrationid: string;\n\tpublic code: string\n\tpublic terminology: string\n\tpublic correlationid: string\n}\n\nexport class AdministerMedicationingredients {\n\tpublic administermedicationingredients_id: string\n\tpublic administermedicationid: string;\n\tpublic medicationadministrationid: string;\n\tpublic name: string\n\tpublic displayname: string\n\tpublic strengthneumerator: number\n\tpublic strengthdenominator: string\n\tpublic strengthneumeratorunit: string\n\tpublic strengthdenominatorunit: string\n\tpublic isprimaryingredient: boolean\n\tpublic correlationid: string\n}\n\nexport class ComplianceAid {\n\tpublic complianceaid_id: string;\n\tpublic complianceaid_name: string;\n}\n\nexport class PrescriptionMedicaitonSupply {\n\tpublic epma_prescriptionmedicaitonsupply_id: string;\n\tpublic prescriptionid: string;\n\tpublic prescribedmedicationid: string;\n\tpublic selectedproductcode: string;\n\tpublic selectproductcodetype: string;\n\tpublic availablequantity: string;\n\tpublic quantityunits: string;\n\tpublic complianceaid: string;\n\tpublic ownsupplyathome: boolean;\n\tpublic resupplyfrom: string;\n\tpublic lastmodifiedby: string;\n\tpublic updatesouce: string;\n\tpublic noofdays: number;\n\tpublic person_id: string;\n\tpublic encounter_id: string;\n\tpublic quantityentrydate: any;\n\tpublic createdon: any;\n\tpublic createdby: any;\n\tpublic modifiedon: any;\n\n}\n\nexport class PrescriptionEvent {\n\tpublic epma_prescriptionevent_id: string\n\tpublic prescriptionid: string\n\tpublic prescriptionstatusid: string\n\tpublic datetime: any\n\tpublic createdby: string\n\tpublic comments: string\n\tpublic correlationid: string\n\tpublic person_id: string;\n\tpublic encounter_id: string;\n\tpublic createdbyrole:string;\n}\n\n\nexport class SupplyRequest {\n\tpublic epma_supplyrequest_id: string;\n\tpublic prescription_id: string;\n\tpublic personid: string;\n\tpublic encounterid: string;\n\tpublic medication_id: string;\n\tpublic selectedproductcode: string;\n\tpublic selectproductcodetype: string;\n\tpublic requeststatus: string;\n\tpublic requestedby: string;\n\tpublic lastmodifiedby: string;\n\tpublic requestednoofdays: number;\n\tpublic requestquantity: string;\n\tpublic requestedquantityunits: string;\n\tpublic requestedon: any;\n\tpublic daterequired: any;\n\tpublic labelinstructiosrequired: boolean;\n\tpublic additionaldirections: string;\n\tpublic isformulary: boolean;\n\tpublic othercommentsnf: string;\n\tpublic ordermessage: string;\n\tpublic suppliedquantity: string;\n\tpublic suppliedquantityunits: string;\n\tpublic lastmodifiedon: any;\n\tpublic fulfilledon: any;\n\tpublic selectedproductname: string;\n\tpublic route: any;\n\tpublic indication: any;\n\tpublic otherindication: string;\n\tpublic licenseauthority: string;\n\tpublic marketingauthorisation: string;\n\tpublic othercountry: string;\n\tpublic othercountrytext: string;\n\tpublic durationoftreatment: string;\n\tpublic indicationinuk: string;\n\tpublic patientownsupply: string;\n\tpublic patientownsupplyother: string;\n\tpublic specifyformulary: string;\n\tpublic reasonforprescribingnonformulary: string;\n\tpublic reasonfornotprescribingformulary: string;\n\tpublic costofmedicine: string;\n\tpublic comment:string;\n}\n\n\nexport class Prescriptionnursinginstructions {\n\n\tpublic epma_prescriptionnursinginstructions_id: string;\n\tpublic prescription_id: string;\n\tpublic medication_id: string;\n\tpublic instructions: string;\n\tpublic createdby: string;\n}\n\nexport class Prescriptionreviewstatus {\n\n\tpublic epma_prescriptionreviewstatus_id: string\n\tpublic person_id: string\n\tpublic prescription_id: string\n\tpublic precriptionedited: boolean\n\tpublic prescriptionstatuschange: boolean\n\tpublic epma_prescriptionevent_id: string;\n\tpublic modifiedby: string\n\tpublic modifiedon: any\n\tpublic modifieddatetime: any\n\tpublic reviewcomments: string\n\tpublic status: string\n\tpublic oldcorrelationid: string\n\tpublic newcorrelationid: string\n\tpublic __oldprescriptiondata: any;\n\tpublic __newprescriptiondata: any;\n\tpublic __isprescriptionevent: any;\n\tpublic __prescriptionEventStatus: string;\n\n}\n\nexport class Prescriptionreminders {\n\n\tpublic epma_prescriptionreminders_id: string\n\tpublic prescription_id: string\n\tpublic medication_id: string\n\tpublic personid: string;\n\tpublic encounterid: string;\n\tpublic activationdatetime: any\n\tpublic message: string\n\tpublic isacknowledged: boolean\n\tpublic ackmsg: string\n\tpublic acknowledgedby: string\n\tpublic acknowledgedon: any\n\tpublic lastmodifiedby: string\n\tpublic lastmodifiedon: any\n\tpublic isackmandatory: boolean\n\tpublic activationinhours: string\n\tpublic issystem: boolean\n\tpublic isivtooral: boolean\n\tpublic ackcomments: string\n\tpublic ackstatus: string\t\n\tpublic remindertype: number\n\tpublic repeattype: string\n\tpublic repeatsize: number\n\tpublic enddatetime: any\n\tpublic createdby:string\n\tpublic createdon:any\n\tpublic __calculatedactivationdatetime: any\n\tpublic __noactivationdatetime: any\n\tpublic __logicalid:string;\n\tpublic __issamereminder:boolean;\n\tpublic __showSpinner : boolean;\n}\nexport class Remindersack{\n\tpublic  epma_remindersack_id : string\n\tpublic  epma_prescriptionreminders_id :string\n\tpublic  logicalid:string\n\tpublic  acknowledgedby:string\n\tpublic  acknowledgedon:any\n\tpublic  acknowledgecomments:string\t\n\tpublic  ackstatus: string\n\tpublic  plandatetime : any\t \n\tpublic  encounter_id:string;\n\tpublic  person_id: string;\n\tpublic  prescription_id: string\n\tpublic  __remindertext: string;\n\tpublic  __lastmodifiedby: any;\n\t}\nexport class Epma_Medsonadmission {\n\tpublic epma_medsonadmission_id: string\n\tpublic createdby: string\n\tpublic notes: string\n\tpublic encounterid: string\n\tpublic person_id: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic iscomplete: boolean\n\tpublic noteshasaddinfo: boolean\n\tpublic action: string\n\tpublic modifiedby: string\n\n}\n\nexport class Epma_Dischargesummarry {\n\tpublic epma_dischargesummarry_id: string\n\tpublic createdby: string\n\tpublic notes: string\n\tpublic encounterid: string\n\tpublic person_id: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic iscomplete: boolean\n\tpublic noteshasaddinfo: boolean\n\tpublic action: string\n\tpublic modifiedby: string\n\n}\n\nexport class Epma_Medsondischarge {\n\n\tpublic epma_medsondischarge_id: string\n\tpublic createdby: string\n\tpublic notes: string\n\tpublic encounterid: string\n\tpublic person_id: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic iscomplete: boolean\n\tpublic noteshasaddinfo: boolean\n\tpublic action: string\n\tpublic modifiedby: string\n\n}\n\nexport class Epma_Moaprescriptions {\n\n\tpublic epma_moaprescriptions_id: string\n\tpublic prescription_id: string\n\tpublic epma_medsonadmission_id: string\n\tpublic notes: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n\n}\n\nexport class Epma_Modprescriptions {\n\tpublic epma_modprescriptions_id: string\n\tpublic prescription_id: string\n\tpublic epma_medsondischarge_id: string\n\tpublic notes: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n}\n\n\nexport class PrescriptionIndication {\n\tpublic code: string\n\tpublic indication: string\n\tpublic islicensed: boolean\n}\n\nexport class Medreconciliation {\n\n\tpublic epma_medreconciliation_id: string\n\tpublic encounter_id: string\n\tpublic createdby: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic modifiedby: string\n\tpublic comments: string\n\tpublic role: string\n\tpublic status: string;\n\tpublic reviewstatus: string;\n}\n\nexport class NursingInstruction {\n\tconstructor(public date?: any,\n\t\tpublic category?: string,\n\t\tpublic instruction?: string\n\t) {\n\t}\n}\nexport class AdministrationWitness {\n\tpublic epma_administrationwitness_id: string\n\tpublic medicationadministration_id: string\n\tpublic dose_id: string\n\tpublic logicalid: string\n\tpublic firstname: string\n\tpublic lastname: string\n\tpublic email: string\n\tpublic accountname: string\n\tpublic displayname: string\n\tpublic witnesscomments: string\n\tpublic witnessdatetime: any\n\tpublic administredby: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic correlationid: string\n}\n\nexport class Bannerwarningoverrides {\n\n\tpublic epma_bannerwarningoverrides_id: string\n\tpublic person_id: string\n\tpublic encounter_id: string\n\tpublic warninggroup: string\n\tpublic warningheader: string\n\tpublic warningdetail: string\n\tpublic dismissedon: any\n\tpublic dismissedby: string\n\tpublic dismissreason: string\n\t//helper properties\n\n\tpublic __warningcount: number;\n\tpublic __dismissmessage: string;\n\tpublic __dismissmessageerror: boolean;\n\tpublic __canbedismissed: boolean;\n\tpublic __dismissreasonrequired: boolean;\n\tpublic __canberesolved: boolean;\n\tpublic __resolvemodule: string;\n\tpublic __isdismissed: boolean;\n\n\n}\nexport class Outpatientprescriptions {\n\n\tpublic epma_outpatientprescriptions_id: string;\n\tpublic prescriptiondate: any;\n\tpublic createdon: any;\n\tpublic createdby: string;\n\tpublic modifiedon: any\n\tpublic modifiedby: string;\n\tpublic locationtext: string;\n\tpublic locationcode: string;\n\tpublic prescriber: string;\n\tpublic person_id: string;\n\tpublic encounter_id: string;\n\tpublic prescriptiontype: string;\n\tpublic prescriptioncategory: string;\n\tpublic dispensingto: string;\n\tpublic createdbyrole:string;\n\tpublic modifiedbyrole:string;\n\tpublic prescriberrole:string;\n\tpublic deletedcomments:string;\n\tpublic isdeleted : boolean;\n}\nexport class Opprescriptiontherapies {\n\n\tpublic epma_opprescriptiontherapies_id: string;\n\tpublic epma_outpatientprescriptions_id: string\n\tpublic prescription_id: string;\n\tpublic notes: string;\n\tpublic person_id: string;\n\tpublic encounter_id: string;\n}\n\nexport class DSMedSupplyRequiredStatus {\n\n\tpublic epma_dsmedsupplyrequiredstatus_id: string;\n\tpublic prescription_id: string;\n\tpublic reason: string;\n\tpublic otherreason: string;\n\tpublic encounter_id: string;\n\tpublic person_id: string;\n\tpublic status: string;\n}\n\nexport class SupplyRequestMedications {\n\n\tpublic epma_supplyrequestmedications_id: string;\n\tpublic prescription_id: string;\n\tpublic productname: string;\n\tpublic productcode: string;\n\tpublic producttype: string;\n\tpublic encounter_id: string;\n\tpublic person_id: string;\n\tpublic epma_supplyrequest_id: string;\n}\n\nexport class Opnotes {\n\n\tpublic epma_opnotes_id: string;\n\tpublic encounter_id: string;\n\tpublic person_id: string;\n\tpublic notes: string;\n\tpublic createdon: string;\n\tpublic modifiedon: string;\n\tpublic createdby: string;\n\tpublic modifiedby: string;\n\tpublic epma_outpatientprescriptions_id: string;\n}\nexport class EmailModel {\n\tpublic emailFrom: string;\n\tpublic fromName: string;\n\tpublic Username: string;\n\n\tpublic password: string;\n\n\tpublic emailTo: any;\n\n\tpublic subject: string;\n\n\tpublic body: string;\n\n}\n\nexport class PersonAwayPeriod {\n\n\tpublic epma_personawayperiod_id: string\n\tpublic awayfrom: any;\n\tpublic awayto: any;\n\tpublic encounter_id: string;\n\tpublic person_id: string;\n\tpublic awayreason: string\n\tpublic createdby: string\n\tpublic modifiedby: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n\tpublic comments: any\n\tpublic isenabled: boolean\n}\nexport class MetaComplianceAid {\n\tpublic complienceaid_id: string\n\tpublic complienceaid_name: string\n\n}\n\nexport class NursingInstructions {\n\n\tpublic epma_nursinginstructions_id: string\n\tpublic nursinginstructionstext:string;\n\tpublic encounter_id: string;\n\tpublic prescription_id :string;\n\tpublic person_id: string;\n\tpublic createdby: string\n\tpublic modifiedby: string\n\tpublic createdon: any\n\tpublic modifiedon: any\n}","\n\n\nexport class WarningService {\n    public encouterId: string;\n    public personId: string;\n    public newWarningsStatus: boolean;\n    public existingWarningsStatus: boolean;\n    public showExistingWarnings: boolean;\n    public showNewWarnings: boolean;\n    public loader: boolean;\n    public context: WarningContext;\n\n    resetWarningService() {\n\n    }\n\n    GetExistingWarnings(refreshfromdb: boolean, cb) {\n    }\n    RefreshCurrentMedicationWarnings(CurrentPrescriptions, patientInfo, cb) {\n    }\n    UpdateOverrideMsg(comments, cb) {\n    }\n    GetNewWarnings(ProspectivePrescriptions, CurrentPrescriptions, patientInfo, cb, isEdit = false) {\n    }\n    CommitNewWarningsToDB(cb) {\n    }\n    SetExistingWarningStatus() {\n    }\n    SetNewWarningStatus() {\n    }\n    ClearNewWarnings() {\n\n    }\n}\n\nexport class WarningContexts {\n    public contexts: WarningService[] = [];\n    public encounterId;\n    public personId;\n\n\n    public GetWarningsInstanceWithCreate(context: WarningContext | string) {\n    }\n    public GetWarningsInstance(context: WarningContext | string): any {\n\n    }\n}\n\nexport enum WarningContext {\n    [\"ip\"] = \"ip\",\n    [\"mod\"] = \"mod\",\n    [\"op\"] = \"op\"\n}\nexport class PatientInfo {\n    public age: number\n    public allergens: Allergens[]\n    public conditions: Conditions[]\n    public bsa: number\n    public gender: number\n    public height: number\n    public weight: number\n}\n\nexport class Allergens {\n    public uname: string\n    public type: number\n    public code: string\n}\nexport class Conditions {\n    public uname: string\n    public type: number\n    public code: string\n}","export class Allergyintolerance {\n    public allergyintolerance_id: string\n    public person_id: string\n    public encounter_id: string\n    public causativeagentcodesystem: string\n    public causativeagentcode: string\n    public causativeagentdescription: string\n    public clinicalstatusvalue: string\n    public clinicalstatusby: string\n    public cliinicialstatusdatetime: any\n    public category: string\n    public criticality: string\n    public reportedbyname: string\n    public reportedbydatetime: any\n    public verificationstatus: string\n    public assertedby: string\n    public asserteddatetime: any\n    public allergynotes: string\n    public manifestationnotes: string\n    public onsetdate: any\n    public enddate: any\n    public lastoccurencedate: any\n    public recordedby: string\n    public recordeddatetime: any\n    public displaywarning: string\n    public allergyconcept: string\n    public reactionconcepts: string\n    public reportedbygroup: string\n    public reactiontext: string\n}\n\nexport class Personwarningupdate {\n\n    public epma_personwarningupdate_id: string\n    public person_id: string\n    public encounter_id: String\n    public weight: number\n    public height: number\n    public bsa: number\n    public allergens: any\n    public warningcontextid: string\n    public conditions:any\n}\n","export class Encounter {\n  person_id: string;\n  encounter_id: string;\n  admitdatetime: Date;\n  dischargedatetime: Date;\n  displayText: string;\n  sortdate: Date;\n  defaultopclinicname: string;\n  patienttypecode: string;\n  patienttypetext: string;\n}\n\nexport class TimelineZoomLevel {\n  start: any;\n  end: any;\n  animation: boolean = false;\n}\n","import { Subject } from 'rxjs';\n\n\nexport class filter {\n  filterClause: string[];\n\n  constructor(c: any) {\n    this.filterClause = c;\n  }\n}\nexport class filters {\n  filters: filter[];\n\n  constructor\n    () {\n    this.filters = [];\n  }\n\n}\n\nexport class filterparam {\n  paramName: string;\n  paramValue: string;\n\n  constructor(name: string, value: string) {\n    this.paramName = name;\n    this.paramValue = value;\n  }\n}\n\nexport class filterParams {\n  filterparams: filterparam[];\n\n  constructor() {\n    this.filterparams = [];\n  }\n}\n\nexport class selectstatement {\n  selectstatement: string;\n\n  constructor(selectstatement: string) {\n    this.selectstatement = selectstatement;\n  }\n}\n\n\nexport class orderbystatement {\n  ordergroupbystatement: string;\n\n  constructor(orderbystatement: string) {\n    this.ordergroupbystatement = orderbystatement;\n  }\n}\nexport class action {\n  objecttype: string;\n  roleid: string;\n  rolename: string;\n  actionname: string;\n  actiondescription: string;\n  isendpoint: boolean;\n\n}\n\nexport class DataContract {\n  personId: string\n  apiService: any\n  unload: Subject<any>\n  moduleAction: Subject<any>;\n  additionalInfo: [any]\n}\n\n\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AppService } from './app.service';\nimport { Observable, firstValueFrom, from } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApirequestService {\n  sequencenumber: string = null;\n  constructor(private httpClient: HttpClient, public authService: AuthenticationService, private appService: AppService) {\n  }\n\n\n  public SynchronousPost(endpoint, synapsenamespace, synapseentityname, postdata, sequence, sequenceoperation): Observable<any> {\n    let data = new SynchronusPostData();\n    data.endpoint = endpoint;\n    data.modulename = this.appService.modulename;\n    data.person_id = this.appService.personId;\n    data.postdata = postdata;\n    data.synapseentityname = synapseentityname;\n    data.synapsenamespace = synapsenamespace;\n    data.version = this.appService.dataversion;\n\n    if (environment.production) {\n      return from(this.postRequest(this.appService.baseURI + \"/SynchronousPost\", JSON.stringify(data)));\n    }\n    else\n      return from(this.authService.getToken().then((token) => { return this.callApiPost(token, this.appService.baseURI + \"/SynchronousPost\", JSON.stringify(data)); }));\n  }\n\n  public getRequest(uri: string): Observable<any> {\n    if (environment.production) {\n      return from(this.appService.apiService.getRequest(uri));\n    }\n    else\n      return from(this.authService.getToken().then((token) => { return this.callApiGet(token, uri); }));\n  }\n\n  public postRequest(uri: string, body: any, synchronouspost = true, sequence = false, sequenceoperation = \"\"): Observable<any> {\n\n    if (!uri.includes(\"PostObject\")) {\n      synchronouspost = false;\n    }\n    if (synchronouspost) {\n      if (uri.endsWith(\"PostObjectsInTransaction\")) {\n        return from(this.SynchronousPost(\"PostObjectsInTransaction\", null, null, body, sequence, sequenceoperation));\n      }\n      if (uri.includes(\"PostObjectArray\")) {\n        let x = uri.split('?')[1]\n        let y = x.split('&');\n        let namespace = y[0].split(\"=\")[1];\n        let entityname = y[1].split(\"=\")[1];\n        return from(this.SynchronousPost(\"PostObjectArray\", namespace, entityname, body, sequence, sequenceoperation));\n      }\n      else {\n        let x = uri.split('?')[1]\n        let y = x.split('&');\n        let namespace = y[0].split(\"=\")[1];\n        let entityname = y[1].split(\"=\")[1];\n        return from(this.SynchronousPost(\"PostObject\", namespace, entityname, body, sequence, sequenceoperation));\n      }\n    }\n    else {\n\n      if (environment.production) {\n        return from(this.appService.apiService.postRequest(uri, body));\n      }\n      else\n        return from(this.authService.getToken().then((token) => { return this.callApiPost(token, uri, body); }));\n    }\n  }\n\n  public deleteRequest(uri: string): Observable<any> {\n    if (environment.production) {\n      return from(this.appService.apiService.deleteRequest(uri));\n    }\n    else\n      return from(this.authService.getToken().then((token) => { return this.callApiDelete(token, uri) }));\n  }\n  public getRequestWithoutAuth(uri: string): Observable<any> {\n    return from(this.callApiGetWithoutAuth(uri));\n  }\n  private callApiGetWithoutAuth(uri: string) {\n    return firstValueFrom(this.httpClient.get(uri))\n      .catch((result: HttpErrorResponse) => {\n        if (result.status === 401) {\n\n        }\n        throw result;\n      });\n  }\n\n  private callApiGet(token: string, uri: string) {\n    let headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + token\n    });\n\n    return firstValueFrom(this.httpClient.get(uri, { headers: headers }))\n      .catch((result: HttpErrorResponse) => {\n        if (result.status === 401) {\n\n        }\n        throw result;\n      });\n  }\n\n  private callApiPost(token: string, uri: string, body: string) {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json; charset=utf-8',\n      'Authorization': 'Bearer ' + token\n    });\n\n    return firstValueFrom(this.httpClient.post(uri, body, { headers: headers }))\n      .catch((result: HttpErrorResponse) => {\n        this.appService.logToConsole(result\n        );\n        if (result.status === 401) {\n\n        }\n        throw result;\n      });\n  }\n\n  private callApiDelete(token: string, uri: string) {\n    let headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + token\n    });\n\n    return firstValueFrom(this.httpClient.delete(uri, { headers: headers }))\n      .catch((result: HttpErrorResponse) => {\n        if (result.status === 401) {\n\n        }\n        throw result;\n      });\n  }\n\n}\n\nclass SynchronusPostData {\n  version: string;\n  endpoint: string;\n  postdata: any;\n  sequencetoken: any;\n  sequenceoperation: string;\n  person_id: string;\n  modulename: string;\n  synapsenamespace: string;\n  synapseentityname: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Encounter } from '../models/encounter.model';\nimport { jwtDecode } from 'jwt-decode';\nimport { Prescription, Posology, Dose, DoseEvents, Medication, Medicationadministration, Medicationcodes, Medicationingredients, Medicationroutes, MetaPrescriptionstatus, MetaPrescriptionduration, DrugChart, MetaPrescriptionadditionalcondition, Prescriptionroutes, InfusionEvents, PrescriptionSource, Oxygendevices, MetaReviewstatus, SupplyRequest, Prescriptionreminders, Prescriptionreviewstatus, MetaPrescriptioncontext, Orderset, PrescriptionEvent, PrescriptionMedicaitonSupply, AdministerMedication, PersonAwayPeriod, NursingInstruction, NursingInstructions, Remindersack } from \"src/app/models/EPMA\"\nimport { action } from '../models/filter.model';\nimport { Observation, Observationscaletype, PersonObservationScale } from '../models/observations.model';\nimport * as moment from 'moment';\nimport { DoseForm, DoseType, InfusionType, PrescriptionContext, PrescriptionStatus, RefWeightType } from './enum';\nimport { PatientInfo, WarningContext, WarningContexts, WarningService } from '../models/WarningServiceModal';\nimport { Allergyintolerance } from '../models/allergy.model';\nimport { SubjectsService } from './subjects.service';\nimport { Product } from '../models/productdetail';\nimport { ComplianceAid } from '../models/EPMA';\nimport { v4 as uuid } from 'uuid';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  personAgeInDays: number;\n  warningServiceIPContext: WarningService;\n  warningServiceMODContext: WarningService;\n  // warningServiceOPContext: Array<{ \"opid\": string, \"warningservice\": WarningService }>;\n\n  bannerWarningStatus: boolean = true;\n  personencounters: Encounter[];\n  refWeightType: RefWeightType;\n  warningServiceIPContextInitComplete: boolean;\n  criticalDrugbuffertimeAmber: number;\n  EnableDischargeSummaryComplete: any;\n  lenghOfStay: any;\n\n  // AddToOPWarningContext(opid: string, service: WarningService) {\n  //   let i = this.warningServiceOPContext.find(x => x.opid == opid);\n  //   if (i) {\n  //     i.warningservice = service;\n  //   } else {\n  //     this.warningServiceOPContext.push({ \"opid\": opid, \"warningservice\": service });\n  //   }\n  // }\n\n  // GetOPWarningContext(opid) {\n  //   return this.warningServiceOPContext.find(o => o.opid == opid);\n  // }\n  GetCurrentPrescriptionsForWarnings(wc: WarningContext = WarningContext.ip): any {\n    if (wc == WarningContext.ip) {\n      return this.Prescription.filter(\n        p =>\n          (p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.active).prescriptionstatus_id\n            ||\n            p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.modified).prescriptionstatus_id\n            ||\n            p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.restarted).prescriptionstatus_id\n\n          )\n          &&\n          p.prescriptioncontext_id == this.MetaPrescriptioncontext.find(pc => pc.context === PrescriptionContext.Inpatient).prescriptioncontext_id\n          &&\n          p.__completed != true\n      )\n    }\n    else if (wc == WarningContext.mod) {\n      return this.Prescription.filter(\n        p =>\n          (p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.active).prescriptionstatus_id\n            ||\n            p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.modified).prescriptionstatus_id\n            ||\n            p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.restarted).prescriptionstatus_id\n\n          )\n          &&\n          p.prescriptioncontext_id == this.MetaPrescriptioncontext.find(pc => pc.context === PrescriptionContext.Discharge).prescriptioncontext_id\n      )\n    } else if (wc.startsWith(WarningContext.op)) {\n      let opid = wc.split('_')[1];\n      let opp = this.optherapies.find(x => x.opid == opid);\n      if (opp && opp.opprescriptions.length > 0) {\n        return this.Prescription.filter(\n          p =>\n            (p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.active).prescriptionstatus_id\n              ||\n              p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.modified).prescriptionstatus_id\n              ||\n              p.prescriptionstatus_id == this.MetaPrescriptionstatus.find(mp => mp.status === PrescriptionStatus.restarted).prescriptionstatus_id\n\n            )\n            &&\n            p.prescriptioncontext_id == this.MetaPrescriptioncontext.find(pc => pc.context === PrescriptionContext.Outpatient).prescriptioncontext_id\n            &&\n            opp.opprescriptions.filter(x => x == p.prescription_id).length != 0\n        )\n      }\n      else {\n        return [];\n      }\n    }\n  }\n\n  isAppDataReady: boolean;\n  showdrugChart: boolean;\n  showDischargeSummaryNotes: boolean = true;\n\n  constructor(private subject: SubjectsService) { }\n  public modulename = \"app-epma\";\n  public dataversion = null;\n  public oxygenprescriptionadditionalinfo = [];\n  public changechoosenFilterDate: any;\n  public isreportview = false;\n  public reportData: any = [];\n  public batchIndex = 0;\n  public linkedBatchArray = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  public enableLogging = true;\n  public appConfig: any;\n  public buffertimeAmber: number;\n  public bufferAdministered: number;\n  public apiService: any;\n  public baseURI: string;\n  public prescriptionId: string;\n  public personId: string;\n  public encounter: Encounter;\n  public isCurrentEncouner = false;\n  public isTCI = false;\n  public isTCICancelled = false;\n  public isTitrationPopOverOpen = false;\n  public optherapies: Array<{ \"opid\": string, \"opprescriptions\" }> = [];\n\n  public MetaPrescriptionstatus: Array<MetaPrescriptionstatus>;\n  public MetaReviewstatus: Array<MetaReviewstatus>;\n  public MetaPrescriptioncontext: Array<MetaPrescriptioncontext>;\n  public Prescription: Array<Prescription>;\n  public currentBasket: Array<Prescription> = [];\n  public Prescriptionreminders: Array<Prescriptionreminders>;\n  public PrescriptionBag: any;\n  public Prescriptionreviewstatus: Array<Prescriptionreviewstatus>;\n  public FilteredPrescription: Array<Prescription>;\n  public TherapyPrescription: Array<Prescription>;\n  //public Posology: Array<Posology>;\n  //public Dose: Array<Dose>;\n  public remindersack: Array<Remindersack>;\n  public events: any = [];\n  public CurrentReminderevents: any = [];\n  public AllReminderevents: any = [];\n  public DoseEvents: Array<DoseEvents>;\n  public InfusionEvents: Array<InfusionEvents>;\n  //public Medication: Array<Medication>;\n  public Medicationadministration: Array<Medicationadministration>;\n  //public Medicationingredients: Array<Medicationingredients>;\n  //public Medicationroutes: Array<Medicationroutes>;\n  //public Prescriptionroutes: Array<Prescriptionroutes>;\n  public MetaPrescriptionDuration: Array<MetaPrescriptionduration>;\n  //public Medicationcodes: Array<Medicationcodes>;\n  public DrugeGroupsType: Array<string>;\n  public TimelineArray: DrugChart[];\n  public VtmUnits: any[];\n  public oxygenDevices: Array<Oxygendevices> = [];\n\n  public MetaPrescriptionadditionalcondition: Array<MetaPrescriptionadditionalcondition>;\n  public openPrescriptionHistory: boolean = false;\n  public openAdditionalAdministration: boolean = false;\n  public MetaPrescriptionSource: Array<PrescriptionSource>;\n\n  public roleActions: action[] = [];\n  public loggedInUserName: string = null;\n  public obsScales: Array<Observationscaletype> = [];\n  public observation: Array<Observation> = [];\n  public personAgeAtAdmission: number;\n  public personAgeToday: number;\n\n  public personDOB: Date;\n  public personscale: PersonObservationScale = null;\n  public currentEWSScale: string;\n  public isWeightCaptured: boolean = false;\n  public isWeightCapturedForToday: boolean = false;\n  public refWeightValue: number;\n  public idealWeightValue: number;\n  public refWeightRecordedOn: string;\n  public isHeightCaptured: boolean = false;\n  public refHeightValue: number;\n  public bodySurfaceArea: number;\n  public therapyCurrentDate: any;\n  public therapyNoOfDays: number;\n  public drugGroupOption: string;\n  public drugRouteOption: string;\n  public drugSortOrder: string;\n  public SupplyRequest: Array<SupplyRequest> = [];\n  public loggedInUserRoles: Array<string> = [];\n  public pleaseResupplyStockValidation: boolean = false;\n  public remainingEvents: Array<Prescription> = [];\n  public prescriptionHistory = [];\n  public patientDetails;\n  public encounterDetails;\n  public patientInfo: PatientInfo\n  public warningService: WarningContexts;\n  public allergyintolerance: Array<Allergyintolerance>;\n  public gender: string;\n  public stackButtons: any = [];\n  public arrPrescriptionCurrentFlowRate: any = [];\n  public isReasonForChangeReuired: boolean = false;\n  public administrationWitness = [];\n  public platfromServiceURI: string;\n  public DCGroups: any;\n  public dcgroupadded: any;\n  public prescriptionEvent: Array<PrescriptionEvent> = [];\n  public PrescriptionMedicaitonSupply: Array<PrescriptionMedicaitonSupply> = [];\n  public medReconcelationCompleteStatus = \"not reviewed by pharmacy\";\n  public administrationTimeDiffInMinute: number\n  public DoseEventsHistory: Array<DoseEvents>;\n  public InfusionEventsHistory: Array<InfusionEvents>;\n  public MedicationadministrationHistory: Array<Medicationadministration>;\n  public AdministermedicationHistory: Array<AdministerMedication>;\n  public PersonAwayPeriod: Array<PersonAwayPeriod> = [];\n  public MetaComplianceAid: Array<ComplianceAid>;\n  public outPatientPrescriptionSelected: any;\n  public PatientDrugHistory: Array<PrescriptionMedicaitonSupply> = [];\n  public NursingInstructions: Array<NursingInstructions>;\n  public Choosenfilterdate: any;\n  public currentTerminusModle = \"\";\n  public outpatientPrescribingMode: boolean = false;\n  public isOP = false;\n  public chartScrolled = false;\n  public disabledatechange = true;\n  reset(): void {\n    this.disabledatechange = true;\n    this.chartScrolled = false;\n    this.stackButtons = [];\n    this.arrPrescriptionCurrentFlowRate = [];\n    this.PersonAwayPeriod = [];\n    this.currentBasket = [];\n    this.warningServiceIPContextInitComplete = false;\n    this.dataversion = null;\n    this.personId = null;\n    this.encounter = null;\n    this.isCurrentEncouner = null;\n    this.isTCI = null;\n    this.isTCICancelled = null;\n    this.apiService = null;\n    this.baseURI = null;\n    this.loggedInUserName = null;\n    this.enableLogging = true;\n    this.roleActions = [];\n    this.personDOB = null;\n    this.personAgeAtAdmission = null;\n    this.personAgeToday = null;\n    this.personAgeInDays = null;\n    this.personscale = null;\n    this.currentEWSScale = null;\n    this.obsScales = [];\n    this.optherapies = [];\n    this.prescriptionId = null;\n    this.outPatientPrescriptionSelected = null;\n    if (this.Prescription)\n      this.Prescription.forEach(p => {\n        p.__posology.forEach(pos => {\n          pos.__dose = null;\n          pos = null;\n        });\n\n        p.__medications.forEach(m => {\n          m.__codes.forEach(c => {\n            c = null;\n          });\n          m.__ingredients.forEach(i => {\n            i = null;\n          });\n          m = null;\n        });\n        p.__medications = null;\n        p.__routes.forEach(r => {\n          r = null\n        });\n        p.__routes = null;\n        p.__editingprescription = null;\n        p.__editingreviewstatus = null;\n        p.__initialreminder = null;\n\n      });\n\n    this.MetaPrescriptionstatus = [];\n    this.MetaReviewstatus = [];\n\n    this.Prescription = [];\n    this.FilteredPrescription = [];\n    this.TherapyPrescription = [];\n    this.isWeightCaptured = false;\n    this.isHeightCaptured = false;\n    this.isWeightCapturedForToday = false;\n    this.InfusionEvents = [];\n    this.DoseEvents = [];\n    //this.Prescriptionroutes = [];\n    // this.Posology = [];\n    //this.Dose = [];\n    this.events = null;;\n    this.DoseEvents = [];\n    this.InfusionEvents = [];\n    // this.Medication = [];\n    this.Medicationadministration = [];\n    //this.Medicationingredients = [];\n    //this.Medicationroutes = [];\n    //this.Prescriptionroutes = [];\n    this.MetaPrescriptionDuration = [];\n    // this.Medicationcodes = [];\n    this.DrugeGroupsType = [];\n    this.TimelineArray = [];\n    this.VtmUnits = [];\n    this.PrescriptionBag = [];\n    this.MetaPrescriptionadditionalcondition = [];\n    this.openPrescriptionHistory = null;\n    this.openAdditionalAdministration = null;\n    this.MetaPrescriptionSource = [];\n    this.Prescriptionreminders = [];\n    this.roleActions = [];\n    this.loggedInUserName = null;\n    this.obsScales = [];\n    this.observation = [];\n\n    this.personDOB = null;\n    this.personscale = null;\n    this.currentEWSScale = null;\n    this.isWeightCaptured = null;\n    this.isWeightCapturedForToday = null;\n    this.refWeightValue = null;\n    this.idealWeightValue = null;\n    this.refWeightRecordedOn = null;\n    this.isHeightCaptured = null;\n    this.refHeightValue = null;\n    this.bodySurfaceArea = null;\n    this.therapyCurrentDate = null;\n    this.therapyNoOfDays = null;\n    this.drugGroupOption = null;\n    this.drugRouteOption = null;\n    this.drugSortOrder = null;\n    this.SupplyRequest = [];\n    this.oxygenDevices = [];\n    this.oxygenprescriptionadditionalinfo = [];\n    this.isAppDataReady = false;\n    this.batchIndex = 0;\n    this.Prescriptionreviewstatus = [];\n    this.loggedInUserRoles = [];\n    this.pleaseResupplyStockValidation = false;\n    this.allergyintolerance = [];\n    this.gender = null;\n    this.isReasonForChangeReuired = false;\n    this.administrationWitness = [];\n    this.platfromServiceURI = null;\n    this.prescriptionEvent = [];\n    this.warningServiceIPContext = null;\n    this.warningServiceMODContext = null;\n    this.warningService = null;\n    this.bannerWarningStatus = true;\n    this.refWeightType = null;\n    this.PrescriptionMedicaitonSupply = [];\n    this.administrationTimeDiffInMinute = null;\n    this.DoseEventsHistory = [];\n    this.InfusionEventsHistory = [];\n    this.MedicationadministrationHistory = [];\n    this.AdministermedicationHistory = [];\n    this.MetaComplianceAid = [];\n    this.PatientDrugHistory = [];\n    this.NursingInstructions = [];\n    this.currentTerminusModle = \"\";\n    this.outpatientPrescribingMode = false;\n    this.isOP = false;\n  }\n\n  decodeAccessToken(token: string): any {\n    try {\n      return jwtDecode(token);\n    }\n    catch (Error) {\n      this.logToConsole(`Error: ${Error}`);\n      return null;\n    }\n  }\n\n\n  public AuthoriseAction(action: string): boolean {\n    if (this.appConfig && this.appConfig.AppSettings.enableRBAC)\n      return this.roleActions.filter(x => x.actionname.toLowerCase().trim() == action.toLowerCase()).length > 0;\n    else\n      return true;\n\n  }\n\n  public getPrescriptionBags() {\n    this.batchIndex = 0;\n    this.PrescriptionBag = [];\n    let allprescriptionbatches = this.Prescription.slice();\n    allprescriptionbatches.sort((a, b) => new Date(a.createdon).getTime() - new Date(b.createdon).getTime());\n    for (let prescription of allprescriptionbatches) {\n      if (this.PrescriptionBag.find(x => x.prescriptionid == prescription.prescription_id)) {\n        continue;\n      }\n      if (prescription.linkedinfusionid) {\n        let letterBatch = \"\";\n        if (this.PrescriptionBag.find(x => x.prescriptionid == prescription.linkedinfusionid)) {\n          let temp = this.PrescriptionBag.find(x => x.prescriptionid == prescription.linkedinfusionid).Batch;\n          letterBatch = temp.split(\"-\")[0];\n          letterBatch = letterBatch + \"-\" + (+temp.split(\"-\")[1] + 1).toString();\n          this.PrescriptionBag.push(\n            {\n              prescriptionid: prescription.prescription_id,\n              Batch: letterBatch\n\n            }\n          );\n        }\n\n        else {\n          let batchletter = this.getlinkedArrayLetter();\n          this.PrescriptionBag.push({\n            prescriptionid: prescription.linkedinfusionid,\n            Batch: batchletter + \"-0\"\n          }\n          );\n          this.PrescriptionBag.push({\n            prescriptionid: prescription.prescription_id,\n            Batch: batchletter + \"-1\"\n          }\n          );\n        }\n      }\n    }\n  }\n\n  public getMultilinkPrescriptionBags() {\n    this.batchIndex = 0;\n    this.PrescriptionBag = [];\n    let allprescriptionbatches = this.Prescription.slice();\n    allprescriptionbatches.sort((a, b) => new Date(a.createdon).getTime() - new Date(b.createdon).getTime());\n    for (let prescription of allprescriptionbatches) {\n      if (this.PrescriptionBag.find(x => x.prescriptionid == prescription.prescription_id)) {\n        continue;\n      }\n      if (prescription.linkedinfusionid) {\n        let letterBatch = \"\";\n        if (this.PrescriptionBag.find(x => x.prescriptionid == prescription.linkedinfusionid)) {\n          let parentbag = this.PrescriptionBag.find(x => x.prescriptionid == prescription.linkedinfusionid).Batch;\n          let count = 1;\n          let multilink = allprescriptionbatches.filter(x => x.linkedinfusionid == prescription.linkedinfusionid)\n          for (let linkprescri of multilink) {\n            letterBatch = parentbag + \".\" + count;\n            this.PrescriptionBag.push(\n              {\n                prescriptionid: linkprescri.prescription_id,\n                Batch: letterBatch\n\n              }\n            );\n            count++;\n          }\n\n        }\n\n        else {\n          let batchletter = this.getlinkedArrayLetter();\n          this.PrescriptionBag.push({\n            prescriptionid: prescription.linkedinfusionid,\n            Batch: batchletter\n          }\n          );\n          let count = 1;\n          let multilink = allprescriptionbatches.filter(x => x.linkedinfusionid == prescription.linkedinfusionid)\n          for (let linkprescri of multilink) {\n            letterBatch = batchletter + \".\" + count;\n            this.PrescriptionBag.push(\n              {\n                prescriptionid: linkprescri.prescription_id,\n                Batch: letterBatch\n\n              }\n            );\n            count++;\n          }\n\n        }\n      }\n    }\n  }\n\n  getlinkedArrayLetter() {\n    this.batchIndex++;\n    return this.linkedBatchArray.charAt(this.batchIndex - 1);\n\n  }\n  public getDateTimeinISOFormat(date: Date): string {\n\n    var time = date;\n    var hours = time.getHours();\n    var s = time.getSeconds();\n    var m = time.getMilliseconds()\n    var minutes = time.getMinutes();\n    date.setHours(hours);\n    date.setMinutes(minutes);\n    //date.setSeconds(s);\n    //date.setMilliseconds(m);\n    //this.appService.logToConsole(date);\n    let year = date.getFullYear();\n    let month = (date.getMonth() + 1);\n    let dt = date.getDate();\n    let hrs = date.getHours();\n    let mins = date.getMinutes();\n    let secs = date.getSeconds();\n    let msecs = date.getMilliseconds();\n    let returndate = (year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (dt < 10 ? \"0\" + dt : dt) + \"T\" + (hrs < 10 ? \"0\" + hrs : hrs) + \":\" + (mins < 10 ? \"0\" + mins : mins) + \":\" + (secs < 10 ? \"0\" + secs : secs) + \".\" + (msecs < 10 ? \"00\" + msecs : (msecs < 100 ? \"0\" + msecs : msecs)));\n    //this.appService.logToConsole(returndate);\n    return returndate;\n  }\n\n  setPatientAgeAtAdmission(setAgeAtEarliestPosologyStartDate: moment.Moment = null) {\n    console.log(\"setAgeAtEarliestPosologyStartDate\" + setAgeAtEarliestPosologyStartDate);\n    this.personAgeAtAdmission = moment(this.encounter.sortdate ?? moment(), moment.ISO_8601).diff(moment(this.personDOB, moment.ISO_8601), \"years\");\n    this.personAgeToday = moment(moment(), moment.ISO_8601).diff(moment(this.personDOB, moment.ISO_8601), \"years\");\n    if (setAgeAtEarliestPosologyStartDate) {\n      this.personAgeInDays = moment(setAgeAtEarliestPosologyStartDate ?? moment(), moment.ISO_8601).diff(moment(this.personDOB, moment.ISO_8601), \"days\");\n    }\n    else {\n      this.personAgeInDays = moment(moment(), moment.ISO_8601).diff(moment(this.personDOB, moment.ISO_8601), \"days\");\n    }\n    console.log(this.personAgeInDays);\n  }\n\n  logToConsole(msg: any) {\n    if (this.enableLogging) {\n      console.log(msg);\n    }\n  }\n  setCurrentScale() {\n    let scale = \"\";\n    if (this.personAgeAtAdmission < 19) {\n      if (this.personAgeAtAdmission <= 0)\n        scale = \"PEWS-0To11Mo\";\n      else if (this.personAgeAtAdmission >= 1 && this.personAgeAtAdmission <= 4)\n        scale = \"PEWS-1To4Yrs\";\n      else if (this.personAgeAtAdmission >= 5 && this.personAgeAtAdmission <= 12)\n        scale = \"PEWS-5To12Yrs\";\n      else if (this.personAgeAtAdmission >= 13 && this.personAgeAtAdmission <= 18)\n        scale = \"PEWS-13To18Yrs\";\n\n    } else\n      if (this.personscale) {\n\n        scale = this.obsScales.filter(x => x.observationscaletype_id == this.personscale.observationscaletype_id)[0].scaletypename;\n      }\n      else {\n        scale = \"NEWS2-Scale1\";\n      }\n    this.currentEWSScale = scale;\n    return scale;\n  }\n\n  GetIndication(p: Prescription) {\n    if (p.indication && p.indication.indexOf(\"indication\") != -1 && p.indication.indexOf(\"code\") != -1) {\n      let ind = <any>JSON.parse(p.indication);\n      if (ind.code == \"other\")\n        return ind.indication + \" - \" + p.otherindications;\n      else\n        return ind.indication;\n    }\n    else\n      return p.indication\n  }\n\n\n\n  checkMedicineTypeForMoa(prescription: Prescription, getchangestatus = false): boolean | number {\n\n    let ismoa = prescription.prescriptioncontext_id ==\n      this.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Admission).prescriptioncontext_id;\n    if (ismoa) {\n      return getchangestatus ? 0 : true;\n    } else {\n\n      let medcode = prescription.__medications.find(m => m.isprimary).__codes.find(c => c.terminology == \"formulary\").code;\n\n      let codeobject = this.Prescription.find(p =>\n        p.prescription_id != prescription.prescription_id &&\n        p.prescriptioncontext_id == this.MetaPrescriptioncontext.find(w => w.context == PrescriptionContext.Admission).prescriptioncontext_id &&\n        p.__medications.find(m => m.isprimary).__codes.find(c => c.terminology == \"formulary\").code == medcode);\n\n      if (getchangestatus) {\n        if (codeobject) {\n          let issame = this.ComparePrescriptions(prescription, codeobject);\n          return issame ? 0 : 1; //1= orange 0= blue\n        }\n        else {\n          return -1; // -1 = no icon\n        }\n      }\n      else {\n        if (codeobject) {\n          return true;// MOA match and no need to show\n        } else {\n          return false // Code not found and MOA prescription not prescribed\n        }\n      }\n    }\n  }\n\n  UpdatePrescriptionWarningSeverity(parray: Array<Prescription>, cb, ws: WarningService = this.warningServiceIPContext) {\n    ws.GetExistingWarnings(false, (data) => {\n      parray.forEach(p => {\n        const highwarnings = data.filter(\n          x => (x.primaryprescriptionid == p.prescription_id || x.secondaryprescriptionid == p.prescription_id)\n            && x.severity == 4)\n        if (highwarnings && highwarnings.length > 0) {\n          p.__severityWarning = highwarnings[0].severity;\n          p.__warningOverrideREQ = highwarnings.filter(w => w.overriderequired).length > 0;\n        }\n      })\n      cb();\n    })\n  }\n\n  RefreshWarningsFromApi(cb, ws = this.warningServiceIPContext) {\n    if (this.isTCI && !this.encounter.sortdate) {\n      let minposologystartdateexisting = moment.min([].concat(...this.GetCurrentPrescriptionsForWarnings(ws.context).map(p => p.__posology)).map(pos => moment((<Posology>pos).prescriptionstartdate)));\n\n      this.setPatientAgeAtAdmission(minposologystartdateexisting);\n    }\n    this.logToConsole(\"Refreshing warnigns from api\");\n    ws.existingWarningsStatus = false;\n    ws.RefreshCurrentMedicationWarnings(this.GetCurrentPrescriptionsForWarnings(ws.context), this.patientInfo, (status, data, version = \"\") => {\n      this.logToConsole(\"Refreshing warnigns from api - complete\");\n      if (status == \"success\") {\n        if (version) {\n          this.UpdateDataVersionNumber({ \"version\": version });\n        }\n        this.UpdatePrescriptionWarningSeverity(this.Prescription, () => {\n          this.subject.refreshTemplate.next(undefined);\n          cb();\n        });\n      }\n      else {\n        cb();\n        this.subject.closeWarnings.next(undefined);\n        if (this.IsDataVersionStaleError(data)) {\n          this.subject.ShowRefreshPageMessage.next(data);\n        }\n      }\n    });\n    this.subject.refreshTemplate.next(undefined);\n\n  }\n\n\n  distinct(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  MedicationHasFlag(flag, m?: Product) {\n    return (flag == \"clinicaltrial\" && m.detail.clinicalTrialMedication && +m.detail.clinicalTrialMedication == 1)\n      || (flag == \"controlled\" && m.detail.isCustomControlledDrug)\n      || (flag == \"blacktriangle\" && (m.detail.emaAdditionalMonitoring == \"1\" || m.detail.blackTriangle && +m.detail.blackTriangle == 1))\n      || (flag == \"critical\" && m.detail.criticalDrug && +m.detail.criticalDrug == 1)\n      || (flag == \"expensive\" && m.detail.expensiveMedication && +m.detail.expensiveMedication == 1)\n      || (flag == \"highalert\" && m.detail.highAlertMedication && +m.detail.highAlertMedication == 1)\n      || (flag == \"nonformulary\" && m.detail.rnohFormularyStatuscd == \"002\")\n      || (flag == \"unlicenced\" && m.detail.unlicensedMedicationCd && +m.detail.unlicensedMedicationCd == 1)\n      || (flag == \"bloodproduct\" && m.detail.isBloodProduct == true)\n  }\n\n  GetCurrentPosology(p: Prescription, pos_id: string = null) {\n    if (pos_id) {\n      return p.__posology.find(p => p.posology_id == pos_id);\n    }\n    else\n      return p.__posology.find(p => p.iscurrent == true);\n  }\n\n  ComparePrescriptions(p: Prescription, p1: Prescription) {\n    //compare interval\n    if (this.GetCurrentPosology(p).frequency != this.GetCurrentPosology(p1).frequency) {\n      return false;\n    }\n    if (this.GetCurrentPosology(p).frequencysize != this.GetCurrentPosology(p1).frequencysize) {\n      return false;\n    }\n\n    if (this.GetCurrentPosology(p).dosetype != this.GetCurrentPosology(p1).dosetype) {\n      return false;\n    }\n    if (this.GetCurrentPosology(p).__dose.length != this.GetCurrentPosology(p1).__dose.length) {\n      return false\n    }\n\n    //compare dose\n    for (var i = 0; i < this.GetCurrentPosology(p).__dose.length; i++) {\n      const d = this.GetCurrentPosology(p).__dose[i];\n      const d1 = this.GetCurrentPosology(p1).__dose[i];\n\n      if (this.GetCurrentPosology(p).dosetype == DoseType.descriptive && d.descriptivedose != d1.descriptivedose) {\n        return false;\n      }\n      else\n        if (this.GetCurrentPosology(p).dosetype == DoseType.strength\n          && (d.strengthneumerator != d1.strengthneumerator\n            ||\n            d.strengthdenominator != d1.strengthdenominator)) {\n          return false;\n        } else\n          if (this.GetCurrentPosology(p).dosetype == DoseType.units &&\n            (d.doseunit != d1.doseunit\n              || d.dosesize != d1.dosesize)) {\n            return false;\n          }\n\n    }\n\n    //compare routes\n    if (p.__routes.length != p1.__routes.length) {\n      return false\n    }\n    else {\n      //compare primary routes\n      const rp = p.__routes.find(r => r.isdefault);\n      const rp1 = p1.__routes.find(r => r.isdefault);\n\n      if (rp && rp1 && rp.routecode != rp1.routecode) {\n        return false;\n      }\n      else if ((rp && !rp1) || (rp1 && !rp)) {\n        return false;\n      }\n\n      //compare discretionary\n      var diff = p.__routes.find(r => p1.__routes.filter(r1 => r1.routecode == r.routecode).length == 0);\n      if (diff)\n        return false;\n    }\n\n    //prn\n    if (this.GetCurrentPosology(p).prn != this.GetCurrentPosology(p1).prn)\n      return false;\n\n    //do\n    if (this.GetCurrentPosology(p).doctorsorder != this.GetCurrentPosology(p1).doctorsorder)\n      return false;\n\n    //chosendays\n    if (this.GetCurrentPosology(p).daysofweek != this.GetCurrentPosology(p1).daysofweek)\n      return false;\n\n    //everyndays\n    if (this.GetCurrentPosology(p).dosingdaysfrequency != this.GetCurrentPosology(p1).dosingdaysfrequency)\n      return false;\n    //everyndays\n    if (this.GetCurrentPosology(p).dosingdaysfrequencysize != this.GetCurrentPosology(p1).dosingdaysfrequencysize)\n      return false;\n\n    //comments\n    if ((p.comments ?? \"\").toLowerCase().trim() != (p1.comments ?? \"\").toLowerCase().trim())\n      return false;\n\n    if (p.indication != p1.indication || p.otherindications != p1.otherindications) {\n      return false\n    }\n\n    // //additional conditions\n    // if (p.prescriptionadditionalconditions_id != p1.prescriptionadditionalconditions_id)\n    //   return false;\n\n\n    return true;\n\n  }\n\n  setIdealBodyWeight() {\n    if (!isNaN(this.refHeightValue) && +this.refHeightValue > 0 && +this.refHeightValue >= 152 && +this.personAgeToday >= 18) {\n      if (this.gender == \"M\") {\n        this.idealWeightValue = 50 + (0.9 * (+this.refHeightValue - 152));\n      }\n      else {\n        this.idealWeightValue = 45.5 + (0.9 * (+this.refHeightValue - 152));\n      }\n    }\n    else {\n      this.idealWeightValue = -1;\n    }\n  }\n\n  UpdateDataVersionNumber(saveResponse: any) {\n    if (saveResponse.hasOwnProperty('version')) {\n      this.dataversion = saveResponse[\"version\"];\n    }\n  }\n\n  IsDataVersionStaleError(error): boolean {\n    if (error.error) {\n      if (error.error.includes(\"oldversion\") ||\n        error.error.includes(\"noversion\") ||\n        error.error.includes(\"cannotinitdataversion\") ||\n        error.error.includes(\"otherongoingsequence\") ||\n        error.error.includes(\"invalidsequenceoperation\") ||\n        error.error.includes(\"sequenceexpired\") ||\n        error.error.includes(\"otherprocesswriting\")) {\n        return true;\n      }\n      else\n        return false;\n    }\n    else\n      return false\n  }\n\n  RefreshPageWithStaleError(error) {\n    let refreshed = false;\n    if (error.error) {\n      if (error.error.includes(\"serverversion:\")) {\n        let splitmsg = error.error.split(\"serverversion:\");\n        if (Array.isArray(splitmsg) && splitmsg.length == 2) {\n          let serverversion = splitmsg[1];\n          if (serverversion) {\n            let versionobject = JSON.parse(serverversion);\n            let serverversion_userid = versionobject.createdby;\n            refreshed = true;\n\n            this.subject.ShowRefreshPageMessage.next(serverversion_userid);\n          }\n        }\n      }\n    }\n    if (!refreshed) {\n      this.subject.ShowRefreshPageMessage.next(undefined);\n    }\n  }\n\n  GroupingBasics(val) {\n    let dcgroup;\n    let isIvFluid = false;\n    if (val.__drugcodes) {\n      const customrows = val.__drugcodes.filter(x => x.additionalCodeSystem.toLowerCase() == \"custom\");\n      const ivfluids = customrows.filter(x => x.additionalCode.toUpperCase() == \"BASIC_FLUID\");\n      if (ivfluids.length > 0)\n        isIvFluid = true;\n      else\n        isIvFluid = false;\n    }\n    if (val.__posology.find(x => x.iscurrent == true).frequency == \"stat\") {\n      dcgroup = {\n        group: \"Stat\",\n        prescriptionid: val.prescription_id\n      };\n      return dcgroup;\n    } else {\n      let codematteched = false;\n      let Presindecation = JSON.parse(val.indication)\n      let drug_bnf = \"\";\n      if (val.__drugcodes) {\n        const bnfrow = val.__drugcodes.filter(x => x.additionalCodeSystem == \"BNF\");\n        if (bnfrow.length > 0)\n          drug_bnf = bnfrow[0].additionalCode;\n      }\n      drug_bnf.padEnd(10, \"0\");\n      for (let group of this.DCGroups) {\n        let isbnfmatch = false\n        for (let arrcode of group.MatchConditions.ClassificationCodes) {\n          let bnf = (arrcode.Code ?? \"\").replace(/\\./g, \"\");\n          if (bnf == drug_bnf.substring(0, bnf.length)) {\n            isbnfmatch = true;\n          }\n        }\n\n        let isindecationmatch = false;\n        for (let arrindecation of group.MatchConditions.Indications) {\n          if (Presindecation) {\n            if (arrindecation.Code == Presindecation.code || arrindecation.Indication == Presindecation?.indication) {\n              isindecationmatch = true\n            }\n          }\n        }\n        let Indications = group.MatchConditions.Indications;\n        if (group.MatchType == \"AND\") {\n\n          if (isindecationmatch && isbnfmatch) {\n            if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) { // checking is allready add this pres 47  4.0.1.0\n              dcgroup = {\n                group: group.GroupName,\n                prescriptionid: val.prescription_id\n              };\n              return dcgroup;\n            }\n          }\n        } else {\n          if (isindecationmatch || isbnfmatch) {\n            if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) { // checking is allready add this pres\n              dcgroup = {\n                group: group.GroupName,\n                prescriptionid: val.prescription_id\n              };\n              return dcgroup\n            }\n          }\n        }\n      }\n\n      if (val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'ci' || val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'pca' || (val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'rate' && val.__posology.find(x => x.iscurrent == true).frequency == \"variable\")) {\n        if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) { // checking is allready add this pres\n          dcgroup = {\n            group: \"Variable/Continuous infusion\",\n            prescriptionid: val.prescription_id\n          };\n          return dcgroup;\n        }\n      } else if (val.__posology.find(x => x.iscurrent == true).prn == true) {\n        if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) { // checking is allready add this pres\n          dcgroup = {\n            group: \"PRN\",\n            prescriptionid: val.prescription_id\n          };\n          return dcgroup;\n        }\n      }\n      else if (isIvFluid) {\n        if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres\n          this.dcgroupadded.push({ group: \"IV Fluid\", prescriptionid: val.prescription_id })\n        }\n      }\n      else {\n        if (!this.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) { // checking is allready add this pres\n          dcgroup = {\n            group: \"Regular drugs\",\n            prescriptionid: val.prescription_id\n          };\n          return dcgroup;\n        }\n      }\n    }\n    return dcgroup;\n  }\n\n  GetPRNMaxDoseDisplayString(prnmaxdose: string) {\n    const prnMaxDoseObj = <any>JSON.parse(prnmaxdose)\n    if (prnMaxDoseObj) {\n      if (prnMaxDoseObj.type == DoseType.units) {\n        return prnMaxDoseObj.maxdenominator + \" \" + prnMaxDoseObj.d_units;\n      }\n      else if (prnMaxDoseObj.type == \"numeratoronlystrength\" || prnMaxDoseObj.type == DoseType.strength) {\n        return prnMaxDoseObj.maxnumerator + \" \" + prnMaxDoseObj.n_units + \"/\" + prnMaxDoseObj.maxdenominator + \" \" + prnMaxDoseObj.d_units;\n      }\n      else if (prnMaxDoseObj.type == \"na\") {\n        return prnMaxDoseObj.maxtimes + \" doses\";\n      }\n    }\n  }\n  public GetMostFrequentElementInArray(arr) {\n    let compare = \"\";\n    let mostFreq = \"\";\n\n    arr.reduce((acc, val) => {\n      if (val in acc) {               // if key already exists\n        acc[val]++;                // then increment it by 1\n      } else {\n        acc[val] = 1;      // or else create a key with value 1\n      }\n      if (acc[val] > compare) {   // if value of that key is greater\n        // than the compare value.\n        compare = acc[val];    // than make it a new compare value.\n        mostFreq = val;        // also make that key most frequent.\n      }\n      return acc;\n    }, {})\n    this.logToConsole(\"Most Frequent Item is:\" + mostFreq);\n    return mostFreq;\n  }\n\n  HideWarning(context) {\n    if (document.getElementById(context + \"_ToggleShowLowPriorityWarnings\").innerText == 'Hide all warnings') {\n      document.getElementById(context + \"_ToggleShowLowPriorityWarnings\").click()\n    }\n  }\n\n  UpdatePrescriptionCompletedStatus(p: Prescription) {\n    p.__completed = false;\n    const currentposology = this.GetCurrentPosology(p);\n    if (currentposology.prescriptionenddate) {\n      let lastdosedate;\n      let tempdose = [];\n      let logical_ID;\n      let iteration = 0;\n      Object.assign(tempdose, currentposology.__dose);\n      tempdose.sort((a, b) => new Date(b.dosestartdatetime).getTime() - new Date(a.dosestartdatetime).getTime());\n      let enddate = moment(currentposology.prescriptionenddate);\n      let cd_startdtm = moment(currentposology.prescriptionstartdate).clone().set(\"minute\", 0).set(\"hour\", 0).set(\"seconds\", 0);\n      let cd_enddtm = enddate.clone().set(\"minute\", 0).set(\"hour\", 0).set(\"seconds\", 0);\n      let chosendays_dose_dates = [];\n      let days_of_week_selected = [];\n      try {\n        days_of_week_selected = JSON.parse(currentposology.daysofweek);\n      }\n      catch { }\n      if (Array.isArray(days_of_week_selected) && days_of_week_selected.length != 0) {\n\n        while (cd_startdtm.isSameOrBefore(cd_enddtm)) {\n          if (days_of_week_selected.find(x => x.toLowerCase() == cd_enddtm.format('dddd').toLowerCase())) {\n            chosendays_dose_dates.push(cd_enddtm.clone());\n          }\n          cd_enddtm.subtract(1, 'days');\n        }\n        chosendays_dose_dates.reverse(); //because we iterated last date first \n      }\n      else if (currentposology.dosingdaysfrequencysize > 0) {\n        while (cd_startdtm.isSameOrBefore(cd_enddtm)) {\n          chosendays_dose_dates.push(cd_startdtm.clone());\n          if (currentposology.dosingdaysfrequency == \"days\") {\n            cd_startdtm.add(currentposology.dosingdaysfrequencysize, \"days\");\n          }\n          else if (currentposology.dosingdaysfrequency == \"weeks\") {\n            cd_startdtm.add(currentposology.dosingdaysfrequencysize, \"weeks\");\n          }\n          else if (currentposology.dosingdaysfrequency == \"months\") {\n            cd_startdtm.add(currentposology.dosingdaysfrequencysize, \"months\");\n          }\n        }\n      }\n\n\n      if (chosendays_dose_dates.length != 0)\n      // chosen days has been selected in the prescription, last dose date might not be on the \n      // prescription end date use the last index of this prepared array as last date\n      {\n        const newenddate = chosendays_dose_dates[chosendays_dose_dates.length - 1];\n        if (newenddate.format('LL') != enddate.format('LL')) {\n          enddate.date(newenddate.date());\n          enddate.month(newenddate.month());\n          enddate.year(newenddate.year());\n\n          //pick the last dose for the day \n          enddate.hour(moment(tempdose[0].dosestartdatetime).hour())\n          enddate.minute(moment(tempdose[0].dosestartdatetime).minute())\n        }\n\n      }\n\n\n      for (let startdate = moment(currentposology.prescriptionstartdate).clone().set(\"minute\", 0).set(\"hour\", 0).set(\"seconds\", 0); enddate.isSameOrAfter(startdate); enddate.subtract(1, 'days')) {\n        for (let i = 0; i < tempdose.length; i++) {\n          let dose = tempdose[i];\n          //to create logical id get last dose date and doseid\n          //if start date is smaller than prescriptionenddate, last dose date = prescription end date \n          //if start date is bigger than prescriptionenddate, last dose date = start date of dose\n          //logical id = lastdosedate plus doseid\n\n          if (p.isinfusion && (p.infusiontype_id == InfusionType.ci || p.infusiontype_id == InfusionType.pca)) {\n            if (dose.continuityid)\n              logical_ID = \"end_\" + moment(dose.doseenddatatime).format('YYYYMMDDHHmm') + \"_\" + dose.continuityid.toString();\n            else\n              logical_ID = \"end_\" + moment(dose.doseenddatatime).format('YYYYMMDDHHmm') + \"_\" + dose.dose_id.toString();\n\n            const endevent = this.InfusionEvents.find(x => x.logicalid == logical_ID);\n            if (endevent) {\n              p.__completed = true;\n              p.__completedOn = moment(endevent.eventdatetime);\n              return;\n            }\n            else {\n              p.__completed = false;\n              return;\n            }\n          }\n          else\n            if (p.isinfusion && currentposology.infusiontypeid == InfusionType.rate) {\n              let lasteventstartdate = moment({\n                year: moment(enddate).year(),\n                month: moment(enddate).month(),\n                day: moment(enddate).date(),\n                hour: moment(dose.dosestartdatetime).hour(),\n                minute: moment(dose.dosestartdatetime).minute()\n              });\n              if (lasteventstartdate.isAfter(enddate) && iteration == 0)\n                continue;\n              logical_ID = moment(lasteventstartdate).format('YYYYMMDDHHmm') + \"_\" + dose.dose_id.toString();\n\n              //check if this event is cancelled\n              let infusionevent = this.InfusionEvents.find(de => de.eventtype.toLowerCase() == \"cancel\" && de.logicalid.includes(logical_ID));\n              if (!infusionevent) { //this is the last dose now get the stop event logical id\n                lastdosedate = moment({\n                  year: moment(enddate).year(),\n                  month: moment(enddate).month(),\n                  day: moment(enddate).date(),\n                  hour: moment(dose.doseenddatatime).hour(),\n                  minute: moment(dose.doseenddatatime).minute()\n                });\n                if (moment(dose.dosestartdatetime).format(\"YYYYMMDD\") != moment(dose.doseenddatatime).format(\"YYYYMMDD\")) // if end date is after start date. \n                  lastdosedate = moment({\n                    year: moment(enddate).add(1, \"day\").year(),\n                    month: moment(enddate).add(1, \"day\").month(),\n                    day: moment(enddate).add(1, \"day\").date(),\n                    hour: moment(dose.doseenddatatime).hour(),\n                    minute: moment(dose.doseenddatatime).minute()\n                  });\n\n                logical_ID = \"end_\" + moment(lastdosedate).format('YYYYMMDDHHmm') + \"_\" + dose.dose_id.toString();\n\n                const adminrecord = this.InfusionEvents.find(x => x.logicalid.includes(logical_ID));\n                if (adminrecord) {\n                  p.__completed = true;\n                  p.__completedOn = moment(adminrecord.eventdatetime);\n                }\n                else {\n                  p.__completed = false;\n                }\n                return;\n              }\n            }\n            else {\n              if (moment(dose.dosestartdatetime).isAfter(moment(currentposology.prescriptionenddate)))\n                lastdosedate = dose.dosestartdatetime;\n              else {\n                lastdosedate = moment({\n                  year: moment(enddate).year(),\n                  month: moment(enddate).month(),\n                  day: moment(enddate).date(),\n                  hour: moment(dose.dosestartdatetime).hour(),\n                  minute: moment(dose.dosestartdatetime).minute()\n                });\n                if (lastdosedate.isAfter(enddate) && iteration == 0)\n                  continue;\n              }\n              logical_ID = moment(lastdosedate).format('YYYYMMDDHHmm') + \"_\" + dose.dose_id.toString();\n\n              //check if this event is cancelled\n              let doseevent = this.DoseEvents.find(de => de.eventtype.toLowerCase() == \"cancel\" && de.logicalid.includes(logical_ID));\n              if (!doseevent) { //this is the last dose \n                const adminrecord = this.Medicationadministration.find(x => x.logicalid.includes(logical_ID));\n                if (adminrecord) {\n                  p.__completed = true;\n                  p.__completedOn = moment(adminrecord.administrationstartime);\n                }\n                else {\n                  p.__completed = false;\n                }\n                return;\n              }\n            }\n        }\n        iteration++;\n      }\n    }\n    else {\n      p.__completed = false;\n      return;\n    }\n  }\n\n  public GetDefaultSupplyRequestObject(prescription: Prescription, doseSize?: any, strengthneumerator?: any, strengthdenominator?: any) {\n    let supplyRequest: SupplyRequest = new SupplyRequest();\n    let primaryMed = prescription.__medications.find(m => m.isprimary == true);\n    if (primaryMed && primaryMed.producttype.toLocaleLowerCase() != \"custom\") {\n      let medicationCode = primaryMed.__codes.find(c => c.terminology == 'formulary').code;\n      let isFormulary = !primaryMed.isformulary;\n      prescription.__medications[0].producttype\n      let requests = this.SupplyRequest.filter(s => s.prescription_id == prescription.prescription_id &&\n        s.medication_id == medicationCode && (s.requeststatus == 'Incomplete' || s.requeststatus == 'Pending'));\n      if (requests.length == 0) {\n        supplyRequest.epma_supplyrequest_id = uuid();\n        supplyRequest.requeststatus = 'Incomplete';\n        supplyRequest.lastmodifiedby = '';\n        supplyRequest.requestedon = this.getDateTimeinISOFormat(moment().toDate());;\n        supplyRequest.requestedby = this.loggedInUserName;\n      } else {\n        supplyRequest.epma_supplyrequest_id = requests[0].epma_supplyrequest_id;\n        supplyRequest.requeststatus = requests[0].requeststatus;\n        supplyRequest.lastmodifiedby = this.loggedInUserName;\n        supplyRequest.lastmodifiedon = this.getDateTimeinISOFormat(moment().toDate());;\n        supplyRequest.requestedon = requests[0].requestedon;\n        supplyRequest.requestedby = requests[0].requestedby;\n      }\n\n      supplyRequest.prescription_id = prescription.prescription_id;\n      supplyRequest.medication_id = medicationCode;\n      supplyRequest.personid = this.personId;\n      supplyRequest.encounterid = this.encounter.encounter_id;\n\n      supplyRequest.requestednoofdays = null;\n      let currentposology = this.GetCurrentPosology(prescription);\n      if (currentposology.dosetype == 'units') {\n        supplyRequest.requestquantity = doseSize;\n        supplyRequest.requestedquantityunits = currentposology.__dose[0].doseunit;\n      } else if (currentposology.dosetype == 'strength') {\n        supplyRequest.requestquantity = (strengthneumerator / strengthdenominator).toFixed(2);\n        supplyRequest.requestedquantityunits = currentposology.__dose[0].strengthdenominatorunit;\n      }\n      supplyRequest.daterequired = null;\n      supplyRequest.labelinstructiosrequired = false;\n      supplyRequest.additionaldirections = '';\n      supplyRequest.isformulary = !isFormulary;\n      supplyRequest.ordermessage = '';\n      return supplyRequest;\n    }\n    else\n      return null;\n\n  }\n\n  static IsNullOrEmpty(o: string) {\n    if (o === undefined || o == null)\n      return true;\n    else if (o.trim() === \"\")\n      return true;\n\n    return false;\n  }\n\n\n  GetAdministrationDoseType(medication: Product) {\n    var m = medication;\n    var doseFormType = m.detail.doseFormCd;\n    var t = <any>{};\n    if (m.formularyIngredients.length == 1 && (m.formularyIngredients[0].ingredientName ?? \"\").toLowerCase() == \"oxygen\" && (doseFormType == DoseForm.Continuous || doseFormType == DoseForm.NA)) {\n      t.dose_type = DoseType.units;\n      t.dose_units = \"L/min\";\n    }\n    else\n      if (m.productType.toLowerCase() == \"vtm\") {\n\n        var ing = m.formularyIngredients;\n        if (ing.length > 0) {\n\n          //new logic - create an arry to bind to a dropdownlist of dose units\n\n          t.vtm_dose_units = [...new Set(ing.map(ig => ig.strengthValueNumeratorUnitDesc))]; //get distinct values using Set \n\n          t.vtm_dose_units.sort();\n          let emptyneumerators = t.vtm_dose_units.filter(x => AppService.IsNullOrEmpty(x) == true);\n          if (t.vtm_dose_units.length != 0 && emptyneumerators.length == 0) {\n            t.dose_type = DoseType.units;\n          }\n          else // there is at least one ingredient with value for no strength neumerator  - use unit dose form units if available \n            if (!AppService.IsNullOrEmpty(m.detail.unitDoseFormUnitsDesc))  //units available\n            {\n              t.dose_type = DoseType.units;\n              t.vtm_dose_units = [];\n              t.vtm_dose_units.push(m.detail.unitDoseFormUnitsDesc);\n            }\n            else\n              t.dose_type = DoseType.descriptive;\n        }\n      }\n      else\n        if (doseFormType == DoseForm.NA) {\n          t.dose_type = DoseType.descriptive;\n        }\n        else\n          if (doseFormType == DoseForm.Continuous) {\n            t.dose_type = DoseType.descriptive;\n          }\n          else\n            if (doseFormType == DoseForm.Discrete) {\n              //whenever there is strength denomninator unit - and there is one ingredient -  use dose/volume - if not  - use quantity/units\n              var ingredients = m.formularyIngredients;\n              if (ingredients && ingredients.length == 1) // one ingredient \n              {\n                var strength_value_denominatorunits = ingredients[0].strengthValueDenominatorUnitDesc;\n                var strength_value_neumeratorunits = ingredients[0].strengthValueNumeratorUnitDesc;\n\n                var strength_value_denominator = ingredients[0].strengthValueDenominator;\n                var strength_value_neumerator = ingredients[0].strengthValueNumerator;\n\n                if (!AppService.IsNullOrEmpty(strength_value_denominatorunits) && strength_value_denominatorunits.toLowerCase() == \"ml\" && !this.IsBasicFluid(m) && !((m.detail.formDesc ?? \"\").toLowerCase().includes(\"oral solution\")))//one ingredient and strength denominator units available\n                {\n                  t.dose_type = DoseType.strength;\n                  t.dose_strength_neumerator_units = strength_value_neumeratorunits;\n                  t.dose_strength_denominator_units = strength_value_denominatorunits;\n\n                  t.dose_strength_neumerator = +strength_value_neumerator;\n                  t.dose_strength_denominator = +strength_value_denominator;\n                }\n                else\n                  if (!AppService.IsNullOrEmpty(m.detail.unitDoseFormUnitsDesc))  //one ingredient and units available\n                  {\n                    t.dose_type = DoseType.units;\n                    t.dose_units = m.detail.unitDoseFormUnitsDesc;\n                  }\n                  else  //discrete and one ingredient and strength and units not available\n                    t.dose_type = DoseType.descriptive;\n              }\n              else // more than one ingredient\n                if (!AppService.IsNullOrEmpty(m.detail.unitDoseFormUnitsDesc))  //multiple ingredients and units available\n                {\n                  t.dose_type = DoseType.units;\n                  t.dose_units = m.detail.unitDoseFormUnitsDesc;\n                }\n                else  //discrete and multiple ingredienst and strength and units not available\n                  t.dose_type = DoseType.descriptive;\n            }\n\n    return t;\n  }\n\n  IsBasicFluid(medication) {\n    return medication.formularyAdditionalCodes && (medication.formularyAdditionalCodes.filter(x => x.additionalCodeSystem == \"Custom\" && x.additionalCode == \"BASIC_FLUID\").length != 0);\n  }\n\n  JSONTryParse(jsonstring) {\n    try {\n      return JSON.parse(jsonstring);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  CalculatePrescribedConcentration(p: Prescription) {\n    const primaryPosology = this.GetCurrentPosology(p);\n    const vtmstyle = p.orderformtype == \"vtmstyle\";\n    const dose_type = primaryPosology.dosetype;\n    const primaryMed = p.__medications.find(x => x.isprimary == true);\n    let productType = null;\n    if (primaryMed)\n      productType = primaryMed.producttype;\n    let dose = 0;\n    let units = \"\";\n    let prescribedConcentration = \"\";\n    const totalvolume = primaryPosology.totalinfusionvolume;\n    let diluents = p.__medications.filter(x => x.isprimary != true);\n    if (primaryPosology.__dose.length != 0) {\n      if (vtmstyle && productType.toLowerCase() != 'vtm') {\n        dose = +primaryPosology.__dose[0].dosesize; //+this.prescription.get('posology.strength.dose_size').value; \n        units = primaryPosology.__dose[0].doseunit; // this.formsettings.dose_units;\n      }\n      else if (dose_type == DoseType.units && +primaryPosology.__dose[0].dosestrength) {\n        dose = +primaryPosology.__dose[0].dosestrength;  //+this.prescription.get(\"posology.strength.totalstrength\").value;\n        units = primaryPosology.__dose[0].dosestrengthunits; //this.formsettings.singleIngredientStrength;\n      }\n      else if (dose_type == DoseType.strength) {\n        dose = +primaryPosology.__dose[0].strengthneumerator; //+this.prescription.get(\"posology.strength.dose_strength_neumerator\").value;\n        units = primaryPosology.__dose[0].strengthneumeratorunit; //this.formsettings.dose_strength_neumerator_units; \n      }\n      let concentration = this.FixToDecimalPlaces(dose / totalvolume, 2);\n      if (concentration == 0 || diluents.length != 0)\n        concentration = this.FixToDecimalPlaces(dose / totalvolume, 7);\n      prescribedConcentration = +dose > 0 && +totalvolume > 0 ?\n        [concentration, \" \", units, \"/ml\"].join(\"\") : \"\";\n    }\n    return prescribedConcentration;\n  }\n  FixToDecimalPlaces(input: number, n: number = 2) {\n    if (!isNaN(input)) {\n      if (input % 1 != 0)\n        return +(+input).toFixed(n).replace(/\\.0+$/g, '');\n      else\n        return input;\n    }\n    else if (input.toString().indexOf('-') != -1) {\n      let components = input.toString().split('-');\n      let comp1 = components[0];\n      let comp2 = components[1];\n      if (!isNaN(+comp1) && +comp1 > 0 && +comp1 != Infinity && !isNaN(+comp2) && +comp2 > 0 && +comp2 != Infinity) {\n        comp1 = (+comp1).toFixed(n).replace(/\\.0+$/g, '');\n        comp2 = (+comp2).toFixed(n).replace(/\\.0+$/g, '');\n        return comp1 + \"-\" + comp2;\n      }\n      else {\n        return input\n      }\n    }\n    else\n      return input;\n  }\n\n  GetDurationBetweenDates(from, to): string {\n    const fromdate = moment(from);\n\n    const enddate = moment(to);\n\n    const duration = moment.duration(enddate.diff(fromdate));\n\n    // Get the individual components (days, hours, minutes)\n    const days = Math.floor(duration.asDays());\n    const hours = duration.hours();\n    const minutes = duration.minutes();\n    let finalstringarray = []\n    if(days)\n      finalstringarray.push(`${days} day(s)`);\n    if(hours)\n      finalstringarray.push(`${hours} hour(s)`);\n    if(minutes)\n      finalstringarray.push(`${minutes} minute(s)`)\n\n    return finalstringarray.join(\" \");\n  }\n\n}\n\n\n\n","\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  token: string = \"empty\";\n  nextrefresh: number = 0;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public async getToken() {\n\n    var currentDate = new Date();\n    var currentDateMs = currentDate.setSeconds(currentDate.getSeconds());\n    if (this.nextrefresh < currentDateMs) {\n      await this.requestToken();\n    }\n    return this.token;\n\n  }\n\n\n  public async requestToken() {\n\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n    await this.httpClient.post(\"https://synapseidentityserver.dev.interneuron.io/connect/token\", \"grant_type=client_credentials&client_id=client&client_secret=secret&scope=dynamicapi.read terminologyapi.read terminologyapi.write\",\n      { headers: headers })\n      .toPromise().then((resp: any) => {\n\n        this.token = resp.access_token;\n        let currentDateTime = new Date();\n        this.nextrefresh = currentDateTime.setSeconds(currentDateTime.getSeconds() + parseInt(resp.expires_in) - 120)\n\n      }\n      )\n      .catch((result) => {\n        throw result;\n\n      });\n\n  }\n\n\n\n\n\n\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { forkJoin, Subscription } from \"rxjs\";\r\nimport { AdministerMedication, AdministrationWitness, DoseEvents, EmailModel, DSMedSupplyRequiredStatus, InfusionEvents, Medicationadministration, Medreconciliation, NursingInstruction, Prescription, PrescriptionEvent, Prescriptionreminders, Prescriptionreviewstatus, Prescriptionroutes, SupplyRequest, SupplyRequestMedications, PersonAwayPeriod, NursingInstructions, PrescriptionMedicaitonSupply, Remindersack } from \"../models/EPMA\";\r\nimport { ApirequestService } from \"./apirequest.service\";\r\nimport { AppService } from \"./app.service\";\r\nimport { filter, filterparam, filterParams, filters, orderbystatement, selectstatement } from 'src/app/models/filter.model';\r\nimport { Allergyintolerance, Personwarningupdate } from \"../models/allergy.model\";\r\nimport { Observation } from \"../models/observations.model\";\r\nimport moment from \"moment\";\r\nimport { Allergens, Conditions, PatientInfo, WarningContext } from \"../models/WarningServiceModal\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { SubjectsService } from \"./subjects.service\";\r\nimport { Common, InfusionType, PrescriptionContext, PrescriptionStatus, RefWeightType, SupplyRequestStatus } from \"./enum\";\r\nimport { UpsertTransactionManager } from \"src/app/services/upsert-transaction-manager.service\";\r\nimport { DiagnosisModel } from \"../models/diagnosis.model\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class DataRequest implements OnDestroy {\r\n    subscriptions = new Subscription();\r\n    patientDetails;\r\n    nextRefresh;\r\n    constructor(private apiRequest: ApirequestService, private appService: AppService, private subjects: SubjectsService) {\r\n\r\n    }\r\n\r\n    getSupplyRequest(cb: () => any) {\r\n        this.appService.SupplyRequest = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetListByPost?synapsenamespace=local&synapseentityname=epma_supplyrequest\", this.createSupplyRequestFilter()).subscribe(\r\n            (response) => {\r\n                let responseArray: SupplyRequest[] = response;\r\n                this.appService.SupplyRequest = responseArray; //.filter(s => s.requeststatus == SupplyRequestStatus.Incomplete || s.requeststatus == SupplyRequestStatus.Pending || s.requeststatus == SupplyRequestStatus.Approved);\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n\r\n    private createSupplyRequestFilter() {\r\n        let condition = \"encounterid = @encounterid or encounterid = @op_encounterid\";\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"encounterid\", this.appService.encounter.encounter_id));\r\n        pm.filterparams.push(new filterparam(\"op_encounterid\", Common.op_encounter_placeholder));\r\n\r\n        let select = new selectstatement(\"SELECT *\");\r\n\r\n        let orderby = new orderbystatement(\"ORDER BY lastmodifiedon DESC\");\r\n\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n\r\n        return JSON.stringify(body);\r\n    }\r\n\r\n\r\n    getDSMedSupplyRequest(pId: string, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_dsmedsupplyrequiredstatus&synapseattributename=prescription_id&attributevalue=\" + pId).subscribe(\r\n            (response) => {\r\n                let responseArray: DSMedSupplyRequiredStatus[] = JSON.parse(response);\r\n                cb(responseArray);\r\n            }\r\n        ));\r\n    }\r\n    getSupplyRequestMedication(srId: string, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_supplyrequestmedications&synapseattributename=epma_supplyrequest_id&attributevalue=\" + srId).subscribe(\r\n            (response) => {\r\n                let responseArray: SupplyRequestMedications[] = JSON.parse(response);\r\n                cb(responseArray);\r\n            }\r\n        ));\r\n    }\r\n    getReminders(cb: () => any) {\r\n        this.subscriptions.add(\r\n            this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_prescriptionreminders&synapseattributename=encounterid&attributevalue=\" + this.appService.encounter.encounter_id)\r\n                .subscribe(reminders => {\r\n                    let responseArray = JSON.parse(reminders);\r\n                    this.appService.Prescriptionreminders = [];\r\n                    for (let r of responseArray) {\r\n                        this.appService.Prescriptionreminders.push(<Prescriptionreminders>r);\r\n                    }\r\n                    this.getRemindersAck(() => {\r\n                        cb();\r\n                    });\r\n\r\n                }));\r\n    }\r\n    getRemindersAck(cb: () => any) {\r\n        this.subscriptions.add(\r\n            this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_remindersack&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id)\r\n                .subscribe(reminders => {\r\n                    let responseArray = JSON.parse(reminders);\r\n                    this.appService.remindersack = [];\r\n                    for (let r of responseArray) {\r\n                        let reminder = this.appService.Prescriptionreminders.find(x => x.epma_prescriptionreminders_id == r.epma_prescriptionreminders_id);\r\n                        r.__remindertext = reminder.message;\r\n                        r.__lastmodifiedby = reminder.lastmodifiedby;\r\n                        this.appService.remindersack.push(<Remindersack>r);\r\n                    }\r\n                    cb();\r\n                }));\r\n    }\r\n\r\n\r\n    getPharmacyReviewStatus(cb: () => any) {\r\n        this.appService.Prescriptionreviewstatus = [];\r\n\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_prescriptionreviewstatus&synapseattributename=person_id&attributevalue=\" + this.appService.personId).subscribe(\r\n            response => {\r\n                let responseArray = JSON.parse(response);\r\n\r\n                for (let r of responseArray) {\r\n                    this.appService.Prescriptionreviewstatus.push(<Prescriptionreviewstatus>r);\r\n                }\r\n                cb();\r\n            }));\r\n    }\r\n\r\n\r\n\r\n    // initialize application data\r\n    getAdminstrations(cb: () => any) {\r\n        this.appService.Medicationadministration = [];\r\n        this.appService.DoseEvents = [];\r\n        this.appService.InfusionEvents = [];\r\n\r\n        if (this.appService.Prescription && this.appService.Prescription.length != 0) {\r\n            let medicationAdministration = this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=medicationadministration&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id);\r\n            let medicationAdministration_op = this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=medicationadministration&synapseattributename=encounter_id&attributevalue=\" + Common.op_encounter_placeholder);\r\n\r\n            let doseEvent = this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_doseevents\", this.createEventsFilter());\r\n            let infusionEvent = this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_infusionevents\", this.createEventsFilter());\r\n\r\n            this.subscriptions.add(forkJoin([\r\n                medicationAdministration,\r\n                doseEvent,\r\n                infusionEvent,\r\n                medicationAdministration_op\r\n            ]).subscribe(([medicationadministration, doseevent, infusionevent, medicationAdministration_op]) => {\r\n\r\n                // initialize medication administration data\r\n                let responseArrayMed = JSON.parse(medicationadministration);\r\n                for (let r of responseArrayMed) {\r\n                    this.appService.Medicationadministration.push(<Medicationadministration>r);\r\n                }\r\n\r\n                let responseArrayMed_op = JSON.parse(medicationAdministration_op);\r\n                for (const r of responseArrayMed_op) {\r\n                    this.appService.Medicationadministration.push(<Medicationadministration>r);\r\n                }\r\n\r\n                // initialize dose event data\r\n                let responseArrayDose = doseevent;\r\n                for (let r of responseArrayDose) {\r\n                    this.appService.DoseEvents.push(<DoseEvents>r);\r\n                }\r\n                this.appService.DoseEvents.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                for (let dose of [].concat(...this.appService.Prescription.map(p => p.__posology.map(pos => pos.__dose)))) {\r\n                    dose.__doseEvent = this.appService.DoseEvents.filter(x => x.dose_id == dose.dose_id);\r\n                }\r\n\r\n                // initialize infusion event data\r\n                let responseArrayInfusion = infusionevent;\r\n                for (let r of responseArrayInfusion) {\r\n                    this.appService.InfusionEvents.push(<InfusionEvents>r);\r\n                }\r\n                this.appService.InfusionEvents.sort((a, b) => b._sequenceid - a._sequenceid);\r\n\r\n\r\n\r\n                cb();\r\n            }));\r\n        }\r\n        else {\r\n            cb();\r\n        }\r\n    }\r\n    PharmacyReviewReset(prescriptioncurrent: Prescription, event_id, cb: () => any) {\r\n\r\n        let prescriptionreviewstatus = new Prescriptionreviewstatus();\r\n        prescriptionreviewstatus.epma_prescriptionreviewstatus_id = uuid();\r\n        prescriptionreviewstatus.person_id = prescriptioncurrent.person_id;\r\n        prescriptionreviewstatus.prescription_id = prescriptioncurrent.prescription_id;\r\n        prescriptionreviewstatus.precriptionedited = false;\r\n        prescriptionreviewstatus.prescriptionstatuschange = true;\r\n        prescriptionreviewstatus.epma_prescriptionevent_id = event_id;\r\n        prescriptionreviewstatus.modifiedby = this.appService.loggedInUserName;\r\n        prescriptionreviewstatus.modifiedon =\r\n            this.appService.getDateTimeinISOFormat(moment().toDate());\r\n        prescriptionreviewstatus.modifieddatetime =\r\n            this.appService.getDateTimeinISOFormat(moment().toDate());\r\n        prescriptionreviewstatus.reviewcomments = \"\";\r\n\r\n        prescriptionreviewstatus.status = 'd219dd6d-aafc-4aa3-bad0-5ffcc87d0134';\r\n\r\n        prescriptionreviewstatus.oldcorrelationid = null;\r\n        prescriptionreviewstatus.newcorrelationid = null;\r\n        Object.keys(prescriptionreviewstatus).map((e) => {\r\n            if (e.startsWith('_')) delete prescriptionreviewstatus[e];\r\n        });\r\n        var upsertManager = new UpsertTransactionManager();\r\n        upsertManager.beginTran(this.appService.baseURI, this.apiRequest);\r\n\r\n        upsertManager.addEntity(\r\n            'local',\r\n            'epma_prescriptionreviewstatus',\r\n            JSON.parse(JSON.stringify(prescriptionreviewstatus))\r\n        );\r\n        upsertManager.save(\r\n            (resp: any) => {\r\n                this.appService.UpdateDataVersionNumber(resp);\r\n\r\n\r\n                this.appService.Prescriptionreviewstatus.push(prescriptionreviewstatus);\r\n                this.subjects.refreshTemplate.next(\r\n                    prescriptioncurrent.prescription_id\r\n                );\r\n\r\n                upsertManager.destroy();\r\n                cb();\r\n            },\r\n            (error) => {\r\n                this.appService.logToConsole(error);\r\n                upsertManager.destroy();\r\n                cb();\r\n\r\n                if (this.appService.IsDataVersionStaleError(error)) {\r\n                    this.appService.RefreshPageWithStaleError(error);\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    SendEmailForNonFormularyRequest(MedicationName: any[], Quantity: string, dateRequired: any) {\r\n        let Model = new EmailModel()\r\n        Model.Username = this.appService.appConfig.AppSettings.EmailSettings.Username;\r\n        Model.emailFrom = this.appService.appConfig.AppSettings.EmailSettings.emailFrom;\r\n        Model.fromName = this.appService.appConfig.AppSettings.EmailSettings.fromName;\r\n        Model.emailTo = this.appService.appConfig.AppSettings.EmailSettings.emailTo;\r\n        Model.subject = \"Non-formulary request\";\r\n        Model.password = this.appService.appConfig.AppSettings.EmailSettings.password;\r\n        let nhsnumber = this.appService.patientDetails.nhsnumber ? this.appService.patientDetails.nhsnumber.replaceAll(\" \", \"\").toString() : \"\"\r\n        Model.body = \"A non-formulary request has been created for \" + this.appService.patientDetails.fullname + \", \" + this.appService.patientDetails.hospitalnumber + \" \" + nhsnumber + \", who is under the care of \" + this.appService.encounterDetails.consultingdoctortext + \".  <br> <br>\";\r\n        for (let name of MedicationName) {\r\n            Model.body = Model.body + \"The request is for the supply of \" + name + \" \" + Quantity + \" is required by \" + moment(dateRequired).format(\"DD-MM-YYYY\") + \".<br> <br>  The request was created by \" + this.appService.loggedInUserName + \"<br><br>\";\r\n        }\r\n        this.subscriptions.add(\r\n            this.apiRequest.postRequest(this.appService.platfromServiceURI + \"/Email/SendEmail\", JSON.stringify(JSON.stringify(Model)))\r\n                .subscribe((response) => {\r\n\r\n                    console.log(response);\r\n\r\n\r\n\r\n                })\r\n        )\r\n    }\r\n\r\n    UndoTransfer(dose: any, cb: () => any) {\r\n        let doselist = [];\r\n        let existingDoseEvent: DoseEvents = new DoseEvents();\r\n        let pres = this.appService.Prescription.find(p => p.prescription_id == dose.prescription_id).__posology.find(po => po.posology_id == dose.posology_id);\r\n\r\n        if ((pres.infusiontypeid == \"ci\" || pres.infusiontypeid == InfusionType.pca) ||\r\n            (pres.infusiontypeid == \"rate\" && pres.frequency == \"variable\")\r\n        ) {\r\n            doselist = this.appService.events.sort((a, b) => new Date(a.eventStart).getTime() - new Date(b.eventStart).getTime()).filter(e => e.posology_id == dose.posology_id && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\"));\r\n        }\r\n\r\n        else {\r\n            let alldoselist = this.appService.events.sort((a, b) => new Date(a.eventStart).getTime() - new Date(b.eventStart).getTime()).filter(e => e.posology_id == dose.posology_id && !e.dose_id.includes(\"dur\") &&\r\n                !e.dose_id.includes(\"restart\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"addadjust\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\"));\r\n            var index = alldoselist.findIndex(x => x.dose_id == dose.dose_id);\r\n            doselist.push(dose)\r\n            let currentend = alldoselist[index + 1];\r\n            if (currentend.dose_id.includes(\"start\")) {\r\n                currentend = this.createEndevent(dose, pres)\r\n            }\r\n            doselist.push(currentend)\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        var upsertManager = new UpsertTransactionManager();\r\n        upsertManager.beginTran(this.appService.baseURI, this.apiRequest);\r\n        for (let admindose of doselist) {\r\n            existingDoseEvent = this.appService.DoseEvents.find(e => e.logicalid == admindose.dose_id\r\n                && e.posology_id == dose.posology_id\r\n                && e.eventtype == \"AdminTransfer\" && e.iscancelled == false);\r\n            if (existingDoseEvent) {\r\n                upsertManager.addEntity('core', 'doseevents', existingDoseEvent.doseevents_id, 'del');\r\n            }\r\n        }\r\n        if (upsertManager.entities.length > 0) {\r\n            upsertManager.save((resp) => {\r\n                this.appService.UpdateDataVersionNumber(resp);\r\n\r\n                this.appService.logToConsole(resp);\r\n                upsertManager.destroy();\r\n                cb();\r\n            },\r\n                (error) => {\r\n                    upsertManager.destroy();\r\n                    cb();\r\n                    // this.appService.logToConsole(error);\r\n                    upsertManager.destroy();\r\n\r\n                    if (this.appService.IsDataVersionStaleError(error)) {\r\n                        this.appService.RefreshPageWithStaleError(error);\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            cb();\r\n        }\r\n\r\n    }\r\n\r\n    transferCIAndRatevariable(doses: any, startDate: Date, startTime: string, transferStart: boolean, cb: (message: string) => any) {\r\n        let Transfertype = \"\"\r\n        if (transferStart) {\r\n            Transfertype = \"AdminTransfer\"\r\n        }\r\n        else {\r\n            Transfertype = \"Transfer\"\r\n        }\r\n\r\n\r\n\r\n\r\n        var upsertManager = new UpsertTransactionManager();\r\n        upsertManager.beginTran(this.appService.baseURI, this.apiRequest);\r\n        let newDoseDateTime = moment(new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate(), +startTime.split(':')[0], +startTime.split(':')[1]));\r\n        let timediffback = moment(newDoseDateTime).diff(doses[0].eventStart, 'minutes');\r\n        for (let dose of doses) {\r\n            let newDoseEventId: string = '';\r\n            let newDoseId: string = '';\r\n            let existingDoseEvent: DoseEvents = new DoseEvents();\r\n\r\n\r\n            existingDoseEvent = this.appService.DoseEvents.find(e => e.logicalid == dose.dose_id\r\n                && e.posology_id == dose.posology_id\r\n                && e.eventtype == Transfertype && e.iscancelled == false);\r\n\r\n\r\n            if (existingDoseEvent) {\r\n                newDoseEventId = existingDoseEvent.doseevents_id;\r\n            } else {\r\n                newDoseEventId = uuid();\r\n            }\r\n            newDoseId = dose.dose_id.split('_')[2];\r\n\r\n            let startDateTime = dose.isinfusion == true ? dose.dose_id.split('_')[1] : dose.dose_id.split('_')[0];\r\n\r\n            let dosedatetime = new Date(new Date(dose.eventStart).getTime() + timediffback * 60000);\r\n            var d = new Date();\r\n            var v = new Date();\r\n            v.setMinutes(d.getMinutes() + 30);\r\n\r\n            console.log(v)\r\n            let doseEvents = {};\r\n            let fromDate = moment(startDateTime.slice(0, 4) + \"-\" + startDateTime.slice(4, 6) + \"-\" + startDateTime.slice(6, 8) + \"T\" + startDateTime.slice(8, 10) + \":\" + startDateTime.slice(10, 12), \"YYYY-MM-DDTHH:mm\").toDate();\r\n            doseEvents = {\r\n                doseevents_id: newDoseEventId,\r\n                dose_id: newDoseId,\r\n                posology_id: dose.posology_id,\r\n                startdatetime: this.appService.getDateTimeinISOFormat(fromDate),\r\n                eventtype: Transfertype,\r\n                dosedatetime: this.appService.getDateTimeinISOFormat(dosedatetime),\r\n                iscancelled: false,\r\n                logicalid: dose.dose_id,\r\n                createdon: this.appService.getDateTimeinISOFormat(moment().toDate()),\r\n                modifiedon: this.appService.getDateTimeinISOFormat(moment().toDate()),\r\n                createdby: this.appService.loggedInUserName,\r\n                modifiedby: this.appService.loggedInUserName,\r\n            };\r\n            upsertManager.addEntity('core', 'doseevents', JSON.parse(JSON.stringify(doseEvents)));\r\n\r\n        }\r\n        upsertManager.save((resp) => {\r\n            this.appService.UpdateDataVersionNumber(resp);\r\n\r\n            this.appService.logToConsole(resp);\r\n            upsertManager.destroy();\r\n            cb(\"success\");\r\n\r\n\r\n        },\r\n            (error) => {\r\n                upsertManager.destroy();\r\n\r\n                // this.appService.logToConsole(error);\r\n                upsertManager.destroy();\r\n                cb(\"error\");\r\n\r\n                if (this.appService.IsDataVersionStaleError(error)) {\r\n                    this.appService.RefreshPageWithStaleError(error);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    createEndevent(dose: any, pres: any) {\r\n        let originalDoseStartTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == dose.posology_id).__dose.find(z => z.dose_id == dose.dose_id.split(\"_\")[2]).dosestartdatetime;\r\n        let originalDoseEndTime = this.appService.Prescription.find(x => x.prescription_id == pres.prescription_id).__posology.find(y => y.posology_id == dose.posology_id).__dose.find(z => z.dose_id == dose.dose_id.split(\"_\")[2]).doseenddatatime;\r\n\r\n        var a = moment(originalDoseEndTime);//now\r\n        var b = moment(originalDoseStartTime);\r\n        var convertToMinites = a.diff(b, 'minutes');\r\n\r\n        let splitLogicalId = dose.dose_id.split('_');\r\n        let date = moment();\r\n        date.set({ 'year': splitLogicalId[1].substring(0, 4), 'month': splitLogicalId[1].substring(4, 6) - 1, 'date': splitLogicalId[1].substring(6, 8), 'hour': splitLogicalId[1].substring(8, 10), 'minute': splitLogicalId[1].substring(10, 12), 'second': 0 })\r\n        let originalLogicid = moment(date).add(convertToMinites, \"minutes\");\r\n        let endtDatetemp = moment(dose.eventStart).add(convertToMinites, \"minutes\");\r\n\r\n        let endaddedtime = 'end_' + moment(originalLogicid).format('YYYYMMDDHHmm') + \"_\" + dose.dose_id.split(\"_\")[2];\r\n        return {\r\n            \"prescription_id\": dose.prescription_id,\r\n            \"posology_id\": dose.posology_id,\r\n            \"dose_id\": endaddedtime,\r\n            \"eventStart\": endtDatetemp,\r\n            \"eventEnd\": null,\r\n            \"prn\": false,\r\n            \"iscancel\": false,\r\n            \"doctorsorder\": false,\r\n            \"isinfusion\": true,\r\n            \"content\": \"<div class='InfusionCompleteoverdue'></div>\",\r\n            \"title\": \"Infusion Complete overdue\",\r\n            \"admitdone\": false,\r\n            \"opacityclass\": \"\",\r\n            \"diffrence\": 0,\r\n            \"stackclass\": false\r\n        }\r\n    }\r\n    transferRateInfution(dose: any, startDate: Date, startTime: string, transferStart: boolean, cb: (message: string) => any ) {\r\n        let doselist = [];\r\n   \r\n        doselist = this.appService.events.sort((a, b) => new Date(a.eventStart).getTime() - new Date(b.eventStart).getTime()).filter(e => e.posology_id == dose.posology_id && !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\"));\r\n        // if (this.appService.Prescription.find(p => p.__posology[0].posology_id == dose.posology_id && p.__posology[0].infusiontypeid == \"ci\")) {\r\n\r\n        let pres = this.appService.Prescription.find(p => p.prescription_id == dose.prescription_id).__posology.find(po => po.posology_id == dose.posology_id);\r\n\r\n        if ((pres.infusiontypeid == \"ci\" || pres.infusiontypeid == InfusionType.pca) ||\r\n            (pres.infusiontypeid == \"rate\" && pres.frequency == \"variable\")\r\n        ) {\r\n            this.transferCIAndRatevariable(doselist, startDate, startTime, transferStart, (message) => {\r\n                cb(message);\r\n            });\r\n        }\r\n        else {\r\n\r\n            let newDoseDateTime = moment(new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate(), +startTime.split(':')[0], +startTime.split(':')[1]));\r\n\r\n            // for (let dose of doselist)\r\n            //  var index = doselist.indexOf(dose);\r\n            var index = doselist.findIndex(x => x.dose_id == dose.dose_id);\r\n            let nextstartItem\r\n            let lastenditem\r\n            let currentend\r\n            let nexttime\r\n            let endtime\r\n            let currentendtime\r\n            if (doselist.length == 1 && doselist[0].dose_id.includes(\"start\")) {\r\n                currentend = this.createEndevent(dose, pres);\r\n                let dosesrate = [];\r\n                dosesrate.push(dose);\r\n\r\n                dosesrate.push(currentend);\r\n\r\n                this.transferCIAndRatevariable(dosesrate, startDate, startTime, transferStart, (message) => {\r\n                    cb(message);\r\n\r\n                });\r\n            }\r\n            if (index >= 0 && index < doselist.length - 1) {\r\n\r\n                currentend = doselist[index + 1];\r\n                nextstartItem = doselist[index + 2];\r\n\r\n                if (currentend.dose_id.includes(\"start\")) {\r\n\r\n                    currentend = this.createEndevent(dose, pres);\r\n                    nextstartItem = doselist[index + 1];\r\n                    let testcurrenttime= moment(currentend.eventStart).clone();\r\n                    testcurrenttime.add(this.appService.administrationTimeDiffInMinute, 'minutes')\r\n                    testcurrenttime = moment(currentend.eventStart).add(moment(newDoseDateTime).diff(dose.eventStart, 'minutes'), 'minutes')\r\n                    if(testcurrenttime.isSameOrAfter(moment(nextstartItem.eventStart))){\r\n                        cb(\"The administration event cannot be administered at a time after the next administration event.\");\r\n                        return;\r\n                    }\r\n                    \r\n                }\r\n\r\n\r\n                lastenditem = doselist[index - 1];\r\n                if (nextstartItem) {\r\n                    nexttime = moment(nextstartItem.eventStart).clone();\r\n                }\r\n                else {\r\n                    // if (this.appService.Prescription.find(p => p.prescription_id == dose.prescription_id).__posology.find(po => po.posology_id == dose.posology_id).prescriptionenddate) {\r\n                    //     nexttime = moment(this.appService.Prescription.find(p => p.prescription_id == dose.prescription_id).__posology.find(po => po.posology_id == dose.posology_id).prescriptionenddate).clone();\r\n                    // }\r\n                    // else {\r\n                    nexttime = moment().add(8, 'days');\r\n                    // }\r\n                }\r\n                if (index == 0) {\r\n                    // endtime = moment(this.appService.Prescription.find(x => x.prescription_id == dose.prescription_id).startdatetime)\r\n                    endtime = moment(this.appService.encounter.sortdate);\r\n                }\r\n                else {\r\n                    endtime = moment(lastenditem.eventStart).clone();\r\n                }\r\n                currentendtime = moment(currentend.eventStart).add(moment(newDoseDateTime).diff(dose.eventStart, 'minutes'), 'minutes')\r\n                nexttime.add(- this.appService.administrationTimeDiffInMinute, 'minutes')\r\n                if (index != 0) {\r\n                    endtime.add(this.appService.administrationTimeDiffInMinute, 'minutes')\r\n                }\r\n            }\r\n            let timediffback = moment(newDoseDateTime).diff(dose.eventStart, 'minutes');\r\n            let timediffForword = moment(newDoseDateTime).diff(nexttime, 'minutes');\r\n            if (timediffback < 0) {\r\n                //  let dif=moment(lastenditem.eventStart).diff(moment(newDoseDateTime),'minutes')\r\n                if (moment(endtime).isSameOrAfter(moment(newDoseDateTime))) {\r\n                    if (index == 0) {\r\n                        cb(\"The time of transfer cannot be earlier than the admission date/time\");\r\n                    }\r\n                    else {\r\n                        if (transferStart)\r\n                            cb(\"The administration event cannot be administered at a time before the previous administration event.\");\r\n                        else\r\n                            cb(\"The administration event cannot be transferred to a time before the previous administration event.\");\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    let dosesrate = [];\r\n                    dosesrate.push(dose);\r\n\r\n                    dosesrate.push(currentend);\r\n                    this.transferCIAndRatevariable(dosesrate, startDate, startTime, transferStart, (message) => {\r\n                        cb(message);\r\n\r\n                    });\r\n                }\r\n            }\r\n            else if (timediffback > 0) {\r\n\r\n                if (moment(currentendtime).isSameOrAfter(moment(nexttime))) {\r\n                    if (transferStart)\r\n                        cb(\"The administration event cannot be administered at a time after the next administration event.\");\r\n                    else\r\n                        cb(\"The administration event cannot be transferred to a time after the next administration event.\");\r\n                }\r\n                else {\r\n                    let dosesrate = [];\r\n                    dosesrate.push(dose);\r\n\r\n                    dosesrate.push(currentend);\r\n\r\n                    this.transferCIAndRatevariable(dosesrate, startDate, startTime, transferStart, (message) => {\r\n                        cb(message);\r\n\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                cb(\"success\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getmedreconciliaCompletedobject() {\r\n        this.appService.medReconcelationCompleteStatus = \"Pharmacy_To_Review\";\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_medreconciliation&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n\r\n                let medreconciliationobject = <Medreconciliation[]>JSON.parse(response);\r\n                if (medreconciliationobject[0]) {\r\n                    this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetObjectHistory?synapsenamespace=local&synapseentityname=epma_medreconciliation&id=\" + medreconciliationobject[0].epma_medreconciliation_id).subscribe(\r\n                        (response) => {\r\n\r\n                            let medreconciliationhistory = <Medreconciliation[]>JSON.parse(response);\r\n\r\n\r\n                            let iscomplete = false;\r\n                            if (medreconciliationhistory.find(x => x.status == \"Medicines Reconciliation completed\")) {\r\n                                iscomplete = true;\r\n                            }\r\n                            let str = moment().format(\"YYYYMMDD\");\r\n                            let teckObject = medreconciliationhistory.find(x => x.role == \"EPMA Pharmacy tech\" && moment(x.modifiedon).format(\"YYYYMMDD\") == moment().format(\"YYYYMMDD\"))\r\n                            let pharmacistObject = medreconciliationhistory.find(x => x.role == \"EPMA Pharmacist\" && moment(x.modifiedon).format(\"YYYYMMDD\") == moment().format(\"YYYYMMDD\"))\r\n\r\n                            if (iscomplete) {\r\n                                if (teckObject && pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacy_Reviewed_Medrec_Done\"\r\n                                }\r\n                                else if (teckObject && !pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacy_Technician_Reviewed_Medrec_Done\"\r\n                                }\r\n                                else if (!teckObject && pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacist_Reviewed_Medrec_Done\"\r\n                                }\r\n                                else if (!teckObject && !pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacy_To_Review_Medrec_Done\";\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (teckObject && !pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacy_Technician_Reviewed\"\r\n                                }\r\n                                // else if (!teckObject && pharmacistObject) {\r\n                                //     this.appService.medReconcelationCompleteStatus = \"reviewed by pharmacist only\"\r\n                                // }\r\n                                else if (!teckObject && !pharmacistObject) {\r\n                                    this.appService.medReconcelationCompleteStatus = \"Pharmacy_To_Review\";\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    ));\r\n                }\r\n            }\r\n        ));\r\n\r\n\r\n    }\r\n    // get all prescription\r\n    getAllPrescription(cb: () => any) {\r\n        this.GetManageAwayPeriod(() => {\r\n        });\r\n        this.getmedreconciliaCompletedobject();\r\n        this.subscriptions.add(\r\n            this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_prescriptiondetail\", this.createPrescriptionFilter())\r\n                .subscribe((response) => {\r\n                    this.appService.Prescription = [];\r\n                    // this.appService.Medication = [];\r\n                    for (let prescription of response) {\r\n                        if (prescription.correlationid) {\r\n                            prescription.__posology = JSON.parse(prescription.__posology);\r\n                            prescription.__routes = JSON.parse(prescription.__routes).sort((x, y) => y.isdefault - x.isdefault);\r\n                            prescription.__medications = JSON.parse(prescription.__medications);\r\n                            this.appService.Prescription.push(<Prescription>prescription);\r\n                        }\r\n                    }\r\n                    this.GetNursingInstructionsAndCustomWarnings(this.appService.Prescription, () => {\r\n                        this.subjects.refreshTemplate.next(undefined);\r\n                        cb();\r\n                    });\r\n                })\r\n        )\r\n    }\r\n    // get all metadata\r\n    getAllPrescriptionMeta(cb: () => any) {\r\n        this.subscriptions.add(\r\n            this.apiRequest.getRequest(this.appService.baseURI + \"/GetBaseViewList/epma_prescriptionmeta\")\r\n                .subscribe((response) => {\r\n                    this.appService.oxygenDevices = [];\r\n                    this.appService.oxygenprescriptionadditionalinfo = [];\r\n                    this.appService.obsScales = [];\r\n                    this.appService.MetaReviewstatus = [];\r\n                    this.appService.MetaPrescriptionstatus = [];\r\n                    this.appService.MetaPrescriptionDuration = [];\r\n                    this.appService.MetaPrescriptionadditionalcondition = [];\r\n                    this.appService.MetaPrescriptionSource = [];\r\n                    this.appService.MetaPrescriptioncontext = [];\r\n                    this.appService.MetaComplianceAid = [];\r\n                    for (let meta of JSON.parse(response)) {\r\n                        switch (meta.field) {\r\n                            case \"oxygendevices\": this.appService.oxygenDevices = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"oxygenprescriptionadditionalinfo\": this.appService.oxygenprescriptionadditionalinfo = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"observationscaletype\": this.appService.obsScales = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"reviewstatus\": this.appService.MetaReviewstatus = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"prescriptionstatus\": this.appService.MetaPrescriptionstatus = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"prescriptionduration\": this.appService.MetaPrescriptionDuration = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"prescriptionadditionalconditions\": this.appService.MetaPrescriptionadditionalcondition = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"prescriptionsource\": this.appService.MetaPrescriptionSource = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"prescriptioncontext\": this.appService.MetaPrescriptioncontext = JSON.parse(meta.data);\r\n                                break;\r\n                            case \"complianceaid\": this.appService.MetaComplianceAid = JSON.parse(meta.data);\r\n\r\n                        }\r\n                    }\r\n                    cb();\r\n                })\r\n        )\r\n    }\r\n    // get medication administration\r\n    getMedicationAdministration(cb: () => any) {\r\n        this.appService.Medicationadministration = [];\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=medicationadministration&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n                let responseArray = JSON.parse(response);\r\n                for (let r of responseArray) {\r\n                    this.appService.Medicationadministration.push(<Medicationadministration>r);\r\n                }\r\n                cb();\r\n            }));\r\n    }\r\n\r\n    updateDoseForPrescription(pid: string, cb: () => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=dose&synapseattributename=prescription_id&attributevalue=\" + pid).subscribe(\r\n            (response) => {\r\n                let responseArray = JSON.parse(response);\r\n\r\n                let p = this.appService.Prescription.find(x => x.prescription_id == pid);\r\n                if (p) {\r\n                    p.__posology.forEach(pos => {\r\n                        pos.__dose = responseArray.filter(d => d.posology_id == pos.posology_id);\r\n                    });\r\n                    // p.__posology.__dose = responseArray;\r\n                }\r\n                cb();\r\n            }));\r\n    }\r\n    // get dose event\r\n    getDoseEvents(cb: () => any) {\r\n        this.appService.DoseEvents = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_doseevents\", this.createEventsFilter()).subscribe(\r\n            (response) => {\r\n                let responseArray = (response);\r\n                for (let r of responseArray) {\r\n                    this.appService.DoseEvents.push(<DoseEvents>r);\r\n                }\r\n                this.appService.DoseEvents.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                cb();\r\n            }));\r\n    }\r\n    // get infusion event\r\n    getInfusionEvents(cb: () => any) {\r\n        this.appService.InfusionEvents = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_infusionevents\", this.createEventsFilter()).subscribe(\r\n            (response) => {\r\n                let responseArray = (response);\r\n                for (let r of responseArray) {\r\n                    this.appService.InfusionEvents.push(<InfusionEvents>r);\r\n                }\r\n                this.appService.InfusionEvents.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                cb();\r\n            }));\r\n    }\r\n    // get medication administration history\r\n    getMedicationAdministrationHistory(id, cb: (data) => any) {\r\n        this.appService.MedicationadministrationHistory = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_medicationadministrationhistory\", this.createAdministrationHistoryFilter(id)).subscribe(\r\n            (response) => {\r\n                let responseArray = response.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                for (let r of responseArray) {\r\n                    this.appService.MedicationadministrationHistory.push(<Medicationadministration>r);\r\n                }\r\n                if (this.appService.MedicationadministrationHistory.length > 0) {\r\n                    this.getProductHistory(this.appService.MedicationadministrationHistory, () => {\r\n                        this.getWitnessAuthHistory(this.appService.MedicationadministrationHistory, (data) => {\r\n                            cb(data);\r\n                        });\r\n                    });\r\n                } else {\r\n                    cb([]);\r\n                }\r\n\r\n            }));\r\n    }\r\n    getProductHistory(administration: any, cb: () => any) {\r\n        this.appService.AdministermedicationHistory = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_administeredmedhistory\", this.createAdministerMedHistoryFilter(administration)).subscribe(\r\n            (response) => {\r\n\r\n                let responseArray = response.sort((a, b) => b._sequenceid - a._sequenceid);;\r\n                if (responseArray.length > 0) {\r\n                    for (let r of responseArray) {\r\n                        this.appService.AdministermedicationHistory.push(<AdministerMedication>r);\r\n                    }\r\n\r\n                }\r\n                cb();\r\n            }));\r\n    }\r\n    getWitnessAuthHistory(administration: any, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_administrationwitnesshistory\", this.createAdministerMedHistoryFilter(administration)).subscribe(\r\n            (response) => {\r\n                let responseArray = response.sort((a, b) => b._sequenceid - a._sequenceid);;\r\n                cb(responseArray);\r\n            }));\r\n    }\r\n    getPrescriptionAdministrationHistory(id: string, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_prescriptionadministrationhistory\", this.createPrescriptionAdministrationHistoryFilter(id)).subscribe(\r\n            (response) => {\r\n                let responseArray = response; //.sort((a, b) => b._sequenceid - a._sequenceid);;\r\n                cb(responseArray);\r\n            }));\r\n    }\r\n    createAdministrationHistoryFilter(id) {\r\n        let condition = \"logicalid = @logicalid\";\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"logicalid\", id));\r\n        let select = new selectstatement(\"SELECT *\");\r\n        let orderby = new orderbystatement(\"ORDER BY 2\");\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        return JSON.stringify(body);\r\n    }\r\n    createPrescriptionAdministrationHistoryFilter(id) {\r\n        let condition = \"prescription_id = @prescription_id\";\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"prescription_id\", id));\r\n        let select = new selectstatement(\"SELECT *\");\r\n        let orderby = new orderbystatement(\"\");\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        return JSON.stringify(body);\r\n    }\r\n    // get dose event history\r\n    getDoseEventsHistory(id, cb: () => any) {\r\n        this.appService.DoseEventsHistory = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_doseeventshistory\", this.createAdministrationHistoryFilter(id)).subscribe(\r\n            (response) => {\r\n                let responseArray = response;\r\n                for (let r of responseArray) {\r\n                    this.appService.DoseEventsHistory.push(<DoseEvents>r);\r\n                }\r\n                this.appService.DoseEventsHistory.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                cb();\r\n            }));\r\n    }\r\n    // get infusion event history\r\n    getInfusionEventsHistory(id, cb: () => any) {\r\n        this.appService.InfusionEventsHistory = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_infusioneventshistory\", this.createAdministrationHistoryFilter(id)).subscribe(\r\n            (response) => {\r\n                let i = 0;\r\n                let responseArray = response.sort((a, b) => b._sequenceid - a._sequenceid);\r\n                for (let r of responseArray) {\r\n                    r._index = i++;\r\n                    this.appService.InfusionEventsHistory.push(<InfusionEvents>r);\r\n                }\r\n                cb();\r\n            }));\r\n    }\r\n    getAllergy(cb: () => any) {\r\n        this.appService.allergyintolerance = [];\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=allergyintolerance&synapseattributename=person_id&attributevalue=\" + this.appService.personId).subscribe(\r\n            (response) => {\r\n                let responseArray: Allergyintolerance[] = JSON.parse(response);\r\n                this.appService.allergyintolerance = responseArray;\r\n                this.appService.patientInfo.allergens = this.appService.allergyintolerance.filter(x => x.causativeagentcodesystem.toLowerCase() == \"SNOMED CT\".toLowerCase() && x.clinicalstatusvalue.toLowerCase() == \"Active\".toLowerCase()).map<Allergens>((r: Allergyintolerance) => {\r\n                    return { uname: r.causativeagentdescription, code: r.causativeagentcode, type: 1 };\r\n                });\r\n                this.GetDiagnosis(() => {\r\n                    cb();\r\n                });\r\n            }\r\n        ));\r\n    }\r\n    GetDiagnosis(cb: () => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=core&synapseentityname=diagnosis&synapseattributename=person_id&attributevalue=\" + this.appService.personId).subscribe(\r\n            (response) => {\r\n                let responseArray: DiagnosisModel[] = JSON.parse(response);\r\n                this.appService.patientInfo.conditions = responseArray.filter(x => x.clinicalstatus.toLowerCase() == \"Active\".toLowerCase()).map<Conditions>((r: DiagnosisModel) => {\r\n                    return { uname: r.diagnosistext, code: r.diagnosiscode, type: 1 };\r\n                });\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n    TriggerWarningUpdateOnChanges(cb: () => any, wc: string = WarningContext.ip) {\r\n\r\n        //get new allergies and diagnoses from entity\r\n        this.getAllergy(() => {\r\n            this.appService.patientInfo.allergens.sort((a, b) => a.code.localeCompare(b.code));\r\n            this.appService.patientInfo.conditions.sort((a, b) => a.code.localeCompare(b.code));\r\n\r\n            //get new height weight from entity\r\n            this.getHeightWeight(() => {\r\n                this.appService.patientInfo.age = this.appService.personAgeInDays;\r\n                this.appService.patientInfo.bsa = this.appService.bodySurfaceArea;\r\n                this.appService.patientInfo.gender = this.appService.gender.toLowerCase() == 'm' ? 1 : this.appService.gender.toLowerCase() == 'f' ? 2 : 3\r\n                this.appService.patientInfo.weight = +this.appService.refWeightValue;\r\n                this.appService.patientInfo.height = +this.appService.refHeightValue;\r\n                let warningcontextid = this.appService.encounter.encounter_id + '_' + wc;\r\n                let wservice = (wc == WarningContext.mod) ? this.appService.warningServiceMODContext : this.appService.warningServiceIPContext;\r\n                if (wc.startsWith(WarningContext.op)) {\r\n                    wservice = this.appService.warningService.GetWarningsInstance(wc);\r\n                }\r\n                //get current/lastrecorded allergies and height and weight from epma warningupdate entity\r\n                this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_personwarningupdate&synapseattributename=warningcontextid&attributevalue=\" + warningcontextid).subscribe(\r\n                    (response) => {\r\n                        let curr_warningupdate: Personwarningupdate[] = JSON.parse(response);\r\n                        let curr_dbWarningUpdate = new Personwarningupdate();\r\n                        let curr_patientInfo = new PatientInfo();\r\n\r\n                        if (curr_warningupdate.length > 0) {\r\n                            curr_dbWarningUpdate = curr_warningupdate[0];\r\n                            if (curr_dbWarningUpdate.allergens == 'null')\r\n                                curr_dbWarningUpdate.allergens = '[]';\r\n                            if (curr_dbWarningUpdate.conditions == 'null')\r\n                                curr_dbWarningUpdate.conditions = '[]';\r\n                            curr_patientInfo.age = this.appService.personAgeInDays;\r\n                            curr_patientInfo.allergens = JSON.parse(curr_dbWarningUpdate.allergens ?? \"[]\");\r\n                            curr_patientInfo.conditions = JSON.parse(curr_dbWarningUpdate.conditions ?? \"[]\");\r\n                            curr_patientInfo.bsa = curr_dbWarningUpdate.bsa\r\n                            curr_patientInfo.gender = this.appService.gender.toLowerCase() == 'm' ? 1 : this.appService.gender.toLowerCase() == 'f' ? 2 : 3\r\n                            curr_patientInfo.height = curr_dbWarningUpdate.height;\r\n                            curr_patientInfo.weight = curr_dbWarningUpdate.weight;\r\n                            curr_patientInfo.allergens.sort((a, b) => a.code.localeCompare(b.code));\r\n                            curr_patientInfo.conditions.sort((a, b) => a.code.localeCompare(b.code));\r\n\r\n                        } else {\r\n                            curr_dbWarningUpdate.epma_personwarningupdate_id = uuid();\r\n                        }\r\n                        if (this.appService.warningService) {\r\n                            let c1 = this.ComparePatientInfoObjects(curr_patientInfo, this.appService.patientInfo);\r\n                            let c2 = JSON.stringify(curr_patientInfo.allergens) == JSON.stringify(this.appService.patientInfo.allergens);\r\n                            let c3 = JSON.stringify(curr_patientInfo.conditions) == JSON.stringify(this.appService.patientInfo.conditions);\r\n\r\n                            if (!c1 || !c2 || !c3) {\r\n                                // call to refresh the warning from fdb\r\n                                this.appService.RefreshWarningsFromApi(() => {\r\n                                    cb();\r\n                                }, wservice);\r\n                                // insert/update epma_personwarningupdate if does not exist and anything chnage\r\n                                curr_dbWarningUpdate.allergens = JSON.stringify(this.appService.patientInfo.allergens);\r\n                                curr_dbWarningUpdate.conditions = JSON.stringify(this.appService.patientInfo.conditions);\r\n                                curr_dbWarningUpdate.height = +this.appService.patientInfo.height;\r\n                                curr_dbWarningUpdate.weight = +this.appService.patientInfo.weight;\r\n                                curr_dbWarningUpdate.bsa = +this.appService.patientInfo.bsa; //+(Math.sqrt(+this.appService.refWeightValue * + this.appService.patientInfo.weight) / 60).toFixed(2);\r\n                                curr_dbWarningUpdate.person_id = this.appService.personId;\r\n                                curr_dbWarningUpdate.encounter_id = this.appService.encounter.encounter_id;\r\n                                curr_dbWarningUpdate.warningcontextid = warningcontextid;\r\n                                if (curr_dbWarningUpdate.allergens == 'null')\r\n                                    curr_dbWarningUpdate.allergens = '[]';\r\n                                if (curr_dbWarningUpdate.conditions == 'null')\r\n                                    curr_dbWarningUpdate.conditions = '[]';\r\n                                this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI +\r\n                                    \"/PostObject?synapsenamespace=local&synapseentityname=epma_personwarningupdate\", curr_dbWarningUpdate, false)\r\n                                    .subscribe((saveResponse) => { })\r\n                                )\r\n                            }\r\n                            else {\r\n                                cb();\r\n                            }\r\n                        }\r\n                    }\r\n                ));\r\n            });\r\n        });\r\n    }\r\n\r\n    ComparePatientInfoObjects(obj_1, obj_2) {\r\n        for (var key in obj_1) {\r\n            if (obj_1.hasOwnProperty(key)) {\r\n                if (typeof obj_1[key] != \"object\") {\r\n                    if (obj_2.hasOwnProperty(key) && obj_1[key] == obj_2[key]) {\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n\r\n    }\r\n    getHeightWeight(cb: () => any) {\r\n        this.appService.observation = [];\r\n        this.subscriptions.add(\r\n            this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_getweightobservations\", this.createWeightFilter())\r\n                .subscribe((response) => {\r\n                    if (response.length > 0) {\r\n\r\n                        for (let r of response) {\r\n                            this.appService.observation.push(<Observation>r);\r\n                        }\r\n                        if (response[0].value != \"\" || response[0].value != null) {\r\n                            let today = new Date();\r\n                            let lastObservedDate = new Date(response[0].observationeventdatetime);\r\n\r\n                            this.appService.refWeightValue = response[0].value;\r\n                            this.appService.refWeightType = (response[0].method ?? \"\").indexOf(\"258083009\") >= 0 ? RefWeightType.estimated :\r\n                                (response[0].method ?? \"\").indexOf(\"115341008\") >= 0 ? RefWeightType.actual : null;\r\n\r\n                            this.appService.refWeightRecordedOn = moment(new Date(response[0].observationeventdatetime)).format('DD-MMM-yyyy');\r\n                            this.appService.logToConsole(`Weight: ${this.appService.refWeightValue} kg (${this.appService.refWeightRecordedOn})`);\r\n\r\n                            let todayMoment = moment([today.getFullYear(), today.getMonth(), today.getDate()]);\r\n                            let lastObservedMoment = moment([lastObservedDate.getFullYear(), lastObservedDate.getMonth(), lastObservedDate.getDate()]);\r\n                            const diffDays = todayMoment.diff(lastObservedMoment, 'days');\r\n                            this.appService.logToConsole(diffDays);\r\n\r\n                            if (diffDays == 0) {\r\n                                this.appService.isWeightCapturedForToday = true;\r\n                            } else {\r\n                                this.appService.isWeightCapturedForToday = false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.appService.isWeightCapturedForToday = false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.appService.isWeightCapturedForToday = false;\r\n                        this.appService.refWeightValue = undefined;\r\n                        this.appService.refWeightType = null;\r\n                        this.appService.refWeightRecordedOn = \"\";\r\n                    }\r\n                    this.appService.logToConsole(this.appService.isWeightCapturedForToday);\r\n\r\n                    this.subscriptions.add(\r\n                        this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_getheightobservations\", this.createHeightFilter())\r\n                            .subscribe((response) => {\r\n                                if (response.length > 0) {\r\n                                    if (response[0].value != \"\" || response[0].value != null) {\r\n                                        this.appService.isHeightCaptured = true;\r\n                                        this.appService.refHeightValue = response[0].value;\r\n\r\n                                        if (!isNaN(+this.appService.refWeightValue) && +this.appService.refWeightValue > 0) {\r\n                                            this.appService.bodySurfaceArea = +(Math.sqrt(+this.appService.refWeightValue * +response[0].value) / 60).toFixed(2);\r\n                                        }\r\n                                    } else {\r\n                                        this.appService.isHeightCaptured = false;\r\n                                    }\r\n                                } else {\r\n                                    this.appService.isHeightCaptured = false;\r\n                                    this.appService.refHeightValue = undefined;\r\n                                    this.appService.bodySurfaceArea = undefined;\r\n                                }\r\n\r\n                                cb();\r\n\r\n                            }));\r\n                }));\r\n    }\r\n    createWeightFilter() {\r\n        // let condition = \"person_id = @person_id and encounter_id = @encounter_id\";\r\n        let condition = \"person_id = @person_id\";\r\n\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"person_id\", this.appService.personId));\r\n        // pm.filterparams.push(new filterparam(\"encounter_id\", this.appService.encounter.encounter_id));\r\n\r\n        let select = new selectstatement(\"SELECT *\");\r\n\r\n        let orderby = new orderbystatement(\"ORDER BY observationeventdatetime desc\");\r\n\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n\r\n        return JSON.stringify(body);\r\n    }\r\n    createHeightFilter() {\r\n        // let condition = \"person_id = @person_id and encounter_id = @encounter_id\";\r\n        let condition = \"person_id = @person_id\";\r\n\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"person_id\", this.appService.personId));\r\n        // pm.filterparams.push(new filterparam(\"encounter_id\", this.appService.encounter.encounter_id));\r\n\r\n        let select = new selectstatement(\"SELECT *\");\r\n\r\n        let orderby = new orderbystatement(\"ORDER BY observationeventdatetime desc\");\r\n\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n\r\n        return JSON.stringify(body);\r\n    }\r\n    // get prescription route\r\n    // getPriscriptionRoutes() {\r\n    //     this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_prescriptionroutes\", this.createPrescriptionRoutesFilter()).subscribe(\r\n    //         (response) => {\r\n    //             let responseArray = (response);\r\n\r\n    //             for (let r of responseArray) {\r\n    //                 this.appService.Prescriptionroutes.push(<Prescriptionroutes>r);\r\n    //             }\r\n    //         }));\r\n    // }\r\n    private createEventsFilter() {\r\n\r\n        if (this.appService.Prescription.length == 0) {\r\n            return;\r\n        }\r\n        let index = 0\r\n        const pm = new filterParams();\r\n        const condition = []\r\n        for (let pos of this.appService.Prescription.map(p => p.__posology)) {\r\n            pos.forEach(pos1 => {\r\n                let para = this.makeId(5);\r\n                if (index === 0)\r\n                    condition.push(\"posology_id =@\" + para);\r\n                else\r\n                    condition.push(\" or posology_id =@\" + para);\r\n\r\n                pm.filterparams.push(new filterparam(\"@\" + para, pos1.posology_id));\r\n                index = index + 1\r\n            });\r\n\r\n        }\r\n\r\n        const f = new filters()\r\n        f.filters.push(new filter(condition.join('')));\r\n\r\n        const select = new selectstatement(\"SELECT * \");\r\n        const orderby = new orderbystatement(\"ORDER BY 1\");\r\n\r\n\r\n        const body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        let jsonobj = JSON.stringify(body);\r\n        return jsonobj;\r\n    }\r\n    private createPrescriptionRoutesFilter() {\r\n        if (this.appService.Prescription.length == 0) {\r\n            return;\r\n        }\r\n        let index = 0\r\n        const pm = new filterParams();\r\n        const condition = []\r\n        for (let prescription of this.appService.Prescription) {\r\n            let para = this.makeId(5);\r\n            if (index === 0)\r\n                condition.push(\"prescription_id =@\" + para);\r\n            else\r\n                condition.push(\" or prescription_id =@\" + para);\r\n\r\n            pm.filterparams.push(new filterparam(\"@\" + para, prescription.prescription_id));\r\n            index = index + 1\r\n        }\r\n\r\n        const f = new filters()\r\n        f.filters.push(new filter(condition.join('')));\r\n\r\n        const select = new selectstatement(\"SELECT * \");\r\n        const orderby = new orderbystatement(\"ORDER BY 1\");\r\n\r\n\r\n        const body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        let jsonobj = JSON.stringify(body);\r\n        return jsonobj;\r\n    }\r\n    private createPrescriptionFilter() {\r\n        let condition = \"person_id = @person_id and (encounter_id = @encounter_id or prescriptioncontext_id = @prescriptioncontext_id)\";\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"person_id\", this.appService.personId));\r\n        pm.filterparams.push(new filterparam(\"encounter_id\", this.appService.encounter.encounter_id));\r\n        pm.filterparams.push(new filterparam(\"prescriptioncontext_id\", this.appService.MetaPrescriptioncontext.find(x => x.context == PrescriptionContext.Outpatient).prescriptioncontext_id));\r\n\r\n        let select = new selectstatement(\"SELECT *\");\r\n\r\n        let orderby = new orderbystatement(\"ORDER BY prescription_id desc\");\r\n\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n\r\n        return JSON.stringify(body);\r\n    }\r\n\r\n    private makeId(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    // GetNursingInstructionsAndCustomWarnings(parray: Array<Prescription>, cb: Function) {\r\n    //     let i = 0;\r\n    //     let inpatientid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Inpatient).prescriptioncontext_id;\r\n    //     let dischargeid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Discharge).prescriptioncontext_id;\r\n    //     let ordersetid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Orderset).prescriptioncontext_id;\r\n    //     let opid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Outpatient).prescriptioncontext_id;\r\n\r\n    //     let filtered = parray.filter(p => p.prescriptioncontext_id == inpatientid || p.prescriptioncontext_id == ordersetid || p.prescriptioncontext_id == dischargeid || p.prescriptioncontext_id == opid);\r\n    //     if (filtered.length == 0) {\r\n    //         cb();\r\n    //     }\r\n    //     else {\r\n    //         let medcodes = [];\r\n    //         filtered.forEach(p => {\r\n    //             const m = p.__medications.find(x => x.isprimary && x.producttype != \"custom\");\r\n    //             if (m) {\r\n    //                 const code = m.__codes.find(x => x.terminology == \"formulary\");\r\n    //                 if (code && !medcodes.includes(code.code)) {\r\n    //                     medcodes.push(code.code);\r\n    //                 }\r\n    //             }\r\n    //         });\r\n    //         if (medcodes.length == 0) {\r\n    //             cb();\r\n    //         }\r\n    //         else {\r\n    //             medcodes.forEach(async (mc) => {\r\n    //                 var endpoint = this.appService.appConfig.uris.terminologybaseuri + \"/Formulary/getformularydetailruleboundbycode\";\r\n    //                 this.subscriptions.add(this.apiRequest.getRequest(`${endpoint}/${mc}?api-version=1.0`)\r\n    //                     .subscribe((response) => {\r\n    //                         i++;\r\n    //                         if (response && response.length != 0) {\r\n\r\n    //                             let fp = filtered.filter(p => p.__medications.find(m => m.isprimary == true).__codes.find(x => x.terminology == \"formulary\").code == mc);\r\n    //                             fp.forEach(p => {\r\n    //                                 p.__nursinginstructions = [];\r\n    //                                 p.__customWarning = [];\r\n    //                                 p.__drugcodes = [];\r\n    //                                 p.__drugindications = [];\r\n    //                                 console.log(response.detail);\r\n    //                                 p.__ignoreDuplicateWarnings = response.detail.ignoreDuplicateWarnings;\r\n    //                                 if (response.detail.customWarnings)\r\n    //                                     p.__customWarning = Object.assign(response.detail.customWarnings);\r\n    //                                 else\r\n    //                                     p.__customWarning = [];\r\n\r\n    //                                 if (response.detail.titrationTypes && response.detail.titrationTypes.length > 0) {\r\n    //                                     p.titrationtype = response.detail.titrationTypes[0].desc;\r\n    //                                     p.titrationtypecode = response.detail.titrationTypes[0].cd;\r\n    //                                 }\r\n\r\n    //                                 response.detail.endorsements.forEach(e => {\r\n    //                                     p.__nursinginstructions.push(new NursingInstruction(null, \"Endorsement\", e));\r\n    //                                 });\r\n    //                                 response.detail.medusaPreparationInstructions.forEach(e => {\r\n    //                                     p.__nursinginstructions.push(new NursingInstruction(null, \"Medusa Instructions\", e));\r\n    //                                 });\r\n\r\n    //                                 if (response.formularyAdditionalCodes)\r\n    //                                     p.__drugcodes = Object.assign(response.formularyAdditionalCodes);\r\n    //                                 else\r\n    //                                     p.__drugcodes = null;\r\n\r\n    //                                 if (response.detail.licensedUses)\r\n    //                                     response.detail.licensedUses.forEach(u => {\r\n    //                                         p.__drugindications.push(u);\r\n    //                                     });\r\n    //                                 if (response.detail.unLicensedUses)\r\n    //                                     response.detail.unLicensedUses.forEach(u => {\r\n    //                                         p.__drugindications.push(u);\r\n    //                                     });\r\n    //                             });\r\n    //                         }\r\n    //                         if (i == medcodes.length)\r\n    //                             cb();\r\n    //                     }, (error) => {\r\n    //                         i++;\r\n    //                         this.appService.logToConsole(error);\r\n    //                         console.log(\"no response for medication:\" + mc)\r\n    //                         if (i == medcodes.length)\r\n    //                             cb();\r\n    //                     }));\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    GetNursingInstructionsAndCustomWarnings(parray: Array<Prescription>, cb: Function) {\r\n        let inpatientid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Inpatient).prescriptioncontext_id;\r\n        let dischargeid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Discharge).prescriptioncontext_id;\r\n        let ordersetid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Orderset).prescriptioncontext_id;\r\n        let opid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Outpatient).prescriptioncontext_id;\r\n        let moaid = this.appService.MetaPrescriptioncontext.find(pc => pc.context == PrescriptionContext.Admission).prescriptioncontext_id;\r\n\r\n\r\n        let filtered = parray.filter(p => p.prescriptioncontext_id == inpatientid || p.prescriptioncontext_id == ordersetid || p.prescriptioncontext_id == dischargeid || p.prescriptioncontext_id == opid || p.prescriptioncontext_id == moaid);\r\n        if (filtered.length == 0) {\r\n            cb();\r\n        }\r\n        else {\r\n            let medcodes = []\r\n            let unprocessedCodes=[]\r\n\r\n            filtered.forEach(p => {\r\n                const m = p.__medications.find(x => x.isprimary && x.producttype != \"custom\");\r\n                if (m) {\r\n                    const code = m.__codes.find(x => x.terminology == \"formulary\");\r\n                    if (code && !medcodes.includes(code.code)) {\r\n                        medcodes.push(code.code);\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n            if (medcodes.length > 0) {\r\n                // medcodes = []\r\n                // medcodes.push(\"test\");\r\n                // medcodes.push(\"323739006\");\r\n                let exitcounter = 0;\r\n                let splitrequests = this.appService.appConfig.AppSettings.SplitOnLoadRuleBoundReqs;\r\n                const triggercount = this.appService.appConfig.AppSettings.SplitOnLoadRuleBoundReqsTrigger;\r\n                const endpoint = this.appService.appConfig.uris.terminologybaseuri + \"/Formulary/getformularybasicdetailruleboundbycodes\"\r\n                splitrequests = medcodes.length > triggercount ? splitrequests : 1\r\n                const perreq_count = Math.floor(medcodes.length / splitrequests);\r\n                const lastreq_count = perreq_count + (medcodes.length % splitrequests);\r\n                for (let i = 0; i < splitrequests; i++) {\r\n                    const st = i == 0 ? 0 : i * perreq_count;\r\n                    const ed = (i == splitrequests - 1) ? (st + lastreq_count) : (st + perreq_count);\r\n                    this.subscriptions.add(this.apiRequest.postRequest(endpoint, medcodes.slice(st, ed), false)\r\n                        .subscribe((response) => {\r\n                            exitcounter++;\r\n                            if (response && response.length != 0) {\r\n                                filtered.forEach(p => {\r\n                                    const primarymedication = p.__medications.find(x => x.isprimary);\r\n                                    const dmd = primarymedication.__codes.find(x => x.terminology == \"formulary\");\r\n                                    if (dmd && primarymedication.producttype != 'custom') {\r\n                                        const formulary = response.find(x => x.code == dmd.code);\r\n                                        if (formulary) {\r\n\r\n                                            p.__nursinginstructions = [];\r\n                                            p.__customWarning = [];\r\n                                            p.__drugcodes = [];\r\n                                            p.__drugindications = [];\r\n\r\n                                            if (formulary.detail.ignoreDuplicateWarnings)\r\n                                                p.__ignoreDuplicateWarnings = formulary.detail.ignoreDuplicateWarnings;\r\n\r\n                                            if (formulary.detail.customWarnings)\r\n                                                p.__customWarning = Object.assign(formulary.detail.customWarnings);\r\n                                            else\r\n                                                p.__customWarning = [];\r\n\r\n                                            if (formulary.detail.titrationTypes && formulary.detail.titrationTypes.length > 0) {\r\n                                                p.titrationtype = formulary.detail.titrationTypes[0].desc;\r\n                                                p.titrationtypecode = formulary.detail.titrationTypes[0].cd;\r\n                                            }\r\n\r\n                                            formulary.detail.endorsements.forEach(e => {\r\n                                                p.__nursinginstructions.push(new NursingInstruction(null, \"Endorsement\", e));\r\n                                            });\r\n                                            formulary.detail.medusaPreparationInstructions.forEach(e => {\r\n                                                p.__nursinginstructions.push(new NursingInstruction(null, \"Medusa Instructions\", e));\r\n                                            });\r\n\r\n                                            if (formulary.formularyAdditionalCodes)\r\n                                                p.__drugcodes = Object.assign(formulary.formularyAdditionalCodes);\r\n                                            else\r\n                                                p.__drugcodes = null;\r\n\r\n                                            if (formulary.detail.licensedUses)\r\n                                                formulary.detail.licensedUses.forEach(u => {\r\n                                                    p.__drugindications.push(u);\r\n                                                });\r\n                                            if (formulary.detail.unLicensedUses)\r\n                                                formulary.detail.unLicensedUses.forEach(u => {\r\n                                                    p.__drugindications.push(u);\r\n                                                });\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (exitcounter == splitrequests) {\r\n                                \r\n                                filtered.filter(x => !x.__drugcodes).forEach(p => {\r\n                                    const m = p.__medications.find(x => x.isprimary && x.producttype != \"custom\");\r\n                                    if (m) {\r\n                                        const code = m.__codes.find(x => x.terminology == \"formulary\");\r\n                                        if (code) {\r\n                                            if (!unprocessedCodes.find(x => x.code == code.code)) {\r\n                                                unprocessedCodes.push({ \"code\": code.code, \"name\": m.name, \"type\": m.producttype })\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                                if (unprocessedCodes.length != 0) {\r\n                                    this.GetNewCodeForChangedDMDCodes(unprocessedCodes, filtered, cb);\r\n                                } else {\r\n                                    cb();\r\n                                }\r\n\r\n                                // cb();\r\n                            }\r\n                        }, (error) => {\r\n                            exitcounter++;\r\n                            this.appService.logToConsole(error);\r\n                            console.log(\"Error loading formulary details by codes\");\r\n                            if (exitcounter == splitrequests) {\r\n                                filtered.filter(x => !x.__drugcodes).forEach(p => {\r\n                                    const m = p.__medications.find(x => x.isprimary && x.producttype != \"custom\");\r\n                                    if (m) {\r\n                                        const code = m.__codes.find(x => x.terminology == \"formulary\");\r\n                                        if (code) {\r\n                                            if (!unprocessedCodes.find(x => x.code == code.code)) {\r\n                                                unprocessedCodes.push({ \"code\": code.code, \"name\": m.name, \"type\": m.producttype })\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                                if (unprocessedCodes.length != 0) {\r\n                                    this.GetNewCodeForChangedDMDCodes(unprocessedCodes, filtered, cb);\r\n                                } else {\r\n                                    cb();\r\n                                }\r\n\r\n                                // cb();                               \r\n                            }\r\n                            // if (error.status == 404) //single medication, // or all medications  404\r\n                            // {\r\n                            //         cb();\r\n                            // }\r\n                        }));\r\n                }\r\n            }\r\n            else {\r\n                cb();\r\n            }\r\n        }\r\n    }\r\n\r\n    GetNewCodeForChangedDMDCodes(unprocessedCodes, filtered, callback) {\r\n        let counter = 0;\r\n        let newcodes = [];\r\n        for (let i = 0; i < unprocessedCodes.length; i++) {\r\n            //foreach unprocessed code search formulary \r\n            this.SearchFormulary(unprocessedCodes[i].name, unprocessedCodes[i].type, unprocessedCodes[i].code,\r\n                (results, name, oldcode) => {\r\n                    counter++;\r\n                    if (results && results.data.length > 0) {\r\n                        let allmatches = results.data.filter(x => x.name === name && x.code != oldcode);\r\n                        // let mostrecentmatch = allmatches.length ? allmatches[allmatches.length - 1] : null;\r\n                        // if (mostrecentmatch)\r\n                        // {\r\n                        //     newcodes.push(mostrecentmatch.code);\r\n                        // }\r\n                        allmatches.forEach(m => {\r\n                            newcodes.push({ \"newcode\": m.code, \"oldcode\": oldcode });\r\n                        });\r\n                    }\r\n                    if (counter == unprocessedCodes.length) {\r\n                        // console.log(\"newcodes\");\r\n                        // console.log(newcodes);\r\n\r\n                        const endpoint = this.appService.appConfig.uris.terminologybaseuri + \"/Formulary/getformularybasicdetailruleboundbycodes\"\r\n                        this.subscriptions.add(this.apiRequest.postRequest(endpoint, newcodes.map(x=> x.newcode), false)\r\n                            .subscribe((response) => {\r\n                                if (response && response.length != 0) {\r\n                                    filtered.filter(x=>!x.__drugcodes).forEach(p => {\r\n                                        const primarymedication = p.__medications.find(x => x.isprimary);\r\n                                        const dmd = primarymedication.__codes.find(x => x.terminology == \"formulary\");\r\n                                        if (dmd && primarymedication.producttype != 'custom') {\r\n                                            //get first new code response for the old code //there should alwasy be one // code picks first one if there ever is more than one\r\n                                            const formulary = response.find(x => newcodes.filter(y => y.oldcode == dmd.code).map(n => n.newcode).includes(x.code));\r\n                                            if (formulary) {\r\n\r\n                                                p.__nursinginstructions = [];\r\n                                                p.__customWarning = [];\r\n                                                p.__drugcodes = [];\r\n                                                p.__drugindications = [];\r\n\r\n                                                if (formulary.detail.ignoreDuplicateWarnings)\r\n                                                    p.__ignoreDuplicateWarnings = formulary.detail.ignoreDuplicateWarnings;\r\n\r\n                                                if (formulary.detail.customWarnings)\r\n                                                    p.__customWarning = Object.assign(formulary.detail.customWarnings);\r\n                                                else\r\n                                                    p.__customWarning = [];\r\n\r\n                                                if (formulary.detail.titrationTypes && formulary.detail.titrationTypes.length > 0) {\r\n                                                    p.titrationtype = formulary.detail.titrationTypes[0].desc;\r\n                                                    p.titrationtypecode = formulary.detail.titrationTypes[0].cd;\r\n                                                }\r\n\r\n                                                formulary.detail.endorsements.forEach(e => {\r\n                                                    p.__nursinginstructions.push(new NursingInstruction(null, \"Endorsement\", e));\r\n                                                });\r\n                                                formulary.detail.medusaPreparationInstructions.forEach(e => {\r\n                                                    p.__nursinginstructions.push(new NursingInstruction(null, \"Medusa Instructions\", e));\r\n                                                });\r\n\r\n                                                if (formulary.formularyAdditionalCodes)\r\n                                                    p.__drugcodes = Object.assign(formulary.formularyAdditionalCodes);\r\n                                                // else\r\n                                                //     p.__drugcodes = null;\r\n\r\n                                                 p.__drugcodes.push({\r\n                                                    \"additionalCode\": `${formulary.code}`,\r\n                                                    \"additionalCodeSystem\": \"dmd\",                                                    \r\n                                                  })\r\n                                                \r\n\r\n                                                if (formulary.detail.licensedUses)\r\n                                                    formulary.detail.licensedUses.forEach(u => {\r\n                                                        p.__drugindications.push(u);\r\n                                                    });\r\n                                                if (formulary.detail.unLicensedUses)\r\n                                                    formulary.detail.unLicensedUses.forEach(u => {\r\n                                                        p.__drugindications.push(u);\r\n                                                    });\r\n                                            }\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                                callback();\r\n                            }, (error) => {\r\n                                this.appService.logToConsole(error);\r\n                                console.log(\"Error loading formulary details by new codes\");\r\n                                callback();\r\n\r\n                            }));\r\n\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    SearchFormulary(searthTerm, producttype, code, cb) {\r\n        var p = new SearchFormulary_PostData();\r\n        p.searchTerm = searthTerm;\r\n        if (p.searchTerm == \"\")\r\n           {\r\n            cb(null, searthTerm,code);\r\n            return;\r\n           }  \r\n        p.formularyStatusCd = [];\r\n        p.formularyStatusCd.push(\"001\");\r\n        p.formularyStatusCd.push(\"002\");\r\n        p.productType = producttype;\r\n        const postdata = JSON.stringify(p)\r\n        if (postdata) {\r\n            this.subscriptions.add(this.apiRequest.postRequest(this.appService.appConfig.uris.terminologybaseuri + \"/Formulary/searchformularies?api-version=1.0\", postdata)\r\n                .subscribe((response) => {\r\n                    if (response && response.data && response.data.length != 0) {\r\n                        cb(response, searthTerm,code);\r\n                    }\r\n                    else {\r\n                        cb(null, searthTerm,code);\r\n                    }\r\n                }, (error) => {\r\n                    this.appService.logToConsole(error);\r\n                    console.log(\"Error searching formulary details for new codes\");\r\n                    cb(null, searthTerm,code);\r\n                }));\r\n        }\r\n    }\r\n\r\n    GetWitnesAuthentication(cb: () => any) {\r\n        this.appService.administrationWitness = [];\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_administrationwitness&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n                let responseArray: AdministrationWitness[] = JSON.parse(response);\r\n                this.appService.administrationWitness = responseArray;\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n    GetPrescriptionEvent(cb: () => any) {\r\n        this.appService.prescriptionEvent = [];\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_prescriptionevent&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n                let responseArray: PrescriptionEvent[] = JSON.parse(response);\r\n                this.appService.prescriptionEvent = responseArray.sort((a, b) => (moment(a.datetime) > moment(b.datetime)) ? -1 : 0);\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n    GetMedicationSupply(cb: () => any) {\r\n        this.appService.PrescriptionMedicaitonSupply = [];\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_prescriptionmedicaitonsupply&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n                this.appService.PrescriptionMedicaitonSupply = JSON.parse(response);\r\n\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n    GetMedicationSupplyHistory(id, cb: (data) => any) {\r\n        this.appService.PatientDrugHistory = [];\r\n        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI + \"/GetBaseViewListByPost/epma_medicationsupplyhistory\", this.createMedicationSupplyHistoryFilter(id)).subscribe(\r\n            (response) => {\r\n                let data = response;\r\n                this.appService.PatientDrugHistory = data;\r\n                cb(data);\r\n            }\r\n        ));\r\n    }\r\n\r\n    createMedicationSupplyHistoryFilter(prescriptionid) {\r\n        let condition = \"prescriptionid = @prescriptionid\";\r\n        let f = new filters()\r\n        f.filters.push(new filter(condition));\r\n        let pm = new filterParams();\r\n        pm.filterparams.push(new filterparam(\"prescriptionid\", prescriptionid));\r\n        let select = new selectstatement(\"SELECT *\");\r\n        let orderby = new orderbystatement(\"ORDER BY _createddate desc\");\r\n        let body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        return JSON.stringify(body);\r\n    }\r\n\r\n    public RefreshIfDataVersionChanged(cb: (response) => any) {\r\n        if (!this.nextRefresh || moment().isAfter(this.nextRefresh)) {\r\n            this.apiRequest.getRequest(`${this.appService.baseURI}/GetSynchronousPostVersion/?personId=${this.appService.personId}&moduleName=${this.appService.modulename}`).subscribe(\r\n                (version) => {\r\n                    this.nextRefresh = moment().add(5, \"seconds\");\r\n                    if (version) {\r\n                        let versionobject = JSON.parse(version);\r\n                        let serverversion_versionid = versionobject.moduleDataVersion.versionid;\r\n                        let serverversion_userid = versionobject.createdby;\r\n\r\n                        if (this.appService.dataversion && this.appService.dataversion != serverversion_versionid) {\r\n                            cb(true);\r\n                            this.subjects.ShowRefreshPageMessage.next(serverversion_userid);\r\n                            return;\r\n                        }\r\n                        else {\r\n                            cb(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        cb(false)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        else {\r\n            cb(false);\r\n        }\r\n    }\r\n\r\n    GetManageAwayPeriod(cb: () => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_personawayperiod&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id).subscribe(\r\n            (response) => {\r\n                let responseArray: PersonAwayPeriod[] = JSON.parse(response);\r\n                let data = responseArray.sort((a, b) => (moment(a.modifiedon) > moment(b.modifiedon)) ? -1 : 0);\r\n                this.appService.PersonAwayPeriod = data;\r\n                cb();\r\n            }\r\n        ));\r\n    }\r\n\r\n    private createAdministerMedHistoryFilter(administration) {\r\n        let index = 0\r\n        const pm = new filterParams();\r\n        const condition = []\r\n        for (let d of administration) {\r\n            let para = this.makeId(5);\r\n            if (index === 0)\r\n                condition.push(\"correlationid =@\" + para);\r\n            else\r\n                condition.push(\" or correlationid =@\" + para);\r\n\r\n            pm.filterparams.push(new filterparam(\"@\" + para, d.correlationid));\r\n            index = index + 1\r\n        }\r\n        const f = new filters()\r\n        f.filters.push(new filter(condition.join('')));\r\n        const select = new selectstatement(\"SELECT * \");\r\n        const orderby = new orderbystatement(\"ORDER BY 1\");\r\n        const body = [];\r\n        body.push(f);\r\n        body.push(pm);\r\n        body.push(select);\r\n        body.push(orderby);\r\n        let jsonobj = JSON.stringify(body);\r\n        return jsonobj;\r\n    }\r\n\r\n    public SetUnits(code: string, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetBaseViewListObjectByAttribute/epma_frequentvtmunit?&synapseattributename=code&attributevalue=\" + code).subscribe(\r\n            (response) => {\r\n                let units;\r\n                let responseArray = JSON.parse(response);\r\n                if (responseArray && responseArray.doseunit) {\r\n                    units = responseArray.doseunit.toString().trim();\r\n                    cb(units);\r\n                }\r\n                else {\r\n                    this.getProductDetail(code, (data) => {\r\n                        if (data.formularyIngredients) {\r\n                            var ing = data.formularyIngredients;\r\n                            units = this.appService.GetMostFrequentElementInArray(ing.map(ig => ig.strengthValueNumeratorUnitDesc));\r\n                            cb(units);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        ));\r\n    }\r\n    getProductDetail(code, cb: (data) => any) {\r\n        var endpoint = this.appService.appConfig.uris.terminologybaseuri + \"/Formulary/getformularydetailruleboundbycode\"\r\n        this.subscriptions.add(this.apiRequest.getRequest(`${endpoint}/${code}?api-version=1.0`)\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    cb(response);\r\n                } else {\r\n                    cb({});\r\n                }\r\n            }));\r\n    }\r\n    GetAwayPeriodHistory(id: string, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetObjectHistory?synapsenamespace=local&synapseentityname=epma_personawayperiod&id=\" + id).subscribe(\r\n            (response) => {\r\n                cb(response);\r\n            })\r\n        );\r\n    }\r\n    GetNursingInstruction(cb: () => any) {\r\n        this.subscriptions.add(\r\n            this.apiRequest.getRequest(this.appService.baseURI + \"/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_nursinginstructions&synapseattributename=encounter_id&attributevalue=\" + this.appService.encounter.encounter_id)\r\n                .subscribe(nursing => {\r\n                    let responseArray = JSON.parse(nursing);\r\n                    this.appService.NursingInstructions = [];\r\n                    for (let r of responseArray) {\r\n                        this.appService.NursingInstructions.push(<NursingInstructions>r);\r\n                    }\r\n                    cb();\r\n                }));\r\n    }\r\n    GetNursingInstructionHistory(id, cb: (data) => any) {\r\n        this.subscriptions.add(this.apiRequest.getRequest(this.appService.baseURI + \"/GetObjectHistory?synapsenamespace=local&synapseentityname=epma_nursinginstructions&id=\" + id).subscribe(\r\n            (history) => {\r\n                var historyData = JSON.parse(history).sort((a, b) => (moment(a.modifiedon) > moment(b.modifiedon)) ? -1 : 0);\r\n                cb(historyData);\r\n            }\r\n        ));\r\n    }\r\n    CopyPatientDrugsFromIPToDischarge(prescriptionBasket: Array<Prescription>) {\r\n        //copy patient drugs from moa to ip\r\n        let modcontextid = this.appService.MetaPrescriptioncontext.find(x => x.context.toLowerCase() == PrescriptionContext.Discharge.toLowerCase()).prescriptioncontext_id\r\n        let ipcontextid = this.appService.MetaPrescriptioncontext.find(x => x.context.toLowerCase() == PrescriptionContext.Inpatient.toLowerCase()).prescriptioncontext_id\r\n\r\n        let stoppedid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.stopped).prescriptionstatus_id;\r\n        let cancelledid = this.appService.MetaPrescriptionstatus.find(x => x.status == PrescriptionStatus.cancelled).prescriptionstatus_id;\r\n\r\n        let mods = this.appService.Prescription.filter(p => p.prescriptioncontext_id == modcontextid);\r\n        let ips = this.appService.Prescription.filter(p => p.prescriptioncontext_id == ipcontextid && p.prescriptionstatus_id != stoppedid && p.prescriptionstatus_id != cancelledid);\r\n        prescriptionBasket.forEach(p => {\r\n            //if not editing\r\n            if (!p.__editingprescription) {\r\n                //and if there is only one mod for this dmd code\r\n                let medcode = p.__medications.find(m => m.isprimary == true).__codes.find(c => c.terminology == \"formulary\").code;\r\n                let p_mods = mods.filter(mp => mp.__medications.find(m => m.isprimary == true).__codes.find(c => c.terminology == \"formulary\").code == medcode);\r\n\r\n                if (p_mods && p_mods.length == 1) {\r\n                    let p_ip = ips.filter(mp => mp.__medications.find(m => m.isprimary == true).__codes.find(c => c.terminology == \"formulary\").code == medcode);\r\n\r\n                    //and if this drug been prescribed only once\r\n                    if (p_ip && p_ip.length == 1) {\r\n                        //copy patient drugs over to discharge prescription\r\n                        // get current patient drugs for prescription\r\n                        this.subscriptions.add(\r\n                            this.apiRequest\r\n                                .getRequest(\r\n                                    this.appService.baseURI +\r\n                                    '/GetListByAttribute?synapsenamespace=local&synapseentityname=epma_prescriptionmedicaitonsupply&synapseattributename=prescriptionid' +\r\n                                    '&attributevalue=' + p_ip[0].prescription_id\r\n                                )\r\n                                .subscribe((response) => {\r\n                                    let responseArray = JSON.parse(response);\r\n                                    if (responseArray.length != 0) {\r\n                                        let patientDrugs = new PrescriptionMedicaitonSupply();\r\n                                        patientDrugs.epma_prescriptionmedicaitonsupply_id = uuid();\r\n                                        patientDrugs.prescriptionid = p.prescription_id;\r\n                                        patientDrugs.noofdays = responseArray[0].noofdays;;\r\n                                        patientDrugs.availablequantity = responseArray[0].availablequantity;\r\n                                        patientDrugs.quantityunits = responseArray[0].quantityunits;\r\n                                        patientDrugs.complianceaid = responseArray[0].complianceaid;\r\n                                        patientDrugs.selectedproductcode = responseArray[0].selectedproductcode;\r\n                                        patientDrugs.selectproductcodetype = responseArray[0].selectproductcodetype;\r\n                                        patientDrugs.ownsupplyathome = responseArray[0].ownsupplyathome;\r\n                                        patientDrugs.resupplyfrom = responseArray[0].resupplyfrom;\r\n                                        patientDrugs.lastmodifiedby = responseArray[0].lastmodifiedby;\r\n                                        patientDrugs.updatesouce = responseArray[0].updatesouce;\r\n                                        patientDrugs.prescribedmedicationid = responseArray[0].prescribedmedicationid;\r\n                                        patientDrugs.person_id = responseArray[0].person_id;\r\n                                        patientDrugs.encounter_id = responseArray[0].encounter_id;\r\n                                        patientDrugs.quantityentrydate = responseArray[0].quantityentrydate;\r\n                                        patientDrugs.createdby = responseArray[0].createdby;\r\n                                        patientDrugs.createdon = responseArray[0].createdon;\r\n                                        patientDrugs.modifiedon = responseArray[0].modifiedon;\r\n\r\n                                        //marked for syncpost\r\n                                        this.subscriptions.add(this.apiRequest.postRequest(this.appService.baseURI +\r\n                                            \"/PostObject?synapsenamespace=local&synapseentityname=epma_prescriptionmedicaitonsupply\", JSON.stringify(patientDrugs), false)\r\n                                            .subscribe((saveResponse) => {\r\n                                                this.GetMedicationSupply(() => { });\r\n                                            }\r\n                                            ))\r\n                                    }\r\n                                }));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class SearchFormulary_PostData{\r\n    searchTerm: string;\r\n    hideArchived: boolean;\r\n    recStatusCds: string[];\r\n    formularyStatusCd: string[];\r\n    productType:string;\r\n}","export enum title {\n  Administer_PRN = \"PRN\",\n  Administration_Completed_early = \"Completed early\",\n  Administration_Completed_late = \"Completed late\",\n  Administration_Defered = \"Defered\",\n  Administration_Deferedinfusion = \"Defered\",\n  Administration_Failed = \"Failed\",\n  EnterInError=\"Enter In Error\",\n  AdministrationInfution_Failed = \"Failed\",\n  Due_Administration = \"Due\",\n  Late_Administration = \"Missed\",\n  Planned_Administration = \"Planned\",\n  Administration_withheld_by_doctor = \"Withheld by doctor\",\n  Administration_withheld_by_doctor_Infution =\"Withheld by doctor\",\n  Completed_Administration = \"Completed\",\n  Dose_Administered_Is_A_Different_Product_From_Prescribed=\"Dose Administered Is A Different Product\",\n  Dose_Administered_Late_Is_A_Different_Product_From_Prescribed=\"Dose Administered Late Is A Different Product From Prescribed\",\n  Dose_Administered_Early_Is_A_Different_Product_From_Prescribed=\"Dose Administered Early Is A Different Product From Prescribed\",\n  Dose_administered_is_differnt_from_prescribed = \"Dose administered is differnt from prescribed\",\n  Dose_administered_early_is_differnt_from_prescribed = \"Dose administered early is differnt from prescribed\",\n  Dose_administered_late_is_differnt_from_prescribed = \"Dose administered late is differnt from prescribed\",\n  Administration_requires_doctors_confirmation_Planned = \"Planned: requires prescriber to confirm\",\n  Administration_requires_doctors_confirmation_Late = \"Administration requires doctors confirmation Missed\",\n  Administration_requires_doctors_confirmation_Due = \"Administration requires doctors confirmation Due\",\n  Infusionplanned = \"Infusion planned\",\n  Infusiondue = \"Infusion due\",\n  InfusionLate = \"Infusion Missed\",\n  Infusioncompletionplanned = \"Infusion completion planned\",\n  InfusionCompletiondue = \"Infusion completion due\",\n  InfusionCompleteoverdue = \"Infusion Complete overdue\",\n  durationline = \"\",\n  PRNRange = \"PRN\",\n  IncreaseInfusionRatePlanned = \"Increase Infusion Rate Planned\",\n  IncreaseInfusionRateDue = \"Increase Infusion Rate Due\",\n  IncreaseInfusionRateLate = \"Increase Infusion Rate Missed\",\n\n  DecreaseInfusionRateLate = \"Decrease Infusion Rate Missed\",\n  DecreaseInfusionRateDue = \"Decrease Infusion Rate Due\",\n  DecreaseInfusionRatePlanned = \"Decrease Infusion Rate Planned\",\n  BolusAdministrationCompleted = \"Bolus Administration Completed\",\n\n  additionaladministration = \"Additional Administration\",\n\n  Infusiondone = \"Infusion done\",\n\n  InfusionCompletedEarly = \"Infusion Completed Early\",\n  InfusionCompletedLate = \"Infusion Completed Late\",\n  IncreaseInfusionRatedone = \"Increase Infusion Rate done\",\n  IncreaseInfusionRatedonelate = \"Increase Infusion Rate done late\",\n  IncreaseInfusionRatedoneearly = \"Increase Infusion Rate done early\",\n  DecreaseInfusionRatedone = \"Decrease Infusion Rate done\",\n  DecreaseInfusionRatedonelate = \"Decrease Infusion Rate done late\",\n  DecreaseInfusionRatedoneearly = \"Decrease Infusion Rate done early\",\n  InfusionCompleteddone = \"Infusion Completed done\",\n  InfusionCompletedEarly2 = \"Infusion Completed Early\",\n  InfusionCompletedLate2 = \"Infusion Completed Late\",\n\n  AdjustedIncreaseInfusionRatedonelate = \"Adjusted Increase Infusion Rate done late\",\n  AdjustedIncreaseInfusionRatedoneearly = \"Adjusted Increase Infusion Rate done early\",\n  AdjustedDecreaseInfusionRatedone = \"Adjusted Decrease Infusion Rate done\",\n  AdjustedDecreaseInfusionRatedonelate = \"Adjusted Decrease Infusion Rate done late\",\n  AdjustedDecreaseInfusionRatedoneearly = \"Adjusted Decrease Infusion Rate done early\",\n\n  AdjustedIncreaseInfusionRatedone = \"Adjusted Increase Infusion Rate done\",\n  MaintainInfusionRatedoneearly = \"Adjusted Increase Infusion Rate done\",\n  MaintainInfusionRatedonelate = \"Maintain Infusion Rate done late\",\n\n  AdjustedsameInfusionRatedone = \"Adjusted same Infusion Rate done\",\n\n  FaliedtoAdjustInfusionRatedonelate = \"Falied to Adjust Infusion Rate done late\",\n  FaliedtoAdjustInfusionRatedoneearly = \"Falied to Adjust Infusion Rate done early'></div>\",\n\n  InfusionRatePaused = \"Paused\",\n\n  ContinuousInfusionSetChanged = \"Set Changed\",\n\n  Continuousinfusionsyringeorbagchange = \"syringe or bag change\",\n\n  Maintain_Infusion_Rate_done = \"Maintain Infusion Rate done\",\n  Adjusted_Decrease_Infusion_Rate_Done_Kit_Change = \"Decrease Infusion Rate and Kit Change\",\n  Adjusted_Increase_Infusion_Rate_Done_Kit_Change = \"Increase Infusion Rate and Kit Change\",\n  Adjusted_Maintain_Infusion_Rate_Done_Kit_Change = \"Maintain Infusion Rate and Kit Change\",\n  Maintain_Infusion_Rate_Late = \"Maintain Infusion Rate Missed\",\n  Maintain_Infusion_Rate_Planned = \"Maintain Infusion Rate Planned\",\n  Maintain_Infusion_Rate_Due = \"Maintain Infusion Rate Due\",\n  Cancelled = \"Cancelled\",\n\n  Recordadditionaladministration = \"Record Additional Administration\",\n  resupply=\"Resupply\",\n  ComplianceAid=\"Compliance Aid\",\n  Highalertmedication=\"High alert medication\",\n  NursingInstruction=\"Nursing Instruction\",\n  pharmacyreview=\"Pharmacy Review\",\n  critialdrug=\"Critial Drug\",\n  nonformularymedication=\"NoN Formulary Medication\",\n  clinicaltrialmedicine=\"Clinical Trial Medicine\",\n  expensivemedication=\"Expensive Medication\",\n  highalertmedication=\"Highalert Medication\",\n  unlicencedmedicine=\"Unlicenced Medicine\"\n\n  \n}\n\nexport enum contents {\n  Administer_PRN = \"<div  class='Administer_PRN'></div>\",\n  Administration_Completed_early = \"<div class='Administration_Completed_early'></div>\",\n  Administration_Completed_late = \"<div class='Administration_Completed_late'></div>\",\n  Administration_Defered = \"<div class='Administration_Defered'></div>\",\n  Administration_Deferedinfusion = \"<div class='Administration_Deferedinfusion'></div>\",\n  Administration_Failed = \"<div class='Administration_Failed'></div>\",\n  AdministrationInfution_Failed = \"<div class='AdministrationInfution_Failed'></div>\",\n  Due_Administration = \"<div class='Due_Administration'></div>\",\n  Late_Administration = \"<div class='Late_Administration'></div>\",\n  Planned_Administration = \"<div class='Planned_Administration'></div>\",\n  Administration_withheld_by_doctor = \"<div class='Administration_withheld_by_doctor'></div>\",\n  Administration_withheld_by_doctor_Infution = \"<div class='Administration_withheld_by_doctor_Infution'></div>\",\n  Dose_Administered_Early_Is_A_Different_Product_From_Prescribed = \"<div class='Dose_Administered_Early_Is_A_Different_Product_From_Prescribed'></div>\",\n  Dose_Administered_Is_A_Different_Product_From_Prescribed = \"<div class='Dose_Administered_Is_A_Different_Product_From_Prescribed'></div>\",\n  Dose_Administered_Late_Is_A_Different_Product_From_Prescribed = \"<div class='Dose_Administered_Late_Is_A_Different_Product_From_Prescribed'></div>\",\n  Completed_Administration = \"<div class='Completed_Administration'></div>\",\n  Dose_administered_is_differnt_from_prescribed = \"<div class='Dose_administered_is_differnt_from_prescribed'></div>\",\n  Dose_administered_early_is_differnt_from_prescribed = \"<div class='Dose_administered_early_is_differnt_from_prescribed'></div>\",\n  Dose_administered_late_is_differnt_from_prescribed = \"<div class='Dose_administered_late_is_differnt_from_prescribed'></div>\",\n  Administration_requires_doctors_confirmation_Planned = \"<div class='Administration_requires_doctors_confirmation_Planned'></div>\",\n  Administration_requires_doctors_confirmation_Late = \"<div class='Administration_requires_doctors_confirmation_Late'></div>\",\n  Administration_requires_doctors_confirmation_Due = \"<div class='Administration_requires_doctors_confirmation_Due'></div>\",\n  Infusionplanned = \"<div class='Infusionplanned'></div>\",\n  Infusiondue = \"<div class='Infusiondue'></div>\",\n  InfusionLate = \"<div class='InfusionLate'></div>\",\n  Infusioncompletionplanned = \"<div class='Infusioncompletionplanned'></div>\",\n  InfusionCompletiondue = \"<div class='InfusionCompletiondue'></div>\",\n  InfusionCompleteoverdue = \"<div class='InfusionCompleteoverdue'></div>\",\n  durationline = \"<div></div>\",\n  PRNRange = \"<div class='PRNRange'></div>\",\n  ReminderAcknowledged = \"<div class='ReminderAcknowledged'></div>\",\n  Reminder = \"<div class='Reminder'></div>\",\n  Reminderdue = \"<div class='Reminderdue'></div>\",\n  Reminderoverdue = \"<div class='Reminderoverdue'></div>\",\n  Multiple_Reminders = \"<div class='Multiple_Reminders'></div>\",\n  IncreaseInfusionRatePlanned = \"<div class='IncreaseInfusionRatePlanned'></div>\",\n  IncreaseInfusionRateDue = \"<div class='IncreaseInfusionRateDue'></div>\",\n  IncreaseInfusionRateLate = \"<div class='IncreaseInfusionRateLate'></div>\",\n\n  DecreaseInfusionRateLate = \"<div class='DecreaseInfusionRateLate'></div>\",\n  DecreaseInfusionRateDue = \"<div class='DecreaseInfusionRateDue'></div>\",\n  DecreaseInfusionRatePlanned = \"<div class='DecreaseInfusionRatePlanned'></div>\",\n  BolusAdministrationCompleted = \"<div class='BolusAdministrationCompleted'></div>\",\n\n  additionaladministration = \"<div class='additionaladministration'></div>\",\n  Multiple_Reminders_With_The_Date = \"<div class='Multiple_Reminders_With_The_Date'></div>\",\n  Multiple_Reminders_One_Day_Has_Passed = \"<div class='Multiple_Reminders_One_Day_Has_Passed'></div>\",\n  Multiple_Reminders_Has_Been_Acknowledged = \"<div class='Multiple_Reminders_Has_Been_Acknowledged'></div>\",\n  Infusiondone = \"<div class='Infusiondone'></div>\",\n  EnterInError=\"<div class='EnterInError'></div>\",\n  EnterInErrorbolus=\"<div class='EnterInErrorbolus'></div>\",\n  InfusionCompletedEarly = \"<div class='InfusionCompletedEarly'></div>\",\n  InfusionCompletedLate = \"<div class='InfusionCompletedLate'></div>\",\n  IncreaseInfusionRatedone = \"<div class='IncreaseInfusionRatedone'></div>\",\n  IncreaseInfusionRatedonelate = \"<div class='IncreaseInfusionRatedonelate'></div>\",\n  IncreaseInfusionRatedoneearly = \"<div class='IncreaseInfusionRatedoneearly'></div>\",\n  DecreaseInfusionRatedone = \"<div class='DecreaseInfusionRatedone'></div>\",\n  DecreaseInfusionRatedonelate = \"<div class='DecreaseInfusionRatedonelate'></div>\",\n  DecreaseInfusionRatedoneearly = \"<div class='DecreaseInfusionRatedoneearly'></div>\",\n  InfusionCompleteddone = \"<div class='InfusionCompleteddone'></div>\",\n  InfusionCompletedEarly2 = \"<div class='InfusionCompletedEarly2'></div>\",\n  InfusionCompletedLate2 = \"<div class='InfusionCompletedLate2'></div>\",\n\n  AdjustedIncreaseInfusionRatedonelate = \"<div class='AdjustedIncreaseInfusionRatedonelate'></div>\",\n  AdjustedIncreaseInfusionRatedoneearly = \"<div class='AdjustedIncreaseInfusionRatedoneearly'></div>\",\n  AdjustedDecreaseInfusionRatedone = \"<div class='AdjustedDecreaseInfusionRatedone'></div>\",\n  AdjustedDecreaseInfusionRatedonelate = \"<div class='AdjustedDecreaseInfusionRatedonelate'></div>\",\n  AdjustedDecreaseInfusionRatedoneearly = \"<div class='AdjustedDecreaseInfusionRatedoneearly'></div>\",\n\n  AdjustedIncreaseInfusionRatedone = \"<div class='AdjustedIncreaseInfusionRatedone'></div>\",\n  MaintainInfusionRatedoneearly = \"<div class='AdjustedIncreaseInfusionRatedone'></div>\",\n  MaintainInfusionRatedonelate = \"<div class='MaintainInfusionRatedonelate'></div>\",\n\n  AdjustedsameInfusionRatedone = \"<div class='AdjustedsameInfusionRatedone'></div>\",\n\n  FaliedtoAdjustInfusionRatedonelate = \"<div class='FaliedtoAdjustInfusionRatedonelate'></div>\",\n  FaliedtoAdjustInfusionRatedoneearly = \"<div class='FaliedtoAdjustInfusionRatedoneearly'></div>\",\n\n  InfusionRatePaused = \"<div class='InfusionRatePaused'></div>\",\n\n  ContinuousInfusionSetChanged = \"<div class='ContinuousInfusionSetChanged'></div>\",\n\n  Continuousinfusionsyringeorbagchange = \"<div class='Continuousinfusionsyringeorbagchange'></div>\",\n\n  Maintain_Infusion_Rate_done = \"<div class='Maintain_Infusion_Rate_done'></div>\",\n  Maintain_Infusion_Rate_Late = \"<div class='Maintain_Infusion_Rate_Late'></div>\",\n  Maintain_Infusion_Rate_Planned = \"<div class='Maintain_Infusion_Rate_Planned'></div>\",\n  Maintain_Infusion_Rate_Due = \"<div class='Maintain_Infusion_Rate_Due'></div>\",\n  Cancelled = \"<div title='Cancelled' class='Cancelled'></div>\",\n\n  Recordadditionaladministration = \"<div  class='Recordadditionaladministration'></div>\",\n\n  Adjusted_Maintain_Infusion_Rate_Done_Kit_Change = \"<div class='Adjusted_Maintain_Infusion_Rate_Done_Kit_Change'></div>\",\n  Adjusted_Increase_Infusion_Rate_Done_Kit_Change = \"<div class='Adjusted_Increase_Infusion_Rate_Done_Kit_Change'></div>\",\n  Adjusted_Decrease_Infusion_Rate_Done_Kit_Change = \"<div class='Adjusted_Decrease_Infusion_Rate_Done_Kit_Change'></div>\"\n}\n\nexport enum OpPrescriptionType {\n  [\"NHS\"] = \"NHS\",\n  [\"Private\"] = \"Private\"\n}\n\nexport enum OpPrescriptionCategory {\n  [\"Outpatient\"] = \"Outpatient\",\n  [\"Homecare\"] = \"Homecare\",\n  [\"Clinicaltrial\"] = \"Clinical trial\"\n}\n\nexport enum OpDispensing {\n  [\"Radiology\"] = \"Radiology\",\n  [\"OutpatientStanmore\"] = \"Outpatient Stanmore\",\n  [\"Outpatient Bolsover\"] = \"Outpatient Bolsover\",\n  [\"OPAT\"] = \"OPAT\",\n  [\"POA\"] = \"POA\",\n  [\"Orthotics\"] = \"Orthotics\",\n  [\"PhilipNewmanWard\"] = \"Philip Newman Ward\",\n  [\"Patient/Relative/StaffCollecting\"] = \"Patient/Relative/Staff Collecting\"\n}\n\n\nexport enum DoseType {\n  [\"units\"] = \"units\",\n  [\"strength\"] = \"strength\",\n  [\"descriptive\"] = \"descriptive\",\n}\n\nexport enum FrequencyType {\n  [\"stat\"] = \"stat\",\n  [\"mor\"] = \"mor\",\n  [\"mid\"] = \"mid\",\n  [\"eve\"] = \"eve\",\n  [\"night\"] = \"night\",\n  [\"x\"] = \"x\",\n  [\"h\"] = \"h\"\n}\n\nexport enum IntervalType {\n  [\"standard\"] = \"standard\",\n  [\"variable\"] = \"variable\",\n  [\"protocol\"] = \"protocol\"\n}\n\nexport enum InfusionType {\n  [\"ci\"] = \"ci\",\n  [\"bolus\"] = \"bolus\",\n  [\"rate\"] = \"rate\",\n  [\"pca\"] = \"pca\"\n}\n\nexport enum DoseForm {\n  [\"Discrete\"] = \"1\",\n  [\"Continuous\"] = \"2\",\n  [\"NA\"] = \"3\",\n}\n\nexport enum PrescriptionDuration {\n  [\"hours\"] = \"hours\",\n  [\"days\"] = \"days\",\n  [\"weeks\"] = \"weeks\",\n  [\"months\"] = \"months\",\n  [\"untilcancelled\"] = \"until cancelled\",\n  [\"enddate\"] = \"end date\"\n}\nexport enum DaysOfWeek {\n  [\"mon\"] = \"Monday\",\n  [\"tue\"] = \"Tuesday\",\n  [\"wed\"] = \"Wednesday\",\n  [\"thu\"] = \"Thursday\",\n  [\"fri\"] = \"Friday\",\n  [\"sat\"] = \"Saturday\",\n  [\"sun\"] = \"Sunday\"\n}\n\nexport enum ChosenDays {\n  [\"all\"] = \"all\",\n  [\"chosen\"] = \"chosen\",\n  [\"skip\"] = \"skip\",\n}\n\nexport enum FormContext {\n  [\"moa\"] = \"moa\",\n  [\"mod\"] = \"mod\",\n  [\"ip\"] = \"ip\",\n  [\"op\"] = \"op\"\n\n}\n\nexport enum PrescriptionContext {\n  [\"Inpatient\"] = \"Inpatient\",\n  [\"Outpatient\"] = \"Outpatient\",\n  [\"Orderset\"] = \"Orderset\",\n  [\"Admission\"] = \"Admission\",\n  [\"Discharge\"] = \"Discharge\"\n}\n\n\n\n\nexport enum ReconciliationListActions {\n  [\"start\"] = \"start\",\n  [\"edit\"] = \"edit\",\n  [\"complete\"] = \"complete\",\n  [\"notes\"] = \"notes\",\n  [\"resetcompletestatus\"] = \"resetcompletestatus\"\n}\n\nexport enum modules {\n  [\"app-drug-chart\"] = \"app-drug-chart\",\n  [\"app-therapy-overview\"] = \"app-therapy-overview\",\n  [\"app-inpatient-prescribing\"] = \"app-inpatient-prescribing\",\n  [\"app-reconciliation-lists\"] = \"app-reconciliation-lists\",\n  [\"app-inpatient-prescribing-edit\"] = \"app-inpatient-prescribing-edit\",\n  [\"app-oplist\"]=\"app-oplist\"\n}\n\n\nexport enum popovers {\n  [\"app-additional-administration\"] = 'app-additional-administration',\n  [\"app-add-bolus\"] = 'app-add-bolus',\n  [\"app-adjust-infusion\"] = 'app-adjust-infusion',\n  [\"app-change-infusion\"] = 'app-change-infusion',\n  [\"app-pause-infusion\"] = 'app-pause-infusion',\n  [\"app-restart-infusion\"] = 'app-restart-infusion',\n  [\"app-comments\"] = 'app-comments',\n  [\"app-nursing-instruction\"] = 'app-nursing-instruction',\n  [\"app-view-reminder\"] = 'app-view-reminder',\n  [\"app-record-patientdrug\"] = 'app-record-patientdrug',\n  [\"app-pharmacy-review\"] = 'app-pharmacy-review',\n  [\"app-supply-request\"] = 'app-supply-request',\n  [\"app-titration-chart\"] = 'app-titration-chart',\n  [\"app-end-infusion\"] = 'app-end-infusion',\n  [\"app-away-period\"] = 'app-away-period',\n  [\"app-prescription-history\"] = 'app-prescription-history',\n  [\"none\"] = ''\n}\n\n\nexport enum AdministrationStatus {\n  [\"given\"] = \"given\",\n  [\"defer\"] = \"defer\",\n  [\"selfadminister\"] = \"self-administer\",\n  [\"notgiven\"] = \"notgiven\",\n}\n\nexport enum AdministrationStatusReason {\n  [\"Patientunavailable\"] = \"Patient unavailable\",\n  [\"Nilbymouth\"] = \"Nil by mouth\",\n  [\"Patientrefused\"] = \"Patient refused\",\n  [\"Drugunavailable\"] = \"Drug unavailable\",\n  [\"Clinicalreason\"] = \"Clinical reason\",\n  [\"Other\"] = \"Other\",\n}\nexport enum LevelOfSelfAdmin {\n  [\"notwitnessedbynurse\"] = \"Not witnessed by nurse\",\n  [\"witnessedbynurse\"] = \"Witnessed by nurse\",\n\n}\n\nexport enum AdministrationType {\n  [\"record\"] = \"record\",\n  [\"schedule\"] = \"schedule\",\n}\n\nexport enum ChangeInfusion {\n  [\"changeinfusion\"] = \"changeinfusionset\",\n  [\"changeinfusionkit\"] = \"changeinfusionkit\",\n\n}\n\nexport enum PrescriptionStatus {\n  [\"active\"] = \"active\",\n  [\"modified\"] = \"modified\",\n  [\"suspended\"] = \"suspended\",\n  [\"restarted\"] = \"restarted\",\n  [\"stopped\"] = \"stopped\",\n  [\"cancelled\"] = \"cancelled\",\n}\n\nexport enum SupplyRequestStatus {\n  [\"Incomplete\"] = \"Incomplete\",\n  [\"Pending\"] = \"Pending\",\n  [\"Approved\"] = \"Approved\",\n  [\"Rejected\"] = \"Rejected\",\n  [\"Fulfilled\"] = \"Dispensed\",\n  [\"OutpatientApproved\"] = \"Screened\",\n  [\"OutpatientChecked\"] = \"Checked\",\n\n}\nexport enum RoleAction {\n  [\"epma_access_inpatientprescribing\"] = \"epma_access_inpatientprescribing\",\n  [\"epma_prescribe_new_ip\"] = \"epma_prescribe_new_ip\",\n  [\"epma_access_amendprescription\"] = \"epma_access_amendprescription\",\n  [\"epma_copy_ip\"] = \"epma_copy_ip\",\n  [\"epma_edit_ip\"] = \"epma_edit_ip\",\n  [\"epma_start_mod/epma_edit_mod\"] = \"epma_start_mod/epma_edit_mod\",\n  [\"epma_schedule_additionaladministration\"] = \"epma_schedule_additionaladministration\",\n  [\"epma_transfer_administrationevent\"] = \"epma_transfer_administrationevent\",\n  [\"epma_view_ordersetlists\"] = \"epma_view_ordersetlists\",\n  [\"epma_cancel_plannedevent\"] = \"epma_cancel_plannedevent\",\n  [\"epma_add_pharmacyreviewcomments_ip\"] = \"epma_add_pharmacyreviewcomments_ip\",\n  [\"epma_change_pharmacyreviewstatus\"] = \"epma_change_pharmacyreviewstatus\",\n  [\"epma_access_patientdrugs_moa\"] = \"epma_access_patientdrugs_moa\",\n  [\"epma_access_patientdrugs_ip\"] = \"epma_access_patientdrugs_ip\",\n  [\"epma_access_supplyrequest_ip\"] = \"epma_access_supplyrequest_ip\",\n  [\"epma_access_supplyrequest_mod\"] = \"epma_access_supplyrequest_mod\",\n  [\"epma_create_supplyrequest_fromadministration\"] = \"epma_create_supplyrequest_fromadministration\",\n  [\"epma_approve_formulary_supplyequest\"] = \"epma_approve_formulary_supplyequest\",\n  [\"epma_reject_formulary_supplyequest\"] = \"epma_reject_formulary_supplyequest\",\n  [\"epma_fulfil_formulary_supplyrequest\"] = \"epma_fulfil_formulary_supplyrequest\",\n  [\"epma_approve_nonformulary_supplyequest\"] = \"epma_approve_nonformulary_supplyequest\",\n  [\"epma_reject_nonformulary_supplyequest\"] = \"epma_reject_nonformulary_supplyequest\",\n  [\"epma_fulfil_nonformulary_supplyrequest\"] = \"epma_fulfil_nonformulary_supplyrequest\",\n  [\"epma_edit_moa/epma_start_moa\"] = \"epma_edit_moa/epma_start_moa\",\n  [\"epma_complete_moa\"] = \"epma_complete_moa\",\n  [\"epma_complete_mod\"] = \"epma_complete_mod\",\n  [\"epma_edit_modnotes\"] = \"epma_edit_modnotes\",\n  [\"epma_record_additionaladministration\"] = \"epma_record_additionaladministration\",\n  [\"epma_add_doctorscomments\"] = \"epma_add_doctorscomments\",\n  [\"epma_skip_witnessauthentication\"] = \"epma_skip_witnessauthentication\",\n  [\"epma_mandate_witnessauthentication\"] = \"epma_mandate_witnessauthentication\",\n  [\"epma_confirm_doctorsorder\"] = \"epma_confirm_doctorsorder\",\n  [\"epma_create_org_orderset\"] = \"epma_create_org_orderset\",\n  [\"epma_edit_org_orderset\"] = \"epma_edit_org_orderset\",\n  [\"epma_delete_org_orderset\"] = \"epma_delete_org_orderset\",\n  [\"epma_override_warning\"] = \"epma_override_warning\",\n  [\"epma_canwitnessauth\"] = \"epma_canwitnessauth\",\n  [\"epma_administer_administrationevent\"] = \"epma_administer_administrationevent\",\n  [\"epma_reconciliation_pharmacist\"] = \"epma_reconciliation_pharmacist\",\n  [\"epma_reconciliation_pharmacytech\"] = \"epma_reconciliation_pharmacytech\",\n  [\"epma_display_dose_as_quantity\"] = \"epma_display_dose_as_quantity\"\n\n}\n\nexport enum RefWeightType {\n  [\"estimated\"] = \"estimated\",\n  [\"actual\"] = \"actual\"\n}\n\nexport enum Common{\n  [\"op_encounter_placeholder\"] = \"op_encounter_placeholder\"\n}","import { Injectable } from \"@angular/core\";\nimport moment from \"moment\";\nimport { TimeerHelper } from \"../components/drug-chart/timer-helper\";\nimport { Dose, Prescription } from \"../models/EPMA\";\nimport { AppService } from \"./app.service\";\nimport { DoseType } from \"./enum\";\n\n\n\nexport interface MarRecord {\n  endDate?: string;\n  dose?: string;\n  time?: string;\n  doseType?: string;\n  frequency?: string;\n  descriptiveDose?: string;\n  doseunit?: string;\n  protocolCount?: number;\n  protocolDays?: number;\n  bolusDose?: string;\n  rateDose?: string;\n  ciDose?: string;\n  ciDate?: string;\n  doseId?: string;\n  date?: string;\n  logicalId?: string;\n  administrationStatus?: string;\n  content?: string;\n  posologyId?: string;\n  titration?: boolean;\n  doctorsorder?: boolean;\n  startDate?: string;\n  prescription_id?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor(private appService: AppService, public timeerHelper: TimeerHelper) {\n\n  }\n  marRecords: Array<MarRecord> = [];\n  prescriptionDictionary = {};\n  protocolCount: number;\n  getDosesPrescriptions(prescriptions: Array<Prescription>) {\n    prescriptions.forEach(pres => {\n      this.marRecords = [];\n      const doses = this.appService.GetCurrentPosology(pres).__dose;\n      // this.addAdditionalDoses(doses);\n      const frequency = this.appService.GetCurrentPosology(pres).frequency;\n      let showDoses = this.createDosesForTemplate(pres);\n      let protocolDays;\n      if (frequency === 'protocol') {\n        protocolDays = showDoses.length;\n      }\n      if (!(showDoses instanceof Object)) {\n        if (pres.__routes.length > 0) {\n          showDoses = showDoses + ' - ' + pres.__routes[0].route;\n        }\n      }\n      this.marRecords.forEach(obj => {\n        let endDate = this.appService.GetCurrentPosology(pres).prescriptionenddate ? this.appService.GetCurrentPosology(pres).prescriptionenddate.split('T')[0] : null;\n        obj.endDate = endDate ? this.changeDateFormat(endDate) : null;\n        if (obj.frequency === 'protocol' || obj.ciDose) {\n          if(protocolDays == 2)\n          {\n            obj.protocolCount = this.protocolCount;\n          }\n          else {\n            obj.protocolCount = this.protocolCount + 1;\n          }\n          \n          obj.protocolDays = protocolDays;\n        }\n      })\n      pres['showDoses'] = showDoses;\n      this.addMarObjectToPrescriptionId(pres.prescription_id);\n    });\n\n  }\n\n  addAdditionalDoses(doses: Array<Dose>) {\n    doses.forEach((dose, i) => {\n      let date = dose.dosestartdatetime.split('T')[0];\n      let time = dose.dosestartdatetime.split('T')[1].slice(0, 5);\n      const doseEvent = this.appService.DoseEvents.filter(doseEvent => {\n        let [startDate, startTime] = doseEvent.startdatetime.split('T');\n        startTime = startTime.slice(0, 5);\n        return (doseEvent.dose_id === dose.dose_id) && (startDate === date) && (startTime === time);\n      });\n      if (doseEvent.length) {\n        dose.dosestartdatetime = doseEvent[0].startdatetime;\n      }\n    })\n  }\n\n  addMarObjectToPrescriptionId(presId: string) {\n    this.prescriptionDictionary[presId] = JSON.parse(JSON.stringify(this.marRecords));\n  }\n\n  changeDateFormat(s: string) {\n    return s.split(\"\").reverse().join(\"\").replace('-', '/');\n  }\n\n\n  createDosesForTemplate(prescriptions) {\n    let doseToShow = '';\n    let posology = this.appService.GetCurrentPosology(prescriptions);\n    if (posology.frequency == 'variable' && posology.infusiontypeid !== 'ci' && posology.infusiontypeid !== 'pca') {\n      // check dose type for strength unit ......\n\n      posology.__dose.forEach(dose => {\n        let date = dose.dosestartdatetime.split('T')[0];\n        let time = dose.dosestartdatetime.split('T')[1].slice(0, 5);\n        let changeTimeFormat = time.split(':')\n        if (dose.dosetype == DoseType.descriptive) {\n\n          let x = time + ' - ' + dose.descriptivedose + ',';\n          doseToShow = doseToShow + ' ' + x;\n\n\n        } else if (dose.dosetype == DoseType.strength) {\n          let x = dose.dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + dose.dosesize + ' ' + dose.strengthdenominatorunit + ',';\n          doseToShow = doseToShow + ' ' + x;\n        } else {\n          let x = dose.dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + dose.dosesize + ' ' + dose.doseunit + ',';\n          doseToShow = doseToShow + ' ' + x;\n        }\n        this.marRecords.push({\n          time,\n          descriptiveDose: dose.descriptivedose,\n          doseType: dose.dosetype,\n          frequency: posology.frequency,\n          dose: dose.dosesize,\n          doseunit: dose.strengthdenominatorunit || dose.doseunit,\n          ciDose: dose.infusionrate + ' ' + dose.strengthdenominatorunit,\n          doseId: dose.dose_id,\n          logicalId: moment(new Date).format('YYYYMMDD') + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + dose.dose_id.toString()\n        });\n      });\n\n    } else if (posology.frequency == 'protocol' || posology.infusiontypeid === 'ci' || posology.infusiontypeid === 'pca') {\n      let currDoses = [];\n      let currDose = '';\n      let currDate = '';\n      let count = 0;\n      posology.__dose.forEach((dose, index) => {\n        let dateTime = dose.dosestartdatetime.split('T');\n        let date = dateTime[0];\n        let time = dateTime[1].slice(0, 5);\n        let changeTimeFormat = time.split(':')\n        let doseDescription;\n        if (dose.dosetype == DoseType.descriptive) {\n          doseDescription = dose.descriptivedose;\n\n        } else if (dose.dosetype == DoseType.strength) {\n          doseDescription = dose.dosesize + ' ' + dose.strengthdenominatorunit;\n        } else {\n          doseDescription = dose.dosesize + ' ' + dose.doseunit;\n        }\n        if (currDate !== date && index) {\n          currDoses.push(currDose);\n          currDate = date\n          currDose = ' ' + time + ' - ' + doseDescription + ',';\n          this.protocolCount = count;\n          count = 0;\n        } else if (currDate !== date && !index) {\n          currDate = date;\n          currDose += ' ' + time + ' - ' + doseDescription + ',';\n          count += 1\n        } else {\n          currDose += ' ' + time + ' - ' + doseDescription + ',';\n          count += 1\n        }\n        this.marRecords.push({\n          time,\n          descriptiveDose: dose.descriptivedose,\n          doseType: dose.dosetype,\n          frequency: posology.frequency,\n          dose: dose.dosesize,\n          doseunit: dose.strengthdenominatorunit || dose.doseunit,\n          ciDose: (posology.infusiontypeid === 'ci'|| posology.infusiontypeid === 'pca') ? dose.infusionrate + ' ' + posology.infusionrateunits : '',\n          ciDate: date,\n          doseId: dose.dose_id,\n          logicalId: 'start_' + moment(new Date).format('YYYYMMDD') + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + dose.dose_id.toString()\n        });\n\n      });\n      currDoses.push(currDose);\n      let presAdditionalCondition = '';\n      let additional_condition = this.appService.MetaPrescriptionadditionalcondition.find((x) =>\n          x.prescriptionadditionalconditions_id ==\n          prescriptions.prescriptionadditionalconditions_id\n      );\n      if(additional_condition)\n      {\n        presAdditionalCondition = additional_condition.additionalcondition\n      }\n      else{\n        presAdditionalCondition = \" \";\n      }\n      currDoses[currDoses.length - 1] = currDoses[currDoses.length - 1] + (presAdditionalCondition != ' '?' - ':' ') + presAdditionalCondition + ' - ' + ((prescriptions.__routes.length > 0) ? prescriptions.__routes[0].route : '');\n      return currDoses;\n    }\n    else if(posology.infusiontypeid == \"rate\") {\n      const activeStartDate = moment().add(-1, 'd');\n      activeStartDate.set({'hour':23,'minute': 59,'second':59})\n      const dateTo = moment().add(3, 'd');\n      dateTo.set({'hour':23,'minute': 59,'second':59})\n      this.timeerHelper.createEvents(activeStartDate,dateTo, true);\n      this.appService.reportData = this.appService.reportData.filter(function( element ) {\n        return element !== undefined;\n      });\n      var todayDate = moment();\n      todayDate.set({'hour':0,'minute': 0,'second':0});\n      const next5DayIntermittedData = this.appService.reportData.filter(e => {\n        return !e.dose_id.includes(\"dur\") && !e.dose_id.includes(\"pause\") && !e.dose_id.includes(\"flowrate\") && !e.dose_id.includes(\"infusionevent\")\n        && moment(e.eventStart).isBetween(moment(activeStartDate),dateTo) && prescriptions.prescription_id == e.prescription_id\n      });\n      next5DayIntermittedData.sort(function (left, right) {\n        return moment.utc(left.eventStart).diff(moment.utc(right.eventStart))\n      });\n\n      \n\n      next5DayIntermittedData.forEach(element => {\n        let administeredIntermittedDose = this.appService.Medicationadministration.find(x => x.logicalid == element.dose_id);\n        let splitDoseID = element.dose_id.split('_');\n        let intermittedPosology = prescriptions.__posology.find(x => x.posology_id == element.posology_id);\n        let intermittedDose;\n        if(intermittedPosology)\n        {\n          intermittedDose = intermittedPosology.__dose.find(x => x.dose_id == splitDoseID[splitDoseID.length - 1])\n        }\n        \n        let dose;\n        let doseunit = posology.infusionrateunits;\n        if(administeredIntermittedDose != undefined)\n        {\n          dose = administeredIntermittedDose.administredinfusionrate +\" \"+posology.infusionrateunits;\n        }\n        else {\n          if(intermittedDose != undefined)\n          {\n            dose = intermittedDose.infusionrate+\" \"+posology.infusionrateunits;\n          }\n          \n        }\n        this.marRecords.push({\n          time: moment(element.eventStart).format(\"HH:mm\"),\n          date: moment(element.eventStart).format(\"YYYYMMDD\"),\n          administrationStatus: (administeredIntermittedDose != undefined)?(administeredIntermittedDose.adminstrationstatus ? 'started':\"\"):\"\",\n          content: element.content,\n          // descriptiveDose: dose.descriptivedose,\n          // doseType: dose.dosetype,\n          // frequency: posology.frequency,\n          dose: dose,\n          doseunit: doseunit,\n          // bolusDose: (posology.dosetype == 'strength') ? dose.strengthdenominator + ' ' + dose.strengthdenominatorunit : (posology.dosetype == 'units') ? dose.dosesize + ' ' + dose.doseunit : '' ,\n          // rateDose: dose.infusionrate + ' ' +  posology.infusionrateunits,\n          // ciDose: dose.infusionrate + ' ' + posology.infusionrateunits,\n          // ciDate: date,\n          startDate: element.eventStart,\n          prescription_id: element.prescription_id,\n          posologyId: element.posology_id,\n          doseId: splitDoseID[splitDoseID.length - 1],\n          logicalId: element.dose_id\n        });\n      });\n    }\n    else {\n      if (posology.dosetype == DoseType.units) {\n          if(this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='' || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='x' || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='h' || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='stat' || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='mor'  || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='mid' || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='eve'  || this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).frequency=='night') {\n            if(this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).__dose.length>0 && !this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).__dose[0].dosestrength) {\n              let x = posology.__dose[0].dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + posology.__dose[0].dosesize + ' ' + posology.__dose[0].doseunit + ',';\n              doseToShow = doseToShow + ' ' + x;\n            }\n            if(this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).__dose.length>0 && this.appService.GetCurrentPosology(prescriptions, prescriptions.posologyid).__dose[0].dosestrength){\n              let x = posology.__dose[0].dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + posology.__dose[0].dosestrength + ' ' + posology.__dose[0].dosestrengthunits + ',';\n              doseToShow = doseToShow + ' ' + x;             \n            }\n          }\n      }\n\n      if (posology.dosetype == DoseType.strength) {\n        let x = posology.__dose[0].dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + posology.__dose[0].strengthneumerator + ' ' + posology.__dose[0].strengthdenominatorunit + ',';\n        doseToShow = doseToShow + ' ' + x;\n      }\n      if (posology.dosetype == DoseType.descriptive) {\n\n        let x = posology.__dose[0].dosestartdatetime.split('T')[1].slice(0, 5) + ' - ' + posology.__dose[0].descriptivedose + ',';\n        doseToShow = doseToShow + ' ' + x;\n      }\n\n      posology.__dose.forEach(dose => {\n        let date = dose.dosestartdatetime.split('T')[0];\n        let time = dose.dosestartdatetime.split('T')[1].slice(0, 5);\n        let changeTimeFormat = time.split(':');\n\n        doseToShow = doseToShow + ' ' + time + ',';\n        this.marRecords.push({\n          time,\n          descriptiveDose: dose.descriptivedose,\n          doseType: dose.dosetype != null ? dose.dosetype : posology.dosetype,\n          frequency: posology.frequency,\n          posologyId: posology.posology_id,\n          dose: (posology.dosetype == 'strength') ? dose.strengthdenominator + ' ' + dose.strengthdenominatorunit : posology.titration == true ? posology.titrationtargetmax + ' ' + posology.titrationtargetmin :dose.dosesize,\n          doseunit: dose.strengthdenominatorunit || dose.doseunit,\n          bolusDose: (posology.dosetype == 'strength') ? dose.strengthdenominator + ' ' + dose.strengthdenominatorunit : (posology.dosetype == 'units') ? dose.dosesize + ' ' + (dose.doseunit == 'suppository'? 'supp': dose.doseunit) : '' ,\n          rateDose: dose.infusionrate + ' ' +  posology.infusionrateunits,\n          ciDose: dose.infusionrate + ' ' + posology.infusionrateunits,\n          ciDate: date,\n          doseId: dose.dose_id,\n          titration: posology.titration,\n          doctorsorder: posology.doctorsorder,\n          logicalId: (posology.infusiontypeid === 'bolus') ? 'start_' + moment(new Date).format('YYYYMMDD') + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + dose.dose_id.toString() : moment(new Date).format('YYYYMMDD') + changeTimeFormat[0] + changeTimeFormat[1] + \"_\" + dose.dose_id.toString()\n        });\n\n      });\n      this.protocolCount = posology.__dose.length;\n    }\n    let presAdditionalCondition = '';\n      let additional_condition = this.appService.MetaPrescriptionadditionalcondition.find((x) =>\n          x.prescriptionadditionalconditions_id ==\n          prescriptions.prescriptionadditionalconditions_id\n      );\n      if(additional_condition)\n      {\n        presAdditionalCondition = additional_condition.additionalcondition\n      }\n      else{\n        presAdditionalCondition = \" \";\n      }\n      \n    return doseToShow + (presAdditionalCondition != ' '?' - ':' ') + presAdditionalCondition;\n  }\n}\n","\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectsService {\n\n  encounterChange = new Subject();\n  personIdChange = new Subject();\n  apiServiceReferenceChange = new Subject();\n  unload = new Subject();\n  moduleAction = new Subject();\n  frameworkEvent = new Subject();\n  weightChanged = new Subject();\n  prescriptionHistory = new Subject();\n  additionalAdministration = new Subject();\n  drugInformation = new Subject();\n  addBolus = new Subject();\n  changeInfusion = new Subject();\n  adjustInfusion = new Subject();\n  pauseInfusion = new Subject();\n  restartInfusion = new Subject();\n  refreshDrugChart = new Subject();\n  editPrescription = new Subject();\n  reloadPrescriptions = new Subject();\n  refreshTemplate = new Subject();\n  clonePrescription = new Subject();\n  therapyOverview = new Subject();\n  comments = new Subject();\n  viewReminder = new Subject();\n  patientDrug = new Subject();\n  supplyRequest = new Subject();\n  pharmacyReview = new Subject();\n  reconcillationNotes = new Subject();\n  CompleteReconciliation = new Subject();\n  nursingInstruction = new Subject();\n  closePform = new Subject();\n  movePatientDrugs = new Subject();\n  showWarnings = new Subject();\n  closeWarnings = new Subject();\n  showMODWarnings = new Subject();\n  closeMODWarnings = new Subject();\n  closeAppComponentPopover = new Subject();\n  showBannerWarnings = new Subject();\n  showopAdministration = new Subject();\n  closeBannerWarnings = new Subject();\n  captureWeight = new Subject();\n  titrationChart = new Subject();\n  endInfusion = new Subject();\n  loadModule = new Subject();\n  reloadCurrentModule = new Subject();\n  ShowRefreshPageMessage= new Subject();\n  recheckBasketWarnings = new Subject();\n  showOPWarnings = new Subject();\n  closeOPWarnings = new Subject();\n  showAwayPeriod = new Subject();\n  constructor() {\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Timeline, DataSet } from 'vis-timeline/standalone';\n\nimport { AppService } from \"src/app/services/app.service\"\nimport moment from 'moment';\n\nimport { TimelineZoomLevel } from '../models/encounter.model'\nimport { Medication, Prescriptionroutes } from '../models/EPMA';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TimelineServiceService {\n  timeline: Timeline;\n  toptimeline: Timeline;\n  options = {};\n  items: any;\n  groups: any;\n  timelineZoomLevel: TimelineZoomLevel = new TimelineZoomLevel();\n  PRNids = new Array();\n\n  constructor(private appService: AppService) {\n\n    this.configureOptions(\"top\");\n\n  }\n\n  Reset() {\n    this.timeline = null;\n    this.toptimeline = null;\n    this.options = {};\n    this.items = null;\n    this.groups = null;\n    this.PRNids = new Array();\n  }\n\n  mapGroupids(filterValue: any, option: any) {\n    this.options = {};\n    this.PRNids = new Array();\n    this.groups = new DataSet();\n    this.items = new DataSet();\n    this.configureOptions(\"none\");\n  \n    for (var val of this.appService.FilteredPrescription) {\n      let med =val.__medications.find(x => x.prescription_id === val.prescription_id && x.isprimary == true)\n      if (option == \"Basic\") {\n\n        if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id && x.group == filterValue)) {\n          continue;\n        }\n        // Add all to this no grouping\n\n      }\n      else if (option == \"custom group\") {\n        if (med.customgroup != filterValue) {\n          continue;\n        }\n\n      }\n      else if (option == \"Base\") {     \n        if (this.appService.appConfig.AppSettings.UseStoredClassification) {\n          let cl = med.classification ? med.classification : \"Others\"\n          if (cl != filterValue) {\n            continue;\n          }\n        }\n        else\n        {\n          let cl = (val.__drugcodes??[]).filter(x => x.additionalCodeSystem == \"FDB\");\n          cl = (cl.length > 0 && cl[0].additionalCodeDesc) ? cl[0].additionalCodeDesc : \"Others\"\n          if (cl != filterValue) {\n            continue;\n          }\n        } \n      }\n      else if (option == \"Route\") {\n        // if (this.appService.Prescriptionroutes.find(x => x.prescription_id === val.prescription_id && x.isdefault == true).route != filterValue) {\n        //   continue;\n        // } \n\n        if (val.__routes.length == 0 || val.__routes.find(x => x.isdefault == true).route != filterValue) {\n          continue;\n        }\n      }\n\n      var container = document.getElementById(val.prescription_id.toString());\n      this.groups.update({ id: val.prescription_id, content: container });\n\n    }\n    this.loadEvents(filterValue, option);\n    // this.createPRNEEvent(classification);\n  }\n\n  loadEvents(filterValue: any, option: any) {\n   \n    for(var arr of this.appService.PersonAwayPeriod){\n\n      if(arr.isenabled){\n     \n      this.items.update( {id: arr.epma_personawayperiod_id, content: this.appService.appConfig.AppSettings.personAwayHeading, start: moment(arr.awayfrom).format(\"YYYY-MM-DD HH:mm\"), end: moment(arr.awayto).format(\"YYYY-MM-DD HH:mm\"), type: 'background', className: 'negative', tooltip: ''})\n      }\n    }\n    for (var dose of this.appService.events) {\n\n      if (option == \"Basic\") {\n        if (!this.appService.dcgroupadded.find(x => x.prescriptionid == dose.prescription_id && x.group == filterValue)) {\n          continue;\n        }\n        // Add all to this no grouping\n\n      }\n      else if (option == \"Base\") {\n        let cl = (this.appService.Prescription.find(p=>p.prescription_id == dose.prescription_id).__drugcodes??[]).filter(x => x.additionalCodeSystem == \"FDB\");\n        cl = (cl.length > 0 && cl[0].additionalCodeDesc) ? cl[0].additionalCodeDesc : \"Others\"\n        \n        if (cl != filterValue) {\n          continue;\n        }\n\n      }\n      else if (option == \"Route\") {\n        if ([].concat(...this.appService.Prescription.map(p => p.__routes)).find((x: any) => x.prescription_id === dose.prescription_id && x.isdefault == true).route != filterValue) {\n          continue;\n        }\n      }\n      \n      //  need to change not in if condetion\n      if (this.appService.Prescription.find(x => x.prescription_id === dose.prescription_id).isinfusion) {\n        if (dose.eventEnd) {\n          dose.eventEnd = moment(dose.eventEnd);\n          // this.items.update({\n          //   id: dose.dose_id, content: dose.content, start: dose.eventStart, end: dose.eventEnd, group: dose.prescription_id\n          // })\n          this.addUpdateItem(dose.dose_id, dose.content,  dose.opacityclass, dose.eventStart, dose.eventEnd, dose.prescription_id, dose.title)\n\n        }\n        else {\n          this.addUpdateItem(dose.dose_id, dose.content,  dose.opacityclass, dose.eventStart, dose.eventEnd, dose.prescription_id, dose.title)\n        }\n\n      }\n      else {\n        this.addUpdateItem(dose.dose_id, dose.content, dose.opacityclass, dose.eventStart, dose.eventEnd, dose.prescription_id, dose.title)\n\n        // if (dose.iscancelled) {\n\n        //   this.addUpdateItem(dose.doseventEnde_id, contents.Administration_withheld_by_doctor, \"transparant\", dose.dosestartdatetime, dose.dosestartdatetime, dose.prescription_id, \"title\")\n        // }\n        // else {\n        // this.createMedicineDoseEvent(dose);\n        // }\n      }\n    }\n    for (var arrp of this.appService.CurrentReminderevents) {\n      this.items.add({\n        id: arrp.dose_id, content: arrp.content,\n        className: \"transparant\" + arrp.opacityclass, start: arrp.eventStart, end: arrp.eventEnd, group: arrp.prescription_id, title: arrp.title\n      })\n   }\n    for (var arrp of this.appService.arrPrescriptionCurrentFlowRate) {\n      \n      this.items.update({ id: \"status\"+arrp.prescriptionid, content: arrp.content, start: moment(arrp.start).format(\"YYYY-MM-DD HH:mm\"), end: moment(arrp.end).format(\"YYYY-MM-DD HH:mm\"), type: 'background', className: 'transbackground', tooltip: '', group: arrp.prescriptionid, })\n   \n  }\n\n  }\n\n  getConcadeCode(Code: any) {\n    // let Code= this.appService.DCGroups[0].MatchConditions.ClassificationCodes[0].Code.split(\".\");\n    let concadCode = \"\";\n    for (let x of Code) {\n      if (!isNaN(x)) {\n        concadCode = concadCode + (+x);\n      }\n    }\n    return concadCode;\n  }\n  groupingBasics() {\n    this.appService.dcgroupadded = [];\n    for (var val of this.appService.FilteredPrescription) {\n\n        let isIvFluid=false;\n      if (val.__drugcodes) {\n        const customrows = val.__drugcodes.filter(x => x.additionalCodeSystem.toLowerCase() == \"custom\");\n        const ivfluids = customrows.filter(x => x.additionalCode.toUpperCase() == \"BASIC_FLUID\");\n        if (ivfluids.length > 0)\n          isIvFluid = true;\n        else\n          isIvFluid = false;\n      }\n\n\n      if (val.__posology.find(x => x.iscurrent == true).frequency == \"stat\") {\n        this.appService.dcgroupadded.push({ group: \"Stat\", prescriptionid: val.prescription_id })\n      }\n\n        let Presindecation = JSON.parse(val.indication)\n        let drug_bnf = \"\";\n        let drug_fdb = \"\";\n        if (val.__drugcodes) {\n          const bnfrow = val.__drugcodes.filter(x => x.additionalCodeSystem == \"BNF\");\n          if (bnfrow.length > 0)\n            drug_bnf = bnfrow[0].additionalCode;\n\n            const fdbfow = val.__drugcodes.filter(x => x.additionalCodeSystem == \"FDB\");\n            if (fdbfow.length > 0)\n            drug_fdb = fdbfow[0].additionalCode;\n        }\n\n       \n        drug_bnf.padEnd(10, \"0\");\n        drug_fdb.padEnd(10, \"0\");\n\n        for (let group of this.appService.DCGroups) {\n          let isbnfmatch = false\n          for (let arrcode of group.MatchConditions.ClassificationCodes) {\n            let drugMatchCode = \"\";\n            let configMatchCode = (arrcode.Code ?? \"\").replace(/\\./g, \"\");\n            if(arrcode.CodeType.toLowerCase() == \"bnf\"){\n              drugMatchCode = (drug_bnf ?? \"\").replace(/\\./g, \"\").substring(0, configMatchCode.length)\n            }\n            else if(arrcode.CodeType.toLowerCase() == \"fdb\"){\n              drugMatchCode = (drug_fdb ?? \"\").replace(/\\./g, \"\").substring(0, configMatchCode.length)\n            }\n            if (drugMatchCode == configMatchCode) {\n              isbnfmatch = true;\n            }\n          }\n\n          let isindecationmatch = false;\n          for (let arrindecation of group.MatchConditions.Indications) {\n            if (Presindecation) {\n              if (arrindecation.Code == Presindecation.code || arrindecation.Indication == Presindecation?.indication) {\n                isindecationmatch = true\n              }\n            }\n          }\n\n          if (group.MatchType == \"AND\") {\n\n            if (isindecationmatch && isbnfmatch) {\n              const isSkipStat = group.SkipStatGroup && group.SkipStatGroup == true;\n              let isInStat = this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id && x.group == \"Stat\");\n\n             if(isSkipStat == true && isInStat){\n                isInStat.group = group.GroupName;\n             }\n              else{\n              if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres 47  4.0.1.0\n                this.appService.dcgroupadded.push({ group: group.GroupName, prescriptionid: val.prescription_id })\n              }\n            }\n            }\n          }\n          else {\n            if (isindecationmatch || isbnfmatch) {\n              const isSkipStat = group.SkipStatGroup && group.SkipStatGroup == true;\n              let isInStat = this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id && x.group == \"Stat\");\n\n             if(isSkipStat == true && isInStat){\n                isInStat.group = group.GroupName;\n             }\n              else{\n              if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres 47  4.0.1.0\n                this.appService.dcgroupadded.push({ group: group.GroupName, prescriptionid: val.prescription_id })\n              }\n            }\n            }\n          }\n        }\n\n        if (val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'ci' || val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'pca' || (val.__posology.find(x => x.iscurrent == true).infusiontypeid == 'rate' && val.__posology.find(x => x.iscurrent == true).frequency == \"variable\")) {\n          if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres\n            this.appService.dcgroupadded.push({ group: \"Variable/Continuous infusion\", prescriptionid: val.prescription_id })\n          }\n        }\n        else if (val.__posology.find(x => x.iscurrent == true).prn == true) {\n          if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres\n            this.appService.dcgroupadded.push({ group: \"PRN\", prescriptionid: val.prescription_id })\n          }\n        }\n        else if (isIvFluid) {\n\n          let i = this.appService.DCGroups.find(x=>x.GroupName ==\"IV Fluid\");\n          let isInStat = this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id && x.group == \"Stat\");\n          if(i && i.SkipStatGroup && i.SkipStatGroup == \"true\")\n          {  \n              isInStat.group = \"IV Fluid\";\n          }\n          else{\n          if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres\n            this.appService.dcgroupadded.push({ group: \"IV Fluid\", prescriptionid: val.prescription_id })\n          }\n        }\n        }\n        else {\n          if (!this.appService.dcgroupadded.find(x => x.prescriptionid == val.prescription_id)) {// checking is allready add this pres\n            this.appService.dcgroupadded.push({ group: \"Regular drugs\", prescriptionid: val.prescription_id })\n          }\n        }\n    }\n  }\n  addUpdateItem(id: any, content: any, className: any, start: any, end: any = null, groupid: any, title: any) {\n    \n    if (content.indexOf(\"divPRN\") >= 0) {\n      this.items.update({\n        id: id, content: content,\n        className: \"PRNRange\"+className, start: start, end: end, group: groupid,title:title\n\n      })\n    }\n   else if (content.indexOf(\"PauseDurline\") >= 0) {\n      this.items.update({\n        id: id, content: content,\n        className: \"PauseDurline\"+className, start: start, end: end, group: groupid,title:title\n\n      })\n    }\n    else {\n      this.items.update({\n        id: id, content: content,\n        className: \"transparant\" +className, start: start, end: end, group: groupid ,title:title\n\n\n      })\n    }\n  }\n\n\n  configureOptions(orientation: any) {\n\n    // Configuration for the Timeline\n\n    this.timelineZoomLevel.start = this.appService.changechoosenFilterDate.toDate();\n    this.timelineZoomLevel.start.setHours(0);\n    this.timelineZoomLevel.end = new Date(this.timelineZoomLevel.start);\n    this.timelineZoomLevel.end.setHours(12);\n\n    this.timelineZoomLevel.end.setDate(this.timelineZoomLevel.end.getDate() + 1);\n    let currentDate = this.appService.changechoosenFilterDate.toDate();\n    let maxUsercanscroll = moment(currentDate).add(7, 'days');\n    let minUsercanscroll = moment(currentDate).add(-7, 'days');\n    maxUsercanscroll.set({ hour: 23, minute: 59, second: 0, millisecond: 0 })\n    minUsercanscroll.set({ hour: 0, minute: 0, second: 0, millisecond: 0 })\n    this.options = {\n      stack: false,\n      zoomKey: \"altKey\",\n      start: this.timelineZoomLevel.start,\n      end: this.timelineZoomLevel.end,\n      min: minUsercanscroll,                // lower limit of visible range\n      max: maxUsercanscroll,\n      zoomMin: 60000 * 5,\n      zoomMax: (1000 * 60 * 60 * 24 * 7 + 10),\n      orientation: { axis: orientation },\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: { div: ['class'], strong:[] },\n        },\n      }\n    };\n\n\n  }\n\n\n}\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Injectable()\nexport class UpsertTransactionManager {\n    entities: UpsertEntity[] = new Array<UpsertEntity>();\n    baseApiUrl: string;\n    apiServiceObj: any;\n    destroy$ = new Subject<boolean>();\n    savedDetails: UpsertEntity[] = null;\n\n    beginTran(baseApiUrl: string, apiServiceObj: any) {\n        this.entities = new Array<UpsertEntity>();\n        this.savedDetails = null;\n        this.baseApiUrl = baseApiUrl;\n        this.apiServiceObj = apiServiceObj;\n    }\n\n    addEntity(synapseNamespace: string, entityName: string, data: any, dbOp?: dbOp): void {\n\n        if (synapseNamespace && entityName && data) {\n\n            //cloning the object - let original remain intact\n            let dataToSave: any = JSON.parse(JSON.stringify(data));\n\n            dbOp = dbOp ? dbOp : 'ins';\n\n            let entity = new UpsertEntity();\n            entity[`${synapseNamespace}|${entityName}:${dbOp}`] = dataToSave;\n            this.entities.push(entity);\n        }\n    }\n\n    //Note: Once the save function is called, all the added entities will be removed from list\n    save(onSuccess?: (savedDetails: any) => void, onError?: (err: any) => void, synchronousPost = true) {\n\n        if (this.entities == null || !Array.isArray(this.entities) || this.entities.length == 0) {\n            if (onError)\n                onError(\"No Entities to save\");\n            return;\n        }\n        const url = `${this.baseApiUrl}/PostObjectsInTransaction`;\n\n        console.log(JSON.stringify(this.entities));\n\n        this.apiServiceObj.postRequest(url, this.entities, synchronousPost)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((newEntityDetails: any) => {\n                console.log('Saved Details');\n                console.log(newEntityDetails);\n\n                this.entities = null;\n\n                this.savedDetails = newEntityDetails.data ? newEntityDetails.data : newEntityDetails;\n                if (onSuccess)\n                    onSuccess(newEntityDetails);\n\n            },\n                (err) => {\n                    console.log('Error Details');\n                    console.log(err);\n\n                    this.entities = null;\n                    this.savedDetails = null;\n\n                    if (onError)\n                        onError(err);\n                });\n    }\n\n    getSavedEntity(synapseNamespace?: string, entityName?: string, filter?: (item: any) => boolean): any {\n\n        if (!this.savedDetails) return null;\n\n        var entityToFind = this.savedDetails[`${synapseNamespace}|${entityName}`];//this.savedDetails.find(sd=> sd.key == `${synapseNamespace}|${entityName}`);\n\n        if (!entityToFind) return null;\n\n        if (filter && Array.isArray(entityToFind)) {\n            return entityToFind.filter(e => filter(e));\n        }\n\n        return entityToFind;\n    }\n\n    destroy() {\n        if (this.destroy$) {\n            this.destroy$.next(true);\n            this.destroy$.complete();\n        }\n\n    }\n}\n\nexport class UpsertEntity {\n    [key: string]: any;\n}\n\nexport type dbOp = 'ins' | 'del';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 5637,\n\t\"./af.js\": 5637,\n\t\"./ar\": 6777,\n\t\"./ar-dz\": 4508,\n\t\"./ar-dz.js\": 4508,\n\t\"./ar-kw\": 7504,\n\t\"./ar-kw.js\": 7504,\n\t\"./ar-ly\": 5373,\n\t\"./ar-ly.js\": 5373,\n\t\"./ar-ma\": 2412,\n\t\"./ar-ma.js\": 2412,\n\t\"./ar-ps\": 8823,\n\t\"./ar-ps.js\": 8823,\n\t\"./ar-sa\": 6670,\n\t\"./ar-sa.js\": 6670,\n\t\"./ar-tn\": 6448,\n\t\"./ar-tn.js\": 6448,\n\t\"./ar.js\": 6777,\n\t\"./az\": 3009,\n\t\"./az.js\": 3009,\n\t\"./be\": 8299,\n\t\"./be.js\": 8299,\n\t\"./bg\": 4685,\n\t\"./bg.js\": 4685,\n\t\"./bm\": 1171,\n\t\"./bm.js\": 1171,\n\t\"./bn\": 3590,\n\t\"./bn-bd\": 5841,\n\t\"./bn-bd.js\": 5841,\n\t\"./bn.js\": 3590,\n\t\"./bo\": 4309,\n\t\"./bo.js\": 4309,\n\t\"./br\": 4130,\n\t\"./br.js\": 4130,\n\t\"./bs\": 8033,\n\t\"./bs.js\": 8033,\n\t\"./ca\": 5294,\n\t\"./ca.js\": 5294,\n\t\"./cs\": 3028,\n\t\"./cs.js\": 3028,\n\t\"./cv\": 5807,\n\t\"./cv.js\": 5807,\n\t\"./cy\": 342,\n\t\"./cy.js\": 342,\n\t\"./da\": 8269,\n\t\"./da.js\": 8269,\n\t\"./de\": 1489,\n\t\"./de-at\": 2123,\n\t\"./de-at.js\": 2123,\n\t\"./de-ch\": 7757,\n\t\"./de-ch.js\": 7757,\n\t\"./de.js\": 1489,\n\t\"./dv\": 8152,\n\t\"./dv.js\": 8152,\n\t\"./el\": 7687,\n\t\"./el.js\": 7687,\n\t\"./en-au\": 6668,\n\t\"./en-au.js\": 6668,\n\t\"./en-ca\": 6798,\n\t\"./en-ca.js\": 6798,\n\t\"./en-gb\": 3615,\n\t\"./en-gb.js\": 3615,\n\t\"./en-ie\": 1364,\n\t\"./en-ie.js\": 1364,\n\t\"./en-il\": 9907,\n\t\"./en-il.js\": 9907,\n\t\"./en-in\": 533,\n\t\"./en-in.js\": 533,\n\t\"./en-nz\": 3190,\n\t\"./en-nz.js\": 3190,\n\t\"./en-sg\": 1096,\n\t\"./en-sg.js\": 1096,\n\t\"./eo\": 3962,\n\t\"./eo.js\": 3962,\n\t\"./es\": 7726,\n\t\"./es-do\": 5010,\n\t\"./es-do.js\": 5010,\n\t\"./es-mx\": 3654,\n\t\"./es-mx.js\": 3654,\n\t\"./es-us\": 9043,\n\t\"./es-us.js\": 9043,\n\t\"./es.js\": 7726,\n\t\"./et\": 5343,\n\t\"./et.js\": 5343,\n\t\"./eu\": 728,\n\t\"./eu.js\": 728,\n\t\"./fa\": 787,\n\t\"./fa.js\": 787,\n\t\"./fi\": 1771,\n\t\"./fi.js\": 1771,\n\t\"./fil\": 5335,\n\t\"./fil.js\": 5335,\n\t\"./fo\": 9761,\n\t\"./fo.js\": 9761,\n\t\"./fr\": 1670,\n\t\"./fr-ca\": 8991,\n\t\"./fr-ca.js\": 8991,\n\t\"./fr-ch\": 7280,\n\t\"./fr-ch.js\": 7280,\n\t\"./fr.js\": 1670,\n\t\"./fy\": 4203,\n\t\"./fy.js\": 4203,\n\t\"./ga\": 9858,\n\t\"./ga.js\": 9858,\n\t\"./gd\": 8605,\n\t\"./gd.js\": 8605,\n\t\"./gl\": 7365,\n\t\"./gl.js\": 7365,\n\t\"./gom-deva\": 3896,\n\t\"./gom-deva.js\": 3896,\n\t\"./gom-latn\": 5587,\n\t\"./gom-latn.js\": 5587,\n\t\"./gu\": 7950,\n\t\"./gu.js\": 7950,\n\t\"./he\": 2029,\n\t\"./he.js\": 2029,\n\t\"./hi\": 1897,\n\t\"./hi.js\": 1897,\n\t\"./hr\": 9816,\n\t\"./hr.js\": 9816,\n\t\"./hu\": 2253,\n\t\"./hu.js\": 2253,\n\t\"./hy-am\": 8196,\n\t\"./hy-am.js\": 8196,\n\t\"./id\": 1307,\n\t\"./id.js\": 1307,\n\t\"./is\": 5474,\n\t\"./is.js\": 5474,\n\t\"./it\": 3099,\n\t\"./it-ch\": 8188,\n\t\"./it-ch.js\": 8188,\n\t\"./it.js\": 3099,\n\t\"./ja\": 9127,\n\t\"./ja.js\": 9127,\n\t\"./jv\": 182,\n\t\"./jv.js\": 182,\n\t\"./ka\": 758,\n\t\"./ka.js\": 758,\n\t\"./kk\": 3444,\n\t\"./kk.js\": 3444,\n\t\"./km\": 2034,\n\t\"./km.js\": 2034,\n\t\"./kn\": 6223,\n\t\"./kn.js\": 6223,\n\t\"./ko\": 3064,\n\t\"./ko.js\": 3064,\n\t\"./ku\": 8714,\n\t\"./ku-kmr\": 961,\n\t\"./ku-kmr.js\": 961,\n\t\"./ku.js\": 8714,\n\t\"./ky\": 2062,\n\t\"./ky.js\": 2062,\n\t\"./lb\": 4796,\n\t\"./lb.js\": 4796,\n\t\"./lo\": 9279,\n\t\"./lo.js\": 9279,\n\t\"./lt\": 106,\n\t\"./lt.js\": 106,\n\t\"./lv\": 1840,\n\t\"./lv.js\": 1840,\n\t\"./me\": 2240,\n\t\"./me.js\": 2240,\n\t\"./mi\": 3588,\n\t\"./mi.js\": 3588,\n\t\"./mk\": 5518,\n\t\"./mk.js\": 5518,\n\t\"./ml\": 7823,\n\t\"./ml.js\": 7823,\n\t\"./mn\": 8657,\n\t\"./mn.js\": 8657,\n\t\"./mr\": 1285,\n\t\"./mr.js\": 1285,\n\t\"./ms\": 3014,\n\t\"./ms-my\": 6253,\n\t\"./ms-my.js\": 6253,\n\t\"./ms.js\": 3014,\n\t\"./mt\": 167,\n\t\"./mt.js\": 167,\n\t\"./my\": 7940,\n\t\"./my.js\": 7940,\n\t\"./nb\": 14,\n\t\"./nb.js\": 14,\n\t\"./ne\": 9023,\n\t\"./ne.js\": 9023,\n\t\"./nl\": 4208,\n\t\"./nl-be\": 1412,\n\t\"./nl-be.js\": 1412,\n\t\"./nl.js\": 4208,\n\t\"./nn\": 1354,\n\t\"./nn.js\": 1354,\n\t\"./oc-lnc\": 870,\n\t\"./oc-lnc.js\": 870,\n\t\"./pa-in\": 389,\n\t\"./pa-in.js\": 389,\n\t\"./pl\": 7342,\n\t\"./pl.js\": 7342,\n\t\"./pt\": 4774,\n\t\"./pt-br\": 3003,\n\t\"./pt-br.js\": 3003,\n\t\"./pt.js\": 4774,\n\t\"./ro\": 5333,\n\t\"./ro.js\": 5333,\n\t\"./ru\": 3451,\n\t\"./ru.js\": 3451,\n\t\"./sd\": 3921,\n\t\"./sd.js\": 3921,\n\t\"./se\": 9682,\n\t\"./se.js\": 9682,\n\t\"./si\": 582,\n\t\"./si.js\": 582,\n\t\"./sk\": 4348,\n\t\"./sk.js\": 4348,\n\t\"./sl\": 5337,\n\t\"./sl.js\": 5337,\n\t\"./sq\": 9358,\n\t\"./sq.js\": 9358,\n\t\"./sr\": 683,\n\t\"./sr-cyrl\": 9382,\n\t\"./sr-cyrl.js\": 9382,\n\t\"./sr.js\": 683,\n\t\"./ss\": 1156,\n\t\"./ss.js\": 1156,\n\t\"./sv\": 9855,\n\t\"./sv.js\": 9855,\n\t\"./sw\": 8536,\n\t\"./sw.js\": 8536,\n\t\"./ta\": 7754,\n\t\"./ta.js\": 7754,\n\t\"./te\": 7809,\n\t\"./te.js\": 7809,\n\t\"./tet\": 1297,\n\t\"./tet.js\": 1297,\n\t\"./tg\": 2527,\n\t\"./tg.js\": 2527,\n\t\"./th\": 5862,\n\t\"./th.js\": 5862,\n\t\"./tk\": 9331,\n\t\"./tk.js\": 9331,\n\t\"./tl-ph\": 4387,\n\t\"./tl-ph.js\": 4387,\n\t\"./tlh\": 3592,\n\t\"./tlh.js\": 3592,\n\t\"./tr\": 9732,\n\t\"./tr.js\": 9732,\n\t\"./tzl\": 9570,\n\t\"./tzl.js\": 9570,\n\t\"./tzm\": 3553,\n\t\"./tzm-latn\": 7699,\n\t\"./tzm-latn.js\": 7699,\n\t\"./tzm.js\": 3553,\n\t\"./ug-cn\": 5674,\n\t\"./ug-cn.js\": 5674,\n\t\"./uk\": 9974,\n\t\"./uk.js\": 9974,\n\t\"./ur\": 5773,\n\t\"./ur.js\": 5773,\n\t\"./uz\": 357,\n\t\"./uz-latn\": 7135,\n\t\"./uz-latn.js\": 7135,\n\t\"./uz.js\": 357,\n\t\"./vi\": 43,\n\t\"./vi.js\": 43,\n\t\"./x-pseudo\": 767,\n\t\"./x-pseudo.js\": 767,\n\t\"./yo\": 150,\n\t\"./yo.js\": 150,\n\t\"./zh-cn\": 1828,\n\t\"./zh-cn.js\": 1828,\n\t\"./zh-hk\": 6644,\n\t\"./zh-hk.js\": 6644,\n\t\"./zh-mo\": 9305,\n\t\"./zh-mo.js\": 9305,\n\t\"./zh-tw\": 1860,\n\t\"./zh-tw.js\": 1860\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;"],"names":["EventEmitter","Subscription","moment","modules","popovers","TemplateNumberComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","browserName","browserVersion","ɵɵelement","ɵɵproperty","groupFilterType","ɵɵtemplate","AppComponent_div_3_app_drug_chart_1_Template","showdrugChart","ɵɵlistener","AppComponent_app_demo_admission_record_4_Template_app_demo_admission_record_destroyTemplate_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","destroyRecordsTemplate","numberOfEmptyTemplates","startDate","endDate","medicationAdministrationEmptyTemplate","AppComponent","datacontract","value","appService","personId","apiService","subjects","unload","initConfigAndGetMeta","showPrintIcon","moduleAction","subscriptions","add","subscribe","e","additionalInfo","terminusmodule","find","x","key","currentTerminusModle","constructor","apiRequest","modalService","cd","dr","title","noEncountersAvailable","datePicker","showPopOver","none","showTitrationChart","showChoosedate","browserVersionError","conflictuserid","showAdustInfusion","frameworkAction","loadDrugChart","currentmodule","clonePrescription","cloningExternally","showPrescribingForm","totalmetadatarequests","Showtherapies","Sorttherapie","FilterRoutesby","AllRoutes","isCalledOnce","printing","basicgrouping","isLoading","showChart","generateChart","reset","detectChanges","InitApp","ngOnDestroy","logToConsole","warningService","contexts","forEach","w","resetWarningService","encounter","isCurrentEncouner","unsubscribe","next","input","document","getElementById","JSON","parse","person_id","lenghOfStay","GetDurationBetweenDates","admitdatetime","personDOB","dateofbirth","authService","user","auth","getToken","then","token","access_token","getRequest","Math","random","response","appConfig","baseURI","uris","baseuri","enableLogging","enablelogging","browserVersionSupported","AppSettings","minSafariVersionSupported","buffertimeAmber","bufferTime","criticalDrugbuffertimeAmber","buffertime_criticalDrug","EnableDischargeSummaryComplete","bufferAdministered","pleaseResupplyStockValidation","isReasonForChangeReuired","platfromServiceURI","platformserviceuri","DCGroups","administrationTimeDiffInMinute","GetMetaData","loggedInUserName","getAllPrescriptionMeta","getPrescriptionsForCurrentEncounter","getSupplyRequest","GetMedicationSupply","GetWitnesAuthentication","GetPrescriptionEvent","GetNursingInstruction","GetDataVersion","cb","modulename","dataversion","console","log","Prescription","FilteredPrescription","TherapyPrescription","getAllPrescription","getAdminstrations","p","UpdatePrescriptionCompletedStatus","getReminders","getPharmacyReviewStatus","isAppDataReady","curTime","Date","toDate","format","prescriptionstatus_id","lastmodifiedon","push","VtmUnits","changeGroupType","option","prescriptionroutes","concat","map","__routes","Choosenfilterdate","item","route","filter","index","self","indexOf","DrugeGroupsType","UseStoredClassification","primaryMedications","__medications","isprimary","classification","allprescriptionsfdbgroups","__drugcodes","dc","additionalCodeSystem","additionalCodeDesc","sort","i","length","trim","drugGroupOption","filterDateAndRought","chooseDateclick","parameter","selectedDate","set","hour","minute","second","millisecond","changechoosenFilterDate","prescription","enddate","GetCurrentPosology","prescriptionenddate","preStart","startdatetime","sortdate","poso","__posology","isSameOrAfter","prescriptionstartdate","isValid","isSameOrBefore","isSame","__completed","__completedOn","sortPrescription","therapietype","routerupe","d","isdefault","sortby","a","b","name","drugRouteOption","drugSortOrder","therapyOverview","undefined","changechoosendate","daynumber","UTC","getFullYear","getMonth","getDate","ChoosenfilterdateChange","chartScrolled","setNoOfDaysTherapy","number","therapyCurrentDate","therapyNoOfDays","prevDaysTherapy","nextDaysTherapy","onDatePickerClose","event","onDatePickerOpen","makeId","result","characters","charactersLength","charAt","floor","CheckBannerWarnings","bannerWarningStatus","showBannerWarnings","refWeightValue","refHeightValue","bodySurfaceArea","sqrt","toFixed","updateDates","openActivePrintingTemplate","getHeightWeight","setTimeout","openCurrentPrintingTemplate","getPrescriptionNumber","config","backdrop","ignoreBackdropClick","class","bsModalRef","show","content","saveDone","templateNumber","cancel","openActive","initialState","errorMessage","marType","TriggerWarningUpdateCheck","warningServiceIPContext","loader","TriggerWarningUpdateOnChanges","existingWarningsStatus","showWarnings","BannerWarningsLoaded","_","ɵɵdirectiveInject","i1","SubjectsService","i2","AppService","i3","ApirequestService","i4","BsModalService","ChangeDetectorRef","i5","DataRequest","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","AppComponent_div_0_Template","AppComponent_div_2_Template","AppComponent_div_3_Template","AppComponent_app_demo_admission_record_4_Template","BrowserModule","provideHttpClient","withInterceptorsFromDi","ComponentsModule","createCustomElement","BsDatepickerModule","DatePipe","FormsModule","ToastrModule","BrowserAnimationsModule","AppModule","injector","ngDoBootstrap","el","customElements","define","ɵɵinject","Injector","bootstrap","_3","imports","forRoot","timeOut","preventDuplicates","declarations","CommonModule","DrugChartComponent","PopoverModule","ReactiveFormsModule","ModalModule","BsDropdownModule","NumberToWordsPipe","PrintDischargeComponent","DemoAdmissionRecordComponent","PrescriptionInfusionPrintTemplateComponent","PrescriptionNonInfusionPrintTemplateComponent","TabsModule","exports","AdministrationStatus","InfusionType","ɵɵtextInterpolate1","ctx_r1","DemoAdmissionRecordComponent_ng_template_0_span_18_Template","patientDetails","fullname","split","dob","age","gender","hospitalnumber","nhsnumber","ɵɵtextInterpolate","encounterDetails","assignedpatientlocationpointofcare","assignedpatientlocationroom","assignedpatientlocationbay","assignedpatientlocationbed","admitdate","reverse","join","dayspassed","consultingdoctortext","allergies","ɵɵelementContainer","pres_r3","tmp_12_0","tmp_13_0","ɵɵelementContainerStart","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_app_prescription_infusion_print_template_3_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_app_prescription_non_infusion_print_template_4_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_div_5_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_div_6_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_div_7_Template","infusiontypeid","prn","doctorsorder","infusiontype_id","frequency","ɵɵpipeBind2","dates","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_19_ng_container_2_Template","setHeightWidthForEmptyTemplate","repeatArray","returnTimeDose","di_r5","dj_r4","k_r7","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_1_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_3_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_4_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_6_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_7_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_9_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_10_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_12_td_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_td_2_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_3_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_4_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_td_5_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_6_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_7_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_td_8_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_9_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_10_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_td_11_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_ng_container_12_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_ng_container_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_tr_1_Template","arrayForTemplate","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_21_ng_container_2_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_2_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_3_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_span_10_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_span_14_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_span_18_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_19_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_20_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_ng_container_21_Template","ɵɵpureFunction1","_c10","getMargin","DemoAdmissionRecordComponent_ng_template_2_div_4_div_1_Template","DemoAdmissionRecordComponent_ng_template_2_div_5_div_3_Template","DemoAdmissionRecordComponent_ng_template_2_div_5_ng_container_4_Template","activeHeader_r8","DemoAdmissionRecordComponent_ng_template_2_div_6_ng_container_2_Template","activeSecondPart_r9","DemoAdmissionRecordComponent_ng_template_2_ng_container_0_Template","DemoAdmissionRecordComponent_ng_template_2_div_2_Template","DemoAdmissionRecordComponent_ng_template_2_div_3_Template","DemoAdmissionRecordComponent_ng_template_2_div_4_Template","DemoAdmissionRecordComponent_ng_template_2_div_5_Template","DemoAdmissionRecordComponent_ng_template_2_div_6_Template","descriptionTemplate_r10","sdate","edate","todaysDate","DemoAdmissionRecordComponent_ng_template_4_div_1_Template","DemoAdmissionRecordComponent_ng_template_4_div_2_Template","DemoAdmissionRecordComponent_ng_template_4_div_3_Template","prescriptionMapping","data_r11","getStatus","prescriptionMappingForTemplate","status","infoObj_r12","stat","date","time","DemoAdmissionRecordComponent_ng_template_6_div_0_div_1_app_prescription_infusion_print_template_4_Template","DemoAdmissionRecordComponent_ng_template_6_div_0_div_1_app_prescription_non_infusion_print_template_5_Template","DemoAdmissionRecordComponent_ng_template_6_div_0_div_1_div_6_Template","DemoAdmissionRecordComponent_ng_template_6_div_0_div_1_tr_22_Template","DemoAdmissionRecordComponent_ng_template_6_div_0_div_1_Template","DemoAdmissionRecordComponent_ng_template_6_div_0_Template","partTwoPrescriptions","timeerHelper","hs","renderer","activeRecordedDays","destroyTemplate","repeatArray2","pres1","daysOfWeek","transferDoses","presIds","prescriptionHistory","objectKeys","Object","keys","updateHeights","prescriptionProperFlow","born","attendingdoctortext","partTwoHeights","rateEventsdata","headerSection","ngOnInit","dateTo","createEvents","reportData","element","todayDate","dose_id","includes","eventStart","isBetween","pres","comments","medicationAdministration","Medicationadministration","slice","ma","splitAge","replace","RegExp","diff","metaprescriptionstatus","MetaPrescriptionstatus","prescription_id","getTime","emptyTemplates","dateFrom","subtract","pastEvents","isBefore","isAfter","checkPresId","activeStartDate","dateToForFuture","futureEvents","obj","endDateCheck","eventEnd","getDosesPrescriptions","protocolGetDay","distributeEvents","reportStartDate","reportEndDate","rangeEvents","todayEvents","getPrescriptionStatus","ngAfterViewInit","h","extraRowsHeight","presDivHeight","occupied","pageNumber","divs","div","filteredDiv","nativeElement","offsetHeight","height","pageHeaderDiv","pageHeaders","ind1","pageFooterDiv","pageFooter","span","createElement","text","createText","appendChild","setAttribute","xHeight","lastIndex","currTime","l","headerDiv","setStyle","divs2","headerSecondPart","pageFooter2","events","updatedObj","checkMedicationAdministered","administration","logicalid","isenterinerror","administrationStatus","adminstrationstatus","selfadminister","notgiven","defer","titration","ptcTime","originalDoseStartTime","y","posology_id","__dose","z","dosestartdatetime","originalDoseEndTime","doseenddatatime","convertToMinites","starsubstring","toString","startadministred","bDate","aDate","localeCompare","presTwo","requiredHistory","presHistory","suspendTimes","reqHistory","stopDate","history_status","dose","newIndex","doseDate","count","firstIndexChange","suspendTimeToShow","sTime","check1","check2","data","increaseInHeight","nameCharacters","commentChars","returnUpdatedHeight","doseId","newObj","administreddosesize","administreddoseunit","administeredstrengthdenominator","administeredstrengthdenominatorunits","administrationstartime","given","getDose","posology","admininsteredDose","isinfusion","administredinfusionrate","infusiondoserateunits","infusionrateunits","administeredstrengthneumerator","administeredstrengthneumeratorunits","administereddescriptivedose","doseUnit","doseunit","descriptivedose","dosetype","strengthneumerator","strengthneumeratorunit","strengthdenominator","strengthdenominatorunit","groupTitrationData","DoseEvents","grouptitration","titrationData","eventtype","titrateddosesize","titrateddoseunit","dosesize","pca","infusiondose","infusionrate","extraInfoRows","protocolCount","rateRowsLength","prescriptionDictionary","templateArray","Array","fill","extraRows","extraTransferRows","checkTodayTransfer","k","upHeight","finalRows","tempArray","pdfDownloaded","emit","shortenUnitName","unit","protocolPres","daysPassedSinceStartingProtocol","currentDate","diffDays","getProtocolRemaining","remainingDoses","prespos","repeatlastday","toAddPrescription","lastDayDose","addLastDay","repeatprotocoltimes","protocolDays","returnTimeFromObject","returnProtocolDose","j","currDate","month","addDay","checkTransfer","administeredEvents","createMultiArray","array","returnProtocolAdministartionStatus","administrationstatus","administeredEvent","ind","returnProtocolTime","doseEvent","startTime","doseTime","dosedatetime","titrateduntildatetime","splitLogicalId","substring","checkDose","checkDoseInfusionEvents","InfusionEvents","sortArray","arr","rows","cols","n","m","type","administered","flag","isPRN","returnXTime","dataObj","returnTransferTime","checkTime","checkTime2","dateFilteredData","logicalId","checkDate","currentpos","daysofweek","daysNumber","day","dosingdaysfrequency","finalLogicalID","weekData","ciDate","logicalDateArrray","logicalDate","originalDate","planneddatetime","checked","doseCheck","checkShowDose","bolusDose","rateDose","ciDose","changeDateFormat","changeTimeFormat","finalTitrationLogicalID","doctorConfirmData","posologyId","currentTime","finalCurrentDate","finalTitrationDate","descriptiveDose","doseEvents","rowsAddition","maxRows","row","added","maEvents","maCount","MAevents","ev","doseToSend","infusionduration","filterEvents","filterEvent","macount","margin","width","TimeerHelper","HelperService","Renderer2","DemoAdmissionRecordComponent_Query","DemoAdmissionRecordComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","DemoAdmissionRecordComponent_ng_template_2_Template","DemoAdmissionRecordComponent_ng_template_4_Template","DemoAdmissionRecordComponent_ng_template_6_Template","DemoAdmissionRecordComponent_Template_app_print_discharge_destroyComponent_8_listener","_r1","recordChart_r13","ɵɵpureFunction0","_c9","forkJoin","of","filterparam","filterParams","filters","orderbystatement","selectstatement","onResize","screenHeight","window","innerHeight","screenWidth","innerWidth","clickout","isitemclickedboolean","showContextMenu","timelineService","isZoomCssApplied","showAdministrationForm","showEditpopup","contextmenuX","contextmenuY","contextdistype","editpopuptypetype","doctorConformationModel","errorgeneratingevents","subscription","emitPrintIcon","Reset","timelinearray","TimelineArray","timeline","destroy","group","items","options","PRNArray","timediv","patientDetails$","encounterDetails$","encounter_id","prescriptionHistory$","postRequest","CreateSessionFilter","responseList","disabledatechange","condition","pm","pres_ids","filterparams","f","select","orderby","body","stringify","TimelineServiceService","DrugChartComponent_Query","DrugChartComponent_resize_HostBindingHandler","$event","ɵɵresolveWindow","DrugChartComponent_click_HostBindingHandler","ɵɵresolveDocument","contents","PrescriptionContext","prescriptionStatus","PRNids","PrescriptionFormEvent","bufferambertime","addReminderevents","epma_prescriptionreminders_id","pending","remindertype","admitdone","issystem","opacityclass","iseventinpatientaway","isreportevents","AllReminderevents","diffrence","stackclass","CurrentReminderevents","createWithDoseReminder","reminder","Overdue","defaultReminderOverdueTimePeriod","prescriptionEvents","activationdatetime","enddatetime","remindersack","ReminderAcknowledged","message","Reminder","Reminderdue","Reminderoverdue","createRepeatReminder","start","prescriptions","remindersplotTime","clone","createLogicalId","repeattype","repeatsize","AddReminders","eventStartDate","eventEndDate","Reminderprescription","sortreminder","pendingReminder","Prescriptionreminders","__calculatedactivationdatetime","activationinhours","isacknowledged","splice","Multiple_Reminders","Multiple_Reminders_With_The_Date","Multiple_Reminders_One_Day_Has_Passed","Multiple_Reminders_Has_Been_Acknowledged","AddCIDurationLine","sortedArray","linestartDatetime","LineEndline","timelineend","addevents","durationline","CurrentPrescriptionFlowArray","currentPresctionStatus","latestevent","valueOf","timelinestart","end","prescriptionid","startsWith","arrPrescriptionCurrentFlowRate","AddStackClassEvent","temp","from","Set","id","EventIsStackTrue","zoombooton","priviousEvent","pNext","lastevent","ISO_8601","currentEvent","diffMs","round","iscancel","stackButtons","checkIFMOAisPrescrib","formularycode","__codes","terminology","code","codeobject","prescriptioncontext_id","MetaPrescriptioncontext","context","Inpatient","AddPRNFutureLine","prnPrescriptions","iscurrent","EnterInError","lastadmited","frequencysize","isReportview","CreateWithheldEvents","Admission","posologyloopCount","loopPrescription","iscritical","pslg","dischargedatetime","MaxEventDate","minEventDate","addAdministeredEvent","Administer_PRN","addInfutionEvent","addProtocolEvents","addLogicalEvent","repitTimes","minemumDate","min","apply","maximumDate","max","dateDiff","ploteDate","createLogicalevents","lastdose","plotdose","repeatlastdayuntil","daystoplot","dosetransfer","transEvent","futureTransferevent","isadditionaladministration","dosingdaysfrequencysize","logical_ID","doseprescription","isdoseCancle","canceldose","doctorcomporm","isTitrationDone","dosetransferDate","current","diffMins","Administration_withheld_by_doctor","Administration_requires_doctors_confirmation_Due","Administration_requires_doctors_confirmation_Late","Administration_requires_doctors_confirmation_Planned","Due_Administration","Late_Administration","Planned_Administration","medicationadministration","addAdministeredEventForDeletedPSLG","plannedtime","administeredtime","plannedinfustionValue","planneddosesize","administredinfusionValue","maxdose","planneddosesizerangemax","plannedstrengthneumerator","Administration_Defered","Administration_Failed","Completed_Administration","Dose_administered_is_differnt_from_prescribed","isdifferentproductadministered","Dose_Administered_Is_A_Different_Product_From_Prescribed","Dose_Administered_Early_Is_A_Different_Product_From_Prescribed","Administration_Completed_early","Dose_administered_early_is_differnt_from_prescribed","Dose_Administered_Late_Is_A_Different_Product_From_Prescribed","Administration_Completed_late","Dose_administered_late_is_differnt_from_prescribed","eventdate","iseventInaway","PersonAwayPeriod","isenabled","awayfrom","awayto","dosedate","infutionlist","continuityid","PlotNonDoseAdminsterEvensForCI","allDoses","createAdmiseredInfusionEvents","createInfusioniEvents","startDose","EndDosetime","linkedinfusionid","linkedinfusion","startDosetime","repeatDays","startFlowrate","administeredevent","plotstartDosetime","logicalId_1","Administration_withheld_by_doctor_Infution","getTimeDiff","logicalId_2","doserate","infusiondoserate","startcount","Recordadditionaladministration","Infusiondue","InfusionLate","Infusionplanned","plotEndDosetime","logicalId_3","dosetransferDateend","logicalId_4","logicalId_5","infusionEndEvent","eventdatetime","InfusionCompleteddone","InfusionCompletedLate2","InfusionCompletedEarly2","InfusionCompletiondue","InfusionCompleteoverdue","Infusioncompletionplanned","durationEnd","PloteFutureFlowRateChange","firstDosetime","currentFlowRate","startFlowRateAdministered","allinfusion","_sequenceid","originalStarttime","Maintain_Infusion_Rate_Due","IncreaseInfusionRateDue","DecreaseInfusionRateDue","Maintain_Infusion_Rate_Late","IncreaseInfusionRateLate","DecreaseInfusionRateLate","Maintain_Infusion_Rate_Planned","IncreaseInfusionRatePlanned","DecreaseInfusionRatePlanned","allNonAdministeredEvent","infusionevent","BolusAdministrationCompleted","InfusionRatePaused","ContinuousInfusionSetChanged","Continuousinfusionsyringeorbagchange","allAdministered","EnterInErrorbolus","plannedinfustionrate","AdministrationInfution_Failed","TempEventtype","Infusiondone","isinfusionkitchange","Adjusted_Decrease_Infusion_Rate_Done_Kit_Change","DecreaseInfusionRatedone","Adjusted_Increase_Infusion_Rate_Done_Kit_Change","IncreaseInfusionRatedone","Adjusted_Maintain_Infusion_Rate_Done_Kit_Change","Maintain_Infusion_Rate_done","AdjustedIncreaseInfusionRatedone","AdjustedDecreaseInfusionRatedone","AdjustedsameInfusionRatedone","InfusionCompletedLate","DecreaseInfusionRatedonelate","IncreaseInfusionRatedonelate","MaintainInfusionRatedonelate","AdjustedIncreaseInfusionRatedonelate","AdjustedDecreaseInfusionRatedonelate","FaliedtoAdjustInfusionRatedonelate","InfusionCompletedEarly","DecreaseInfusionRatedoneearly","IncreaseInfusionRatedoneearly","MaintainInfusionRatedoneearly","AdjustedIncreaseInfusionRatedoneearly","AdjustedDecreaseInfusionRatedoneearly","FaliedtoAdjustInfusionRatedoneearly","datetime","factory","ɵfac","providedIn","PrescriptionStatus","med_r1","__ingredients","ɵɵpipeBind1","posologyid","dosesizerangemax","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_3_span_1_span_3_Template","dosestrengthrangemax","dosestrengthunits","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_3_span_2_span_3_Template","dosestrength","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_3_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_3_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_5_span_1_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_5_span_2_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_5_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_5_span_2_Template","fromPrinting","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_5_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_6_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_span_7_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_span_1_Template","doseformsize","doseformunits","PrescriptionInfusionPrintTemplateComponent_span_0_span_8_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_8_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_5_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_7_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_8_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_9_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_10_Template","PrescriptionInfusionPrintTemplateComponent_span_0_span_11_Template","ismodifiedrelease","isgastroresistant","i_r3","PrescriptionInfusionPrintTemplateComponent_span_2_span_3_Template","totalinfusionvolume","PrescriptionInfusionPrintTemplateComponent_span_6_span_4_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_4_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_4_span_3_Template","ismedicinalgas","PrescriptionInfusionPrintTemplateComponent_span_6_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_6_span_5_Template","primaryMedication","PrescriptionInfusionPrintTemplateComponent_span_7_span_3_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_7_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_7_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_7_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_9_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_9_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_11_span_4_Template","device","PrescriptionInfusionPrintTemplateComponent_span_12_span_4_Template","oxygenAdditionalInformation","PrescriptionInfusionPrintTemplateComponent_span_13_span_6_Template","routes","titrationtargetmin","titrationtargetunits","titrationtargetmax","PrescriptionInfusionPrintTemplateComponent_span_14_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_14_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_14_span_4_Template","titrationtype","choosenDays","prescriptionAdditionalCondition","prnmaxdosestring","PrescriptionInfusionPrintTemplateComponent_span_30_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_32_span_5_span_3_Template","PrescriptionInfusionPrintTemplateComponent_span_32_span_5_span_4_Template","totalquantity","totalquantitytext","PrescriptionInfusionPrintTemplateComponent_span_32_span_4_Template","PrescriptionInfusionPrintTemplateComponent_span_32_span_5_Template","PrescriptionInfusionPrintTemplateComponent_span_32_span_6_Template","PrescriptionInfusionPrintTemplateComponent_span_32_span_7_Template","plannedTime","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_1_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_2_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_2_span_2_Template","lastmodifiedbyrole","prescriptionstatus","prescriptionEventComment","dischargeSummarystatus","dischargeSummaryComment","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_span_9_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_div_11_Template","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_div_12_Template","componenttype","lastmodifiedby","IsShowUserRole","PrescriptionInfusionPrintTemplateComponent_span_34_span_1_Template","PrescriptionInfusionPrintTemplateComponent_span_35_span_2_span_3_Template","indicationstring","PrescriptionInfusionPrintTemplateComponent_span_35_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_35_span_4_Template","indication","showPrescriptionHistory","isMOAPrescription","currentPosology","additionalcondition","MetaPrescriptionadditionalcondition","oxydevice","oxygenDevices","oxygendevices_id","modifiedFrom","GetRoutes","GetChoosenDays","getOxygenAditionalInformation","getMOAPrescription","GetIndication","prescriptionEvent","GetDischargeSummaryMessage","prnmaxdose","GetPRNMaxDoseDisplayString","JSONTryParse","Number","arrayAdd","oxygenadditionalinfo","oxygenprescriptionadditionalinfo","oxygenprescriptionadditionalinfo_id","additionalinfo","GetAdditionalcondition","prescriptionadditionalconditions_id","prescription_stop_statusid","stopped","cancelled","prescription_cancel_statusid","prescription_suspend_statusid","suspended","allPrescription","Discharge","sumstatus","allStop","comment","addedToChart","allActive","allSuspend","inputs","decls","vars","consts","template","PrescriptionInfusionPrintTemplateComponent_Template","PrescriptionInfusionPrintTemplateComponent_span_0_Template","PrescriptionInfusionPrintTemplateComponent_span_2_Template","PrescriptionInfusionPrintTemplateComponent_span_5_Template","PrescriptionInfusionPrintTemplateComponent_span_6_Template","PrescriptionInfusionPrintTemplateComponent_span_7_Template","PrescriptionInfusionPrintTemplateComponent_span_8_Template","PrescriptionInfusionPrintTemplateComponent_span_9_Template","PrescriptionInfusionPrintTemplateComponent_span_10_Template","PrescriptionInfusionPrintTemplateComponent_span_11_Template","PrescriptionInfusionPrintTemplateComponent_span_12_Template","PrescriptionInfusionPrintTemplateComponent_span_13_Template","PrescriptionInfusionPrintTemplateComponent_span_14_Template","PrescriptionInfusionPrintTemplateComponent_span_15_Template","PrescriptionInfusionPrintTemplateComponent_span_16_Template","PrescriptionInfusionPrintTemplateComponent_span_17_Template","PrescriptionInfusionPrintTemplateComponent_span_18_Template","PrescriptionInfusionPrintTemplateComponent_span_19_Template","PrescriptionInfusionPrintTemplateComponent_span_20_Template","PrescriptionInfusionPrintTemplateComponent_span_21_Template","PrescriptionInfusionPrintTemplateComponent_span_22_Template","PrescriptionInfusionPrintTemplateComponent_span_23_Template","PrescriptionInfusionPrintTemplateComponent_span_24_Template","PrescriptionInfusionPrintTemplateComponent_span_25_Template","PrescriptionInfusionPrintTemplateComponent_span_26_Template","PrescriptionInfusionPrintTemplateComponent_span_27_Template","PrescriptionInfusionPrintTemplateComponent_span_28_Template","PrescriptionInfusionPrintTemplateComponent_span_29_Template","PrescriptionInfusionPrintTemplateComponent_span_30_Template","PrescriptionInfusionPrintTemplateComponent_span_31_Template","PrescriptionInfusionPrintTemplateComponent_span_32_Template","PrescriptionInfusionPrintTemplateComponent_span_34_Template","PrescriptionInfusionPrintTemplateComponent_span_35_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_3_span_1_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_3_span_2_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_3_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_3_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_4_span_5_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_4_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_span_5_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_2_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_2_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_4_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_5_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_span_6_Template","PrescriptionNonInfusionPrintTemplateComponent_span_5_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_5_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_1_span_1_span_3_Template","planneddoseunit","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_1_span_1_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_1_span_2_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_1_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_span_2_Template","ɵɵtextInterpolate4","plannedstrengthneumeratorunits","plannedstrengthdenominator","plannedstrengthdenominatorunits","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_2_span_1_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_2_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_2_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_2_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_3_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_span_3_Template","chosenDays","prescriptionAdditionalConditions","PrescriptionNonInfusionPrintTemplateComponent_span_19_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_21_span_4_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_21_span_4_span_4_Template","PrescriptionNonInfusionPrintTemplateComponent_span_21_span_4_Template","PrescriptionNonInfusionPrintTemplateComponent_span_21_span_5_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_2_span_1_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_2_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_9_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_11_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_span_13_Template","GetChosenDays","GetAdditionalConditions","PrescriptionNonInfusionPrintTemplateComponent_Template","PrescriptionNonInfusionPrintTemplateComponent_span_0_Template","PrescriptionNonInfusionPrintTemplateComponent_span_2_Template","PrescriptionNonInfusionPrintTemplateComponent_span_3_Template","PrescriptionNonInfusionPrintTemplateComponent_span_4_Template","PrescriptionNonInfusionPrintTemplateComponent_span_5_Template","PrescriptionNonInfusionPrintTemplateComponent_span_6_Template","PrescriptionNonInfusionPrintTemplateComponent_span_7_Template","PrescriptionNonInfusionPrintTemplateComponent_span_8_Template","PrescriptionNonInfusionPrintTemplateComponent_span_9_Template","PrescriptionNonInfusionPrintTemplateComponent_span_10_Template","PrescriptionNonInfusionPrintTemplateComponent_span_11_Template","PrescriptionNonInfusionPrintTemplateComponent_span_12_Template","PrescriptionNonInfusionPrintTemplateComponent_span_13_Template","PrescriptionNonInfusionPrintTemplateComponent_span_14_Template","PrescriptionNonInfusionPrintTemplateComponent_span_15_Template","PrescriptionNonInfusionPrintTemplateComponent_span_16_Template","PrescriptionNonInfusionPrintTemplateComponent_span_17_Template","PrescriptionNonInfusionPrintTemplateComponent_span_18_Template","PrescriptionNonInfusionPrintTemplateComponent_span_19_Template","PrescriptionNonInfusionPrintTemplateComponent_span_20_Template","PrescriptionNonInfusionPrintTemplateComponent_span_21_Template","PrescriptionNonInfusionPrintTemplateComponent_span_22_Template","jsPDF","Canvg","DOMPurify","html2canvas","pdfFonts","i_r2","dse_r1","PrintDischargeComponent_div_0_ng_container_33_div_5_div_7_div_3_Template","unchanged_r3","showDoses","PrintDischargeComponent_div_0_ng_container_33_div_5_div_7_Template","PrintDischargeComponent_div_0_ng_container_33_div_5_div_8_Template","PrintDischargeComponent_div_0_ng_container_33_div_5_div_9_Template","PrintDischargeComponent_div_0_ng_container_33_div_5_div_13_Template","ctx_r3","PrintDischargeComponent_div_0_ng_container_33_div_5_Template","unChangedPres","i_r6","dse_r5","PrintDischargeComponent_div_0_ng_container_34_div_5_div_7_div_3_Template","changed_r7","reasonforediting","PrintDischargeComponent_div_0_ng_container_34_div_5_div_7_Template","PrintDischargeComponent_div_0_ng_container_34_div_5_div_8_Template","PrintDischargeComponent_div_0_ng_container_34_div_5_div_9_Template","PrintDischargeComponent_div_0_ng_container_34_div_5_div_13_Template","PrintDischargeComponent_div_0_ng_container_34_div_5_div_17_Template","PrintDischargeComponent_div_0_ng_container_34_div_5_Template","changedPres","i_r9","dse_r8","PrintDischargeComponent_div_0_ng_container_35_div_5_div_7_div_3_Template","stopped_r10","PrintDischargeComponent_div_0_ng_container_35_div_5_div_7_Template","PrintDischargeComponent_div_0_ng_container_35_div_5_div_8_Template","PrintDischargeComponent_div_0_ng_container_35_div_5_div_9_Template","PrintDischargeComponent_div_0_ng_container_35_div_5_div_13_Template","PrintDischargeComponent_div_0_ng_container_35_div_5_Template","stoppedPres","i_r12","dse_r11","PrintDischargeComponent_div_0_ng_container_36_div_5_div_7_div_3_Template","suspended_r13","PrintDischargeComponent_div_0_ng_container_36_div_5_div_7_Template","PrintDischargeComponent_div_0_ng_container_36_div_5_div_8_Template","PrintDischargeComponent_div_0_ng_container_36_div_5_div_9_Template","PrintDischargeComponent_div_0_ng_container_36_div_5_div_13_Template","PrintDischargeComponent_div_0_ng_container_36_div_5_Template","suspendedPres","i_r15","dse_r14","PrintDischargeComponent_div_0_ng_container_37_div_5_div_8_div_3_Template","ne_r16","PrintDischargeComponent_div_0_ng_container_37_div_5_div_8_Template","PrintDischargeComponent_div_0_ng_container_37_div_5_div_9_Template","PrintDischargeComponent_div_0_ng_container_37_div_5_div_10_Template","PrintDischargeComponent_div_0_ng_container_37_div_5_div_14_Template","ɵɵclassMap","PrintDischargeComponent_div_0_ng_container_37_div_5_Template","newPres","notesDisplayData","modifiedon","modifiedby","PrintDischargeComponent_div_0_ng_container_38_div_14_Template","PrintDischargeComponent_div_0_ng_container_38_div_15_Template","dischargeComments","notes","PrintDischargeComponent_div_0_ng_container_33_Template","PrintDischargeComponent_div_0_ng_container_34_Template","PrintDischargeComponent_div_0_ng_container_35_Template","PrintDischargeComponent_div_0_ng_container_36_Template","PrintDischargeComponent_div_0_ng_container_37_Template","PrintDischargeComponent_div_0_ng_container_38_Template","PrintDischargeComponent_div_1_ng_container_2_Template","customTemplate","pdfMake","require","htmlToPdfmake","vfs","view","dimensions","saveTitle","measuringUnit","destroyComponent","getRecordedNotes","address","arrreconcilation","AdditionalInfo","latestNotes","NodesType","typeOfMedicine","getTherapyType","getAllergiesList","downloadAsPDF","printType","htmlToPdfOptions","pdfTable","dischargeSummaryElement","html","innerHTML","documentDefinition","header","currentPage","pageCount","pageSize","columns","allergiesString","alignment","style","footer","today","dd","String","padStart","mm","yyyy","pageMargins","Times","normal","bold","italics","bolditalics","styles","fontSize","color","createPdf","open","pdf","callback","setProperties","getNumberOfPages","setPage","setFont","output","form","toLowerCase","getAllergyListForPersonURI","allergyIntoleranceList","clinicalstatusvalue","string","idx","causativeagentdescription","PrintDischargeComponent_Query","PrintDischargeComponent_div_0_Template","PrintDischargeComponent_div_1_Template","headerLabelText","colFieldName","noOfTemplates","isTemplateNumber","getTemplates","hide","checkTemplateNumber","target","checkDecimal","charCode","BsModalRef","TemplateNumberComponent_Template","TemplateNumberComponent_Template_button_click_3_listener","ɵɵtwoWayListener","TemplateNumberComponent_Template_input_ngModelChange_13_listener","ɵɵtwoWayBindingSet","TemplateNumberComponent_Template_input_keyup_13_listener","TemplateNumberComponent_Template_input_keypress_13_listener","TemplateNumberComponent_div_14_Template","TemplateNumberComponent_div_15_Template","TemplateNumberComponent_Template_button_click_19_listener","TemplateNumberComponent_Template_button_click_22_listener","ɵɵtwoWayProperty","transform","isInteger","numToWords","pure","num","str","isEmpty","xs","take","drop","comp","g","not","chunk","makeGroup","ones","tens","huns","thousand","DrugChart","Medicationsummary","protocoldose","ProtocalDose","Posology","Dose","Medication","Medicationcodes","Medicationingredients","Prescriptionroutes","Medicationroutes","MetaReviewstatus","Oxygendevices","MetaPrescriptionduration","PrescriptionSource","Orderset","OrdersetPrescription","FormularyDescendent","AdministerMedication","AdministerMedicationcodes","AdministerMedicationingredients","ComplianceAid","PrescriptionMedicaitonSupply","PrescriptionEvent","SupplyRequest","Prescriptionnursinginstructions","Prescriptionreviewstatus","Remindersack","Epma_Medsonadmission","Epma_Dischargesummarry","Epma_Medsondischarge","Epma_Moaprescriptions","Epma_Modprescriptions","PrescriptionIndication","Medreconciliation","NursingInstruction","category","instruction","AdministrationWitness","Bannerwarningoverrides","Outpatientprescriptions","Opprescriptiontherapies","DSMedSupplyRequiredStatus","SupplyRequestMedications","Opnotes","EmailModel","MetaComplianceAid","NursingInstructions","WarningService","GetExistingWarnings","refreshfromdb","RefreshCurrentMedicationWarnings","CurrentPrescriptions","patientInfo","UpdateOverrideMsg","GetNewWarnings","ProspectivePrescriptions","isEdit","CommitNewWarningsToDB","SetExistingWarningStatus","SetNewWarningStatus","ClearNewWarnings","WarningContexts","GetWarningsInstanceWithCreate","GetWarningsInstance","WarningContext","PatientInfo","Allergens","Conditions","Allergyintolerance","Personwarningupdate","Encounter","TimelineZoomLevel","animation","c","filterClause","paramName","paramValue","ordergroupbystatement","action","DataContract","HttpHeaders","firstValueFrom","environment","httpClient","sequencenumber","SynchronousPost","endpoint","synapsenamespace","synapseentityname","postdata","sequence","sequenceoperation","SynchronusPostData","version","production","callApiPost","uri","callApiGet","synchronouspost","endsWith","namespace","entityname","deleteRequest","callApiDelete","getRequestWithoutAuth","callApiGetWithoutAuth","get","catch","headers","post","delete","HttpClient","AuthenticationService","jwtDecode","DoseForm","DoseType","v4","uuid","GetCurrentPrescriptionsForWarnings","wc","ip","mp","active","modified","restarted","pc","mod","op","opid","opp","optherapies","opprescriptions","Outpatient","subject","showDischargeSummaryNotes","isreportview","batchIndex","linkedBatchArray","isTCI","isTCICancelled","isTitrationPopOverOpen","currentBasket","openPrescriptionHistory","openAdditionalAdministration","roleActions","obsScales","observation","personscale","isWeightCaptured","isWeightCapturedForToday","isHeightCaptured","loggedInUserRoles","remainingEvents","administrationWitness","medReconcelationCompleteStatus","PatientDrugHistory","outpatientPrescribingMode","isOP","warningServiceIPContextInitComplete","personAgeAtAdmission","personAgeToday","personAgeInDays","currentEWSScale","prescriptionId","outPatientPrescriptionSelected","pos","r","__editingprescription","__editingreviewstatus","__initialreminder","MetaPrescriptionDuration","PrescriptionBag","MetaPrescriptionSource","idealWeightValue","refWeightRecordedOn","allergyintolerance","warningServiceMODContext","refWeightType","DoseEventsHistory","InfusionEventsHistory","MedicationadministrationHistory","AdministermedicationHistory","decodeAccessToken","Error","AuthoriseAction","enableRBAC","actionname","getPrescriptionBags","allprescriptionbatches","createdon","letterBatch","Batch","batchletter","getlinkedArrayLetter","getMultilinkPrescriptionBags","parentbag","multilink","linkprescri","getDateTimeinISOFormat","hours","getHours","s","getSeconds","getMilliseconds","minutes","getMinutes","setHours","setMinutes","year","dt","hrs","mins","secs","msecs","returndate","setPatientAgeAtAdmission","setAgeAtEarliestPosologyStartDate","msg","setCurrentScale","scale","observationscaletype_id","scaletypename","otherindications","checkMedicineTypeForMoa","getchangestatus","ismoa","medcode","issame","ComparePrescriptions","UpdatePrescriptionWarningSeverity","parray","ws","highwarnings","primaryprescriptionid","secondaryprescriptionid","severity","__severityWarning","__warningOverrideREQ","overriderequired","RefreshWarningsFromApi","minposologystartdateexisting","UpdateDataVersionNumber","refreshTemplate","closeWarnings","IsDataVersionStaleError","ShowRefreshPageMessage","distinct","MedicationHasFlag","detail","clinicalTrialMedication","isCustomControlledDrug","emaAdditionalMonitoring","blackTriangle","criticalDrug","expensiveMedication","highAlertMedication","rnohFormularyStatuscd","unlicensedMedicationCd","isBloodProduct","pos_id","p1","d1","descriptive","strength","units","rp","rp1","routecode","r1","setIdealBodyWeight","isNaN","saveResponse","hasOwnProperty","error","RefreshPageWithStaleError","refreshed","splitmsg","isArray","serverversion","versionobject","serverversion_userid","createdby","GroupingBasics","val","dcgroup","isIvFluid","customrows","ivfluids","additionalCode","toUpperCase","codematteched","Presindecation","drug_bnf","bnfrow","padEnd","isbnfmatch","arrcode","MatchConditions","ClassificationCodes","bnf","Code","isindecationmatch","arrindecation","Indications","Indication","MatchType","dcgroupadded","GroupName","prnMaxDoseObj","maxdenominator","d_units","maxnumerator","n_units","maxtimes","GetMostFrequentElementInArray","compare","mostFreq","reduce","acc","HideWarning","innerText","click","currentposology","lastdosedate","tempdose","iteration","assign","cd_startdtm","cd_enddtm","chosendays_dose_dates","days_of_week_selected","newenddate","startdate","ci","endevent","rate","lasteventstartdate","de","adminrecord","doseevent","GetDefaultSupplyRequestObject","doseSize","supplyRequest","primaryMed","producttype","toLocaleLowerCase","medicationCode","isFormulary","isformulary","requests","medication_id","requeststatus","epma_supplyrequest_id","requestedon","requestedby","personid","encounterid","requestednoofdays","requestquantity","requestedquantityunits","daterequired","labelinstructiosrequired","additionaldirections","ordermessage","IsNullOrEmpty","o","GetAdministrationDoseType","medication","doseFormType","doseFormCd","t","formularyIngredients","ingredientName","Continuous","NA","dose_type","dose_units","productType","ing","vtm_dose_units","ig","strengthValueNumeratorUnitDesc","emptyneumerators","unitDoseFormUnitsDesc","Discrete","ingredients","strength_value_denominatorunits","strengthValueDenominatorUnitDesc","strength_value_neumeratorunits","strength_value_denominator","strengthValueDenominator","strength_value_neumerator","strengthValueNumerator","IsBasicFluid","formDesc","dose_strength_neumerator_units","dose_strength_denominator_units","dose_strength_neumerator","dose_strength_denominator","formularyAdditionalCodes","jsonstring","CalculatePrescribedConcentration","primaryPosology","vtmstyle","orderformtype","prescribedConcentration","totalvolume","diluents","concentration","FixToDecimalPlaces","components","comp1","comp2","Infinity","to","fromdate","duration","days","asDays","finalstringarray","nextrefresh","_this","_asyncToGenerator","currentDateMs","setSeconds","requestToken","_this2","toPromise","resp","currentDateTime","parseInt","expires_in","Common","RefWeightType","UpsertTransactionManager","createSupplyRequestFilter","responseArray","op_encounter_placeholder","getDSMedSupplyRequest","pId","getSupplyRequestMedication","srId","reminders","getRemindersAck","__remindertext","__lastmodifiedby","medicationAdministration_op","createEventsFilter","infusionEvent","responseArrayMed","responseArrayMed_op","responseArrayDose","__doseEvent","responseArrayInfusion","PharmacyReviewReset","prescriptioncurrent","event_id","prescriptionreviewstatus","epma_prescriptionreviewstatus_id","precriptionedited","prescriptionstatuschange","epma_prescriptionevent_id","modifieddatetime","reviewcomments","oldcorrelationid","newcorrelationid","upsertManager","beginTran","addEntity","save","SendEmailForNonFormularyRequest","MedicationName","Quantity","dateRequired","Model","Username","EmailSettings","emailFrom","fromName","emailTo","password","replaceAll","UndoTransfer","doselist","existingDoseEvent","po","alldoselist","findIndex","currentend","createEndevent","admindose","iscancelled","doseevents_id","entities","transferCIAndRatevariable","doses","transferStart","Transfertype","newDoseDateTime","timediffback","newDoseEventId","newDoseId","startDateTime","v","fromDate","originalLogicid","endtDatetemp","endaddedtime","transferRateInfution","nextstartItem","lastenditem","nexttime","endtime","currentendtime","dosesrate","testcurrenttime","timediffForword","getmedreconciliaCompletedobject","medreconciliationobject","epma_medreconciliation_id","medreconciliationhistory","iscomplete","teckObject","role","pharmacistObject","GetManageAwayPeriod","createPrescriptionFilter","correlationid","GetNursingInstructionsAndCustomWarnings","meta","field","getMedicationAdministration","updateDoseForPrescription","pid","getDoseEvents","getInfusionEvents","getMedicationAdministrationHistory","createAdministrationHistoryFilter","getProductHistory","getWitnessAuthHistory","createAdministerMedHistoryFilter","getPrescriptionAdministrationHistory","createPrescriptionAdministrationHistoryFilter","getDoseEventsHistory","getInfusionEventsHistory","_index","getAllergy","allergens","causativeagentcodesystem","uname","causativeagentcode","GetDiagnosis","conditions","clinicalstatus","diagnosistext","diagnosiscode","bsa","weight","warningcontextid","wservice","curr_warningupdate","curr_dbWarningUpdate","curr_patientInfo","epma_personwarningupdate_id","c1","ComparePatientInfoObjects","c2","c3","obj_1","obj_2","createWeightFilter","lastObservedDate","observationeventdatetime","method","estimated","actual","todayMoment","lastObservedMoment","createHeightFilter","pos1","para","jsonobj","createPrescriptionRoutesFilter","inpatientid","dischargeid","ordersetid","moaid","filtered","medcodes","unprocessedCodes","exitcounter","splitrequests","SplitOnLoadRuleBoundReqs","triggercount","SplitOnLoadRuleBoundReqsTrigger","terminologybaseuri","perreq_count","lastreq_count","st","ed","primarymedication","dmd","formulary","__nursinginstructions","__customWarning","__drugindications","ignoreDuplicateWarnings","__ignoreDuplicateWarnings","customWarnings","titrationTypes","desc","titrationtypecode","endorsements","medusaPreparationInstructions","licensedUses","u","unLicensedUses","GetNewCodeForChangedDMDCodes","counter","newcodes","SearchFormulary","results","oldcode","allmatches","newcode","searthTerm","SearchFormulary_PostData","searchTerm","formularyStatusCd","GetMedicationSupplyHistory","createMedicationSupplyHistoryFilter","RefreshIfDataVersionChanged","nextRefresh","serverversion_versionid","moduleDataVersion","versionid","SetUnits","getProductDetail","GetAwayPeriodHistory","nursing","GetNursingInstructionHistory","history","historyData","CopyPatientDrugsFromIPToDischarge","prescriptionBasket","modcontextid","ipcontextid","stoppedid","cancelledid","mods","ips","p_mods","p_ip","patientDrugs","epma_prescriptionmedicaitonsupply_id","noofdays","availablequantity","quantityunits","complianceaid","selectedproductcode","selectproductcodetype","ownsupplyathome","resupplyfrom","updatesouce","prescribedmedicationid","quantityentrydate","OpPrescriptionType","OpPrescriptionCategory","OpDispensing","FrequencyType","IntervalType","PrescriptionDuration","DaysOfWeek","ChosenDays","FormContext","ReconciliationListActions","AdministrationStatusReason","LevelOfSelfAdmin","AdministrationType","ChangeInfusion","SupplyRequestStatus","RoleAction","marRecords","createDosesForTemplate","addMarObjectToPrescriptionId","addAdditionalDoses","presId","doseToShow","doseType","currDoses","currDose","dateTime","doseDescription","presAdditionalCondition","additional_condition","next5DayIntermittedData","left","right","utc","administeredIntermittedDose","splitDoseID","intermittedPosology","intermittedDose","Subject","encounterChange","personIdChange","apiServiceReferenceChange","frameworkEvent","weightChanged","additionalAdministration","drugInformation","addBolus","changeInfusion","adjustInfusion","pauseInfusion","restartInfusion","refreshDrugChart","editPrescription","reloadPrescriptions","viewReminder","patientDrug","pharmacyReview","reconcillationNotes","CompleteReconciliation","nursingInstruction","closePform","movePatientDrugs","showMODWarnings","closeMODWarnings","closeAppComponentPopover","showopAdministration","closeBannerWarnings","captureWeight","titrationChart","endInfusion","loadModule","reloadCurrentModule","recheckBasketWarnings","showOPWarnings","closeOPWarnings","showAwayPeriod","DataSet","timelineZoomLevel","configureOptions","toptimeline","groups","mapGroupids","filterValue","med","customgroup","cl","container","update","loadEvents","epma_personawayperiod_id","personAwayHeading","className","tooltip","addUpdateItem","arrp","getConcadeCode","concadCode","groupingBasics","drug_fdb","fdbfow","drugMatchCode","configMatchCode","CodeType","isSkipStat","SkipStatGroup","isInStat","groupid","orientation","setDate","maxUsercanscroll","minUsercanscroll","stack","zoomKey","zoomMin","zoomMax","axis","xss","disabled","filterOptions","whiteList","strong","takeUntil","destroy$","savedDetails","baseApiUrl","apiServiceObj","synapseNamespace","entityName","dbOp","dataToSave","entity","UpsertEntity","onSuccess","onError","synchronousPost","url","pipe","newEntityDetails","err","getSavedEntity","entityToFind","complete","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[34]}